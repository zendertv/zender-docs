{
	"info": {
		"_postman_id": "8571ffbe-68c0-e4f7-d65b-7990bb749f09",
		"name": "Zender Public API",
		"description": "API documentation for all the Zender Microservices",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Player",
			"item": [
				{
					"name": "Core",
					"item": [
						{
							"name": "Get Target",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "ea6e59f1-17c0-4102-9f97-1fb38b1bc7b2",
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code is 200\"] = responseCode.code === 200;",
											"var data = JSON.parse(responseBody);",
											"tests[\"Response has streams\"] = data.channels.length > 0;",
											"postman.setEnvironmentVariable(\"channelId\", data.channels[0].id);"
										]
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{coreApiHost}}/v1/targets/{{targetId}}",
									"host": [
										"{{coreApiHost}}"
									],
									"path": [
										"v1",
										"targets",
										"{{targetId}}"
									]
								},
								"description": "Get a target by id or alias.\n\nThis is generally the first call the client will make since it contains all the necessary information to proceed.\n\nA target contains configuration for accessing the different functionalities like authentication, pusher eventing, content upload, ... It also has information about theming, locales and ui related settings.\n\nWhen fetching the target you also retrieve a list of associated channels.\n\nIt is possible to fetch the target by the human readable alias attribute instead of by the id (see \"Get Target (by alias)\" example).\n\n| Permissions | no token | anonymous token | provider token | admin token |\n| ----------- | :------: | :-------------: | :------------: | :---------: |\n| Get Target  | x        | x               | x              | x           |"
							},
							"response": [
								{
									"name": "Get Target (by alias)",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{coreApiHost}}/v1/targets/target-alias?alias=true",
											"host": [
												"{{coreApiHost}}"
											],
											"path": [
												"v1",
												"targets",
												"target-alias"
											],
											"query": [
												{
													"key": "alias",
													"value": "true"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Access-Control-Allow-Credentials",
											"value": "true",
											"name": "Access-Control-Allow-Credentials",
											"description": "Indicates whether or not the response to the request can be exposed when the credentials flag is true. When used as part of a response to a preflight request, this indicates whether or not the actual request can be made using credentials."
										},
										{
											"key": "Access-Control-Allow-Headers",
											"value": "Content-Type, Authorization, Accept, Cache-Control, X-Requested-With, Origin",
											"name": "Access-Control-Allow-Headers",
											"description": "Used in response to a preflight request to indicate which HTTP headers can be used when making the actual request."
										},
										{
											"key": "Access-Control-Allow-Methods",
											"value": "GET,PUT,POST,DELETE",
											"name": "Access-Control-Allow-Methods",
											"description": "Specifies the method or methods allowed when accessing the resource. This is used in response to a preflight request."
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*",
											"name": "Access-Control-Allow-Origin",
											"description": "Specifies a URI that may access the resource. For requests without credentials, the server may specify '*' as a wildcard, thereby allowing any origin to access the resource."
										},
										{
											"key": "Cache-Control",
											"value": "public, max-age=5",
											"name": "Cache-Control",
											"description": "Tells all caching mechanisms from server to client whether they may cache this object. It is measured in seconds"
										},
										{
											"key": "Connection",
											"value": "keep-alive",
											"name": "Connection",
											"description": "Options that are desired for the connection"
										},
										{
											"key": "Content-Length",
											"value": "5253",
											"name": "Content-Length",
											"description": "The length of the response body in octets (8-bit bytes)"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8",
											"name": "Content-Type",
											"description": "The mime type of this content"
										},
										{
											"key": "Date",
											"value": "Tue, 17 Apr 2018 12:45:05 GMT",
											"name": "Date",
											"description": "The date and time that the message was sent"
										},
										{
											"key": "X-Response-Time",
											"value": "82ms",
											"name": "X-Response-Time",
											"description": "Custom header"
										},
										{
											"key": "x-server-time",
											"value": "2018-04-17T12:45:04.966Z",
											"name": "x-server-time",
											"description": "Custom header"
										}
									],
									"cookie": [],
									"body": "{\n    \"id\": \"2808b5c6-76a1-4d18-93f5-23ea9f6246da\",\n    \"name\": \"zender-api\",\n    \"alias\": \"zender-api\",\n    \"config\": {\n        \"auth\": {\n            \"login\": {\n                \"url\": \"https://api.zender.tv/v1/auth/login\"\n            },\n            \"providers\": {\n                \"youtube\": {\n                    \"clientId\": \"721563578034-8h5gt7grfb857fsisbom90ln2k1n747h.apps.googleusercontent.com\"\n                },\n                \"google\": {\n                    \"clientId\": \"721563578034-8h5gt7grfb857fsisbom90ln2k1n747h.apps.googleusercontent.com\"\n                },\n                \"device\": {},\n                \"facebook\": {\n                    \"enabled\": true,\n                    \"tokenUrl\": \"https://graph.facebook.com/me\",\n                    \"appId\": 690051904495300\n                }\n            }\n        },\n        \"pusher\": {\n            \"config\": {\n                \"encrypted\": true,\n                \"cluster\": \"eu\",\n                \"authEndpoint\": \"https://api.zender.tv/v1/auth/pusher\"\n            },\n            \"key\": \"e03e32164a92e6ee8ed2\"\n        },\n        \"search\": {\n            \"method\": \"POST\",\n            \"url\": \"https://api.zender.tv/v1/search\"\n        },\n        \"upload\": {\n            \"url\": \"https://api.zender.tv/v1/upload\",\n            \"method\": \"POST\"\n        },\n        \"stories\": {\n            \"url\": \"https://api.zender.tv/v1/stories/all\",\n            \"method\": \"GET\"\n        },\n        \"notifications\": {\n            \"method\": \"GET\",\n            \"url\": \"https://api.zender.tv/v1/notifications\"\n        },\n        \"topics\": [\n            {\n                \"name\": \"standard stream notifications\",\n                \"id\": \"5763a6d2-b3ab-4e6a-aee0-1ea63a06d354\"\n            },\n            {\n                \"name\": \"hot stream notifications\",\n                \"id\": \"be88e951-bbaf-4c16-a96a-f26da2eba763\"\n            }\n        ]\n    },\n    \"settings\": {},\n    \"theming\": {\n        \"misc\": {\n            \"logo\": {\n                \"square\": \"https://cdn.zender.tv/live/uploads/2808b5c6-76a1-4d18-93f5-23ea9f6246da/2018-04-09/5db24024-5b64-4359-a43a-7e52dfc6baaf.original.png\",\n                \"default\": \"https://cdn.zender.tv/live/uploads/2808b5c6-76a1-4d18-93f5-23ea9f6246da/2018-04-09/5db24024-5b64-4359-a43a-7e52dfc6baaf.original.png\"\n            },\n            \"background\": \"https://cdn.zender.tv/live/uploads/2808b5c6-76a1-4d18-93f5-23ea9f6246da/2018-03-29/4f768b4f-5c80-4b28-8c35-c48e767b234f.original.png\"\n        }\n    },\n    \"locales\": {\n        \"selection\": \"browser\",\n        \"en\": {\n            \"emojis\": {},\n            \"polls\": {\n                \"question\": {\n                    \"message\": \"Question:\"\n                },\n                \"nopoll\": {\n                    \"message\": \"There is no data available\"\n                },\n                \"closed\": {\n                    \"message\": \"Voting is no longer possible\"\n                }\n            },\n            \"shoutbox\": {\n                \"notloggedin\": {\n                    \"login\": \"Login\",\n                    \"loginwith\": \"Login with\"\n                },\n                \"errors\": {\n                    \"blocked\": \"Your message has not been sent. Your profile is blocked.\",\n                    \"resend\": \"Your message has not been sent. Please try again.\",\n                    \"profanity\": \"Your message has not been sent. Watch your language.\"\n                },\n                \"placeholder\": {\n                    \"blocked\": \"You can't leave a comment anymore. Your profile is blocked.\"\n                }\n            },\n            \"media\": {\n                \"geoblocked\": {\n                    \"modal\": {\n                        \"title\": \"Livestream unavailable\",\n                        \"body\": \"You can't see the requested livestream in this country.\",\n                        \"button\": \"OK\"\n                    },\n                    \"pancarte\": {\n                        \"text\": \"This video is not available in your country.\"\n                    }\n                },\n                \"noflash\": {\n                    \"modal\": {\n                        \"title\": \"Error while playing\",\n                        \"body\": \"This livestream is only viewable with Flash. We are working on a solution to play livestreams without Flash in the future.\",\n                        \"button\": \"OK\"\n                    },\n                    \"pancarte\": {\n                        \"text\": \"Your device/browser is not compatible to play this video.\"\n                    }\n                },\n                \"playbackerror\": {\n                    \"modal\": {\n                        \"title\": \"Error while playing\",\n                        \"body\": \"This livestream can't be loaded. Please try again later.\",\n                        \"button\": \"OK\"\n                    },\n                    \"pancarte\": {\n                        \"text\": \"There was an error encountered while loading this video.\"\n                    }\n                }\n            },\n            \"auth\": {\n                \"blocked\": {\n                    \"modal\": {\n                        \"title\": \"Blocked\",\n                        \"body\": \"Your comment seems inappropriate. You were blocked.\",\n                        \"button\": \"OK\"\n                    }\n                },\n                \"failed\": {\n                    \"modal\": {\n                        \"body\": \"Please try again\",\n                        \"button\": \"OK\",\n                        \"title\": \"Error while logging in\"\n                    }\n                }\n            },\n            \"stream\": {\n                \"nostreams\": {\n                    \"pancarte\": {\n                        \"text\": \"There are currently no broadcasts available.\"\n                    }\n                },\n                \"limitedexperience\": {\n                    \"modal\": {\n                        \"title\": \"You can't leave a comment.\",\n                        \"body\": \"Download our app or visit our website with a computer to leave a comment.\",\n                        \"button\": \"OK\"\n                    }\n                },\n                \"state\": {\n                    \"live\": \"Live in\"\n                }\n            }\n        },\n        \"default\": {\n            \"emojis\": {},\n            \"polls\": {\n                \"question\": {\n                    \"message\": \"Vraag:\"\n                },\n                \"closed\": {\n                    \"message\": \"Stemmen is niet meer mogelijk\"\n                },\n                \"nopoll\": {\n                    \"message\": \"Momenteel is er geen data beschikbaar\"\n                }\n            },\n            \"shoutbox\": {\n                \"notloggedin\": {\n                    \"login\": \"Meld je aan.\",\n                    \"loginwith\": \"Aanmelden met\"\n                },\n                \"errors\": {\n                    \"blocked\": \"Je bericht is niet verstuurd. Je werd geblokkeerd.\",\n                    \"resend\": \"Je bericht werd niet verstuurd. Probeer opnieuw aub.\",\n                    \"profanity\": \"Je bericht is niet verstuurd. Let op je taalgebruik.\"\n                },\n                \"placeholder\": {\n                    \"blocked\": \"Je kan niet meer reageren. Jouw profiel werd geblokkeerd.\"\n                }\n            },\n            \"media\": {\n                \"geoblocked\": {\n                    \"modal\": {\n                        \"body\": \"De opgevraagde livestream kan je niet bekijken in het land waar je je nu bevindt.\",\n                        \"button\": \"OK\",\n                        \"title\": \"Livestream niet beschikbaar\"\n                    },\n                    \"pancarte\": {\n                        \"text\": \"Deze video is helaas niet beschikbaar in jouw land.\"\n                    }\n                },\n                \"noflash\": {\n                    \"modal\": {\n                        \"body\": \"Deze livestream is alleen te bekijken met Flash. We werken aan een oplossing om livestreams in de toekomst ook zonder Flash af te spelen.\",\n                        \"button\": \"OK\",\n                        \"title\": \"Fout tijdens afspelen\"\n                    },\n                    \"pancarte\": {\n                        \"text\": \"Jouw toestel/browser voldoet niet om de video af te spelen.\"\n                    }\n                },\n                \"playbackerror\": {\n                    \"modal\": {\n                        \"body\": \"De livestream kan niet worden ingeladen. Probeer het later nog eens opnieuw.\",\n                        \"button\": \"OK\",\n                        \"title\": \"Fout tijdens afspelen\"\n                    },\n                    \"pancarte\": {\n                        \"text\": \"Er is een probleem bij het inladen van de video.\"\n                    }\n                }\n            },\n            \"auth\": {\n                \"blocked\": {\n                    \"modal\": {\n                        \"body\": \"Je hebt ongepaste berichten geplaatst. Je werd geblokkeerd.\",\n                        \"button\": \"OK\",\n                        \"title\": \"Geblokkeerd\"\n                    }\n                },\n                \"failed\": {\n                    \"modal\": {\n                        \"body\": \"Gelieve het opnieuw te proberen\",\n                        \"button\": \"OK\",\n                        \"title\": \"Fout bij aanmelden\"\n                    }\n                }\n            },\n            \"stream\": {\n                \"nostreams\": {\n                    \"pancarte\": {\n                        \"text\": \"Er zijn momenteel geen uitzendingen beschikbaar.\"\n                    }\n                },\n                \"limitedexperience\": {\n                    \"modal\": {\n                        \"body\": \"Download onze app of surf naar onze website met een computer om mee te reageren\",\n                        \"button\": \"OK\",\n                        \"title\": \"Je kan niet reageren\"\n                    }\n                },\n                \"state\": {\n                    \"live\": \"live binnen\"\n                }\n            }\n        }\n    },\n    \"status\": {\n        \"code\": \"ok\"\n    },\n    \"channels\": [\n        {\n            \"id\": \"3789b16d-8e9d-4071-9209-2dae67be3760\",\n            \"name\": \"Zender Trivia channel\",\n            \"createdAt\": \"2018-03-05T13:18:06.247Z\"\n        }\n    ]\n}"
								},
								{
									"name": "Get Target (by id)",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{coreApiHost}}/v1/targets/{{targetId}}",
											"host": [
												"{{coreApiHost}}"
											],
											"path": [
												"v1",
												"targets",
												"{{targetId}}"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Access-Control-Allow-Headers",
											"value": "Content-Type, Authorization, Accept, Cache-Control, X-Requested-With",
											"name": "Access-Control-Allow-Headers",
											"description": "Used in response to a preflight request to indicate which HTTP headers can be used when making the actual request."
										},
										{
											"key": "Access-Control-Allow-Methods",
											"value": "GET,PUT,POST,DELETE",
											"name": "Access-Control-Allow-Methods",
											"description": "Specifies the method or methods allowed when accessing the resource. This is used in response to a preflight request."
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*",
											"name": "Access-Control-Allow-Origin",
											"description": "Specifies a URI that may access the resource. For requests without credentials, the server may specify '*' as a wildcard, thereby allowing any origin to access the resource."
										},
										{
											"key": "Cache-Control",
											"value": "public, max-age=5",
											"name": "Cache-Control",
											"description": "Tells all caching mechanisms from server to client whether they may cache this object. It is measured in seconds"
										},
										{
											"key": "Connection",
											"value": "keep-alive",
											"name": "Connection",
											"description": "Options that are desired for the connection"
										},
										{
											"key": "Content-Length",
											"value": "4714",
											"name": "Content-Length",
											"description": "The length of the response body in octets (8-bit bytes)"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8",
											"name": "Content-Type",
											"description": "The mime type of this content"
										},
										{
											"key": "Date",
											"value": "Tue, 28 Nov 2017 14:07:40 GMT",
											"name": "Date",
											"description": "The date and time that the message was sent"
										},
										{
											"key": "X-Response-Time",
											"value": "22ms",
											"name": "X-Response-Time",
											"description": "Custom header"
										},
										{
											"key": "x-server-time",
											"value": "2017-11-28T14:07:40.350Z",
											"name": "x-server-time",
											"description": "Custom header"
										}
									],
									"cookie": [],
									"body": "{\n    \"id\": \"b8f99a0c-1383-4891-af7a-563b5903d390\",\n    \"name\": \"zender-api\",\n    \"alias\": \"zender-api\",\n    \"config\": {\n        \"auth\": {\n            \"login\": {\n                \"url\": \"{{authApiEndpoint}}/v1/auth/login\"\n            },\n            \"providers\": {\n                \"youtube\": {\n                    \"clientId\": \"721563578034-8h5gt7grfb857fsisbom90ln2k1n747h.apps.googleusercontent.com\"\n                },\n                \"google\": {\n                    \"clientId\": \"721563578034-8h5gt7grfb857fsisbom90ln2k1n747h.apps.googleusercontent.com\"\n                },\n                \"facebook\": {\n                    \"enabled\": true,\n                    \"appId\": 690051904495300,\n                    \"tokenUrl\": \"https://graph.facebook.com/me\"\n                }\n            }\n        },\n        \"pusher\": {\n            \"config\": {\n                \"encrypted\": true,\n                \"cluster\": \"eu\",\n                \"authEndpoint\": \"{{coreApiEndpoint}}/v1/pusher\"\n            },\n            \"key\": \"968089f2292502112add\"\n        },\n        \"search\": {\n            \"url\": \"{{coreApiEndpoint}}/v1/search\",\n            \"method\": \"POST\"\n        },\n        \"stories\": {\n            \"url\": \"{{coreApiEndpoint}}/v1/stories/all\",\n            \"method\": \"GET\"\n        },\n        \"notifications\": {\n            \"url\": \"{{coreApiEndpoint}}/v1/notifications\",\n            \"method\": \"GET\"\n        },\n        \"topics\": [\n            {\n                \"name\": \"standard stream notifications\",\n                \"id\": \"5763a6d2-b3ab-4e6a-aee0-1ea63a06d354\"\n            },\n            {\n                \"name\": \"hot stream notifications\",\n                \"id\": \"be88e951-bbaf-4c16-a96a-f26da2eba763\"\n            }\n        ]\n    },\n    \"settings\": {},\n    \"theming\": {},\n    \"locales\": {\n        \"selection\": \"browser\",\n        \"en\": {\n            \"emojis\": {},\n            \"polls\": {\n                \"question\": {\n                    \"message\": \"Question:\"\n                },\n                \"nopoll\": {\n                    \"message\": \"There is no data available\"\n                },\n                \"closed\": {\n                    \"message\": \"Voting is no longer possible\"\n                }\n            },\n            \"shoutbox\": {\n                \"notloggedin\": {\n                    \"login\": \"Login\",\n                    \"loginwith\": \"Login with\"\n                },\n                \"errors\": {\n                    \"blocked\": \"Your message has not been sent. Your profile is blocked.\",\n                    \"resend\": \"Your message has not been sent. Please try again.\",\n                    \"profanity\": \"Your message has not been sent. Watch your language.\"\n                },\n                \"placeholder\": {\n                    \"blocked\": \"You can't leave a comment anymore. Your profile is blocked.\"\n                }\n            },\n            \"media\": {\n                \"geoblocked\": {\n                    \"modal\": {\n                        \"title\": \"Livestream unavailable\",\n                        \"body\": \"You can't see the requested livestream in this country.\",\n                        \"button\": \"OK\"\n                    },\n                    \"pancarte\": {\n                        \"text\": \"This video is not available in your country.\"\n                    }\n                },\n                \"noflash\": {\n                    \"modal\": {\n                        \"title\": \"Error while playing\",\n                        \"body\": \"This livestream is only viewable with Flash. We are working on a solution to play livestreams without Flash in the future.\",\n                        \"button\": \"OK\"\n                    },\n                    \"pancarte\": {\n                        \"text\": \"Your device/browser is not compatible to play this video.\"\n                    }\n                },\n                \"playbackerror\": {\n                    \"modal\": {\n                        \"title\": \"Error while playing\",\n                        \"body\": \"This livestream can't be loaded. Please try again later.\",\n                        \"button\": \"OK\"\n                    },\n                    \"pancarte\": {\n                        \"text\": \"There was an error encountered while loading this video.\"\n                    }\n                }\n            },\n            \"auth\": {\n                \"blocked\": {\n                    \"modal\": {\n                        \"title\": \"Blocked\",\n                        \"body\": \"Your comment seems inappropriate. You were blocked.\",\n                        \"button\": \"OK\"\n                    }\n                },\n                \"failed\": {\n                    \"modal\": {\n                        \"body\": \"Please try again\",\n                        \"button\": \"OK\",\n                        \"title\": \"Error while logging in\"\n                    }\n                }\n            },\n            \"stream\": {\n                \"nostreams\": {\n                    \"pancarte\": {\n                        \"text\": \"There are currently no broadcasts available.\"\n                    }\n                },\n                \"limitedexperience\": {\n                    \"modal\": {\n                        \"title\": \"You can't leave a comment.\",\n                        \"body\": \"Download our app or visit our website with a computer to leave a comment.\",\n                        \"button\": \"OK\"\n                    }\n                },\n                \"state\": {\n                    \"live\": \"Live in\"\n                }\n            }\n        },\n        \"default\": {\n            \"emojis\": {},\n            \"polls\": {\n                \"question\": {\n                    \"message\": \"Vraag:\"\n                },\n                \"closed\": {\n                    \"message\": \"Stemmen is niet meer mogelijk\"\n                },\n                \"nopoll\": {\n                    \"message\": \"Momenteel is er geen data beschikbaar\"\n                }\n            },\n            \"shoutbox\": {\n                \"notloggedin\": {\n                    \"login\": \"Meld je aan.\",\n                    \"loginwith\": \"Aanmelden met\"\n                },\n                \"errors\": {\n                    \"blocked\": \"Je bericht is niet verstuurd. Je werd geblokkeerd.\",\n                    \"resend\": \"Je bericht werd niet verstuurd. Probeer opnieuw aub.\",\n                    \"profanity\": \"Je bericht is niet verstuurd. Let op je taalgebruik.\"\n                },\n                \"placeholder\": {\n                    \"blocked\": \"Je kan niet meer reageren. Jouw profiel werd geblokkeerd.\"\n                }\n            },\n            \"media\": {\n                \"geoblocked\": {\n                    \"modal\": {\n                        \"body\": \"De opgevraagde livestream kan je niet bekijken in het land waar je je nu bevindt.\",\n                        \"button\": \"OK\",\n                        \"title\": \"Livestream niet beschikbaar\"\n                    },\n                    \"pancarte\": {\n                        \"text\": \"Deze video is helaas niet beschikbaar in jouw land.\"\n                    }\n                },\n                \"noflash\": {\n                    \"modal\": {\n                        \"body\": \"Deze livestream is alleen te bekijken met Flash. We werken aan een oplossing om livestreams in de toekomst ook zonder Flash af te spelen.\",\n                        \"button\": \"OK\",\n                        \"title\": \"Fout tijdens afspelen\"\n                    },\n                    \"pancarte\": {\n                        \"text\": \"Jouw toestel/browser voldoet niet om de video af te spelen.\"\n                    }\n                },\n                \"playbackerror\": {\n                    \"modal\": {\n                        \"body\": \"De livestream kan niet worden ingeladen. Probeer het later nog eens opnieuw.\",\n                        \"button\": \"OK\",\n                        \"title\": \"Fout tijdens afspelen\"\n                    },\n                    \"pancarte\": {\n                        \"text\": \"Er is een probleem bij het inladen van de video.\"\n                    }\n                }\n            },\n            \"auth\": {\n                \"blocked\": {\n                    \"modal\": {\n                        \"body\": \"Je hebt ongepaste berichten geplaatst. Je werd geblokkeerd.\",\n                        \"button\": \"OK\",\n                        \"title\": \"Geblokkeerd\"\n                    }\n                },\n                \"failed\": {\n                    \"modal\": {\n                        \"body\": \"Gelieve het opnieuw te proberen\",\n                        \"button\": \"OK\",\n                        \"title\": \"Fout bij aanmelden\"\n                    }\n                }\n            },\n            \"stream\": {\n                \"nostreams\": {\n                    \"pancarte\": {\n                        \"text\": \"Er zijn momenteel geen uitzendingen beschikbaar.\"\n                    }\n                },\n                \"limitedexperience\": {\n                    \"modal\": {\n                        \"body\": \"Download onze app of surf naar onze website met een computer om mee te reageren\",\n                        \"button\": \"OK\",\n                        \"title\": \"Je kan niet reageren\"\n                    }\n                },\n                \"state\": {\n                    \"live\": \"live binnen\"\n                }\n            }\n        }\n    },\n    \"status\": {\n        \"code\": \"ok\"\n    },\n    \"channels\": [\n        {\n            \"id\": \"67b5528a-baf4-41bc-b558-b36613ee14a4\",\n            \"name\": \"Zender Api Channel\",\n            \"createdAt\": \"2017-11-28T13:54:56.714Z\"\n        }\n    ]\n}"
								}
							]
						},
						{
							"name": "Anonymous Token Login",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "d62df362-739a-41c5-8026-2fad1e9587a4",
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code is 200\"] = responseCode.code === 200;",
											"var data = JSON.parse(responseBody);",
											"tests[\"Response has token\"] = data.token !== null;",
											"postman.setEnvironmentVariable(\"anonymousToken\", data.token);"
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"targetId\": \"{{targetId}}\"\n}"
								},
								"url": {
									"raw": "{{authApiHost}}/v1/auth/login",
									"host": [
										"{{authApiHost}}"
									],
									"path": [
										"v1",
										"auth",
										"login"
									]
								},
								"description": "Login by fetching an anonymous bearer token.\n\nOnly the targetId must be provided. Be aware that not all public functionality will be accessible with this obtained token. For instance the sending of a shoutbox message, the casting of a poll vote and the answering of quiz question can be configured to only accept calls of a user that was logged in through a provider (See [Provider Token Login](#bdcaea10-f58a-6019-aa49-25a5c78f9b14)).\n\nFor further reference a user that is logged in through this call will have the role 'anonymous' assigned. A user that is logged in with a provider has the role 'user' assigned. The bearer token in the response must be send as Authorization header for subsequent requests.\n\n| Permissions           | no token | anonymous token | provider token | admin token |\n| --------------------- | :------: | :-------------: | :------------: | :---------: |\n| Anonymous Token Login | x        | x               | x              | x           |"
							},
							"response": [
								{
									"name": "Anonymous Token Login",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"targetId\": \"{{targetId}}\"\n}"
										},
										"url": {
											"raw": "{{authApiHost}}/v1/auth/login",
											"host": [
												"{{authApiHost}}"
											],
											"path": [
												"v1",
												"auth",
												"login"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Access-Control-Allow-Headers",
											"value": "Content-Type, Authorization, Accept, Cache-Control, X-Requested-With",
											"name": "Access-Control-Allow-Headers",
											"description": "Used in response to a preflight request to indicate which HTTP headers can be used when making the actual request."
										},
										{
											"key": "Access-Control-Allow-Methods",
											"value": "GET,PUT,POST,DELETE",
											"name": "Access-Control-Allow-Methods",
											"description": "Specifies the method or methods allowed when accessing the resource. This is used in response to a preflight request."
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*",
											"name": "Access-Control-Allow-Origin",
											"description": "Specifies a URI that may access the resource. For requests without credentials, the server may specify '*' as a wildcard, thereby allowing any origin to access the resource."
										},
										{
											"key": "Connection",
											"value": "keep-alive",
											"name": "Connection",
											"description": "Options that are desired for the connection"
										},
										{
											"key": "Content-Length",
											"value": "402",
											"name": "Content-Length",
											"description": "The length of the response body in octets (8-bit bytes)"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8",
											"name": "Content-Type",
											"description": "The mime type of this content"
										},
										{
											"key": "Date",
											"value": "Wed, 29 Nov 2017 10:00:31 GMT",
											"name": "Date",
											"description": "The date and time that the message was sent"
										},
										{
											"key": "X-Response-Time",
											"value": "2ms",
											"name": "X-Response-Time",
											"description": "Custom header"
										}
									],
									"cookie": [],
									"body": "{\n    \"token\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...\",\n    \"user\": {\n        \"id\": \"7b0f4d85-90c0-40f6-aeff-8f1c7c877337\",\n        \"targetId\": \"b8f99a0c-1383-4891-af7a-563b5903d390\",\n        \"role\": \"anonymous\"\n    }\n}"
								}
							]
						},
						{
							"name": "Provider Token Login",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "3dc6d1db-5831-4277-bf59-f5289492d89a",
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code is 200\"] = responseCode.code === 200;",
											"var data = JSON.parse(responseBody);",
											"tests[\"Response has token\"] = data.token !== null;",
											"tests[\"Response has user id\"] = data.user.id !== null;",
											"postman.setEnvironmentVariable(\"providerToken\", data.token);",
											"postman.setEnvironmentVariable(\"userId\", data.user.id);"
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"targetId\": \"{{targetId}}\",\n  \"provider\": \"googleweb\",\n  \"token\": \"{{google-token}}\",\n  \"clientId\": \"{{google-client-id}}\"\n}"
								},
								"url": {
									"raw": "{{authApiHost}}/v1/auth/login",
									"host": [
										"{{authApiHost}}"
									],
									"path": [
										"v1",
										"auth",
										"login"
									]
								},
								"description": "Login by fetching an provider user bearer token.\n\nThis endpoint can be used to login with the different providers (facebook, instagram, google, ...) See the examples for the different requests.\n\nA user that is logged in with a provider has the role 'user' assigned. The bearer token in the response must be send as Authorization header for subsequent requests.\n\n| Permissions          | no token | anonymous token | provider token | admin token |\n| -------------------- | :------: | :-------------: | :------------: | :---------: |\n| Provider Token Login | x        | x               | x              | x           |"
							},
							"response": [
								{
									"name": "Google Provider Token Login",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"targetId\": \"{{targetId}}\",\n  \"provider\": \"googleweb\",\n  \"token\": \"{{google-token}}\",\n  \"clientId\": \"{{google-client-id}}\"\n}"
										},
										"url": {
											"raw": "{{authApiHost}}/v1/auth/login",
											"host": [
												"{{authApiHost}}"
											],
											"path": [
												"v1",
												"auth",
												"login"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "Text",
									"header": [],
									"cookie": [],
									"body": "{\n    \"token\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...\",\n    \"user\": {\n        \"provider\": {\n            \"uid\": \"114183937812290902494\",\n            \"name\": \"googleweb\"\n        },\n        \"targetId\": \"e878ecf0-31b9-11e8-883b-150a4ff79cb7\",\n        \"authenticated\": true,\n        \"avatar\": \"https://lh3.googleusercontent.com/-XdUIqdMkCZA/AAAAAAAAAAI/AAAAAAAAAAA/4252rscbv5M/photo.jpg?sz=50\",\n        \"name\": \"John Doe\",\n        \"externalId\": \"e878ecf0-31b9-11e8-883b-150a4ff79cb7_114183937812290902494\",\n        \"id\": \"76ba109d-0408-42a5-ba6a-5858cb4288eb\",\n        \"createdAt\": \"2018-04-16T11:22:28.398Z\",\n        \"role\": \"user\"\n    }\n}"
								},
								{
									"name": "Facebook Provider Token Login",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"targetId\": \"{{targetId}}\",\n\t\"provider\": \"facebook\",\n\t\"token\": \"facebook-token\"\n}"
										},
										"url": {
											"raw": "{{authApiHost}}/v1/auth/login",
											"host": [
												"{{authApiHost}}"
											],
											"path": [
												"v1",
												"auth",
												"login"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Access-Control-Allow-Headers",
											"value": "Content-Type, Authorization, Accept, Cache-Control, X-Requested-With",
											"name": "Access-Control-Allow-Headers",
											"description": "Used in response to a preflight request to indicate which HTTP headers can be used when making the actual request."
										},
										{
											"key": "Access-Control-Allow-Methods",
											"value": "GET,PUT,POST,DELETE",
											"name": "Access-Control-Allow-Methods",
											"description": "Specifies the method or methods allowed when accessing the resource. This is used in response to a preflight request."
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*",
											"name": "Access-Control-Allow-Origin",
											"description": "Specifies a URI that may access the resource. For requests without credentials, the server may specify '*' as a wildcard, thereby allowing any origin to access the resource."
										},
										{
											"key": "Connection",
											"value": "keep-alive",
											"name": "Connection",
											"description": "Options that are desired for the connection"
										},
										{
											"key": "Content-Length",
											"value": "723",
											"name": "Content-Length",
											"description": "The length of the response body in octets (8-bit bytes)"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8",
											"name": "Content-Type",
											"description": "The mime type of this content"
										},
										{
											"key": "Date",
											"value": "Wed, 29 Nov 2017 08:34:36 GMT",
											"name": "Date",
											"description": "The date and time that the message was sent"
										},
										{
											"key": "X-Response-Time",
											"value": "276ms",
											"name": "X-Response-Time",
											"description": "Custom header"
										}
									],
									"cookie": [],
									"body": "{\n    \"token\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...\",\n    \"user\": {\n        \"authenticated\": true,\n        \"createdAt\": \"2017-11-29T08:33:42.090Z\",\n        \"role\": \"user\",\n        \"targetId\": \"b8f99a0c-1383-4891-af7a-563b5903d390\",\n        \"provider\": {\n            \"name\": \"facebook\",\n            \"uid\": \"1459894774070695\"\n        },\n        \"name\": \"John Doe\",\n        \"externalId\": \"b8f99a0c-1383-4891-af7a-563b5903d390_1459394774070695\",\n        \"avatar\": \"https://graph.facebook.com/1559394774070695/picture?width=250&type=square\",\n        \"id\": \"8184fbdc-6861-4fc5-9944-e7860b95f4df\",\n        \"updatedAt\": \"2017-11-29T08:34:36.952Z\"\n    }\n}"
								}
							]
						},
						{
							"name": "Get Target Channels",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{anonymousToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{coreApiHost}}/v1/channels",
									"host": [
										"{{coreApiHost}}"
									],
									"path": [
										"v1",
										"channels"
									]
								},
								"description": "Gets all the available channels of a target.\n\n| Permissions         | no token | anonymous token | provider token | admin token |\n| ------------------- | :------: | :-------------: | :------------: | :---------: |\n| Get Channel Streams | -        | x               | x              | x           |"
							},
							"response": [
								{
									"name": "Get Target Channels (success)",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"disabled": false
											}
										],
										"url": {
											"raw": "{{coreApiHost}}/v1/channels",
											"host": [
												"{{coreApiHost}}"
											],
											"path": [
												"v1",
												"channels"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Access-Control-Allow-Credentials",
											"value": "true",
											"name": "Access-Control-Allow-Credentials",
											"description": "Indicates whether or not the response to the request can be exposed when the credentials flag is true. When used as part of a response to a preflight request, this indicates whether or not the actual request can be made using credentials."
										},
										{
											"key": "Access-Control-Allow-Headers",
											"value": "Content-Type, Authorization, Accept, Cache-Control, X-Requested-With, Origin",
											"name": "Access-Control-Allow-Headers",
											"description": "Used in response to a preflight request to indicate which HTTP headers can be used when making the actual request."
										},
										{
											"key": "Access-Control-Allow-Methods",
											"value": "GET,PUT,POST,DELETE",
											"name": "Access-Control-Allow-Methods",
											"description": "Specifies the method or methods allowed when accessing the resource. This is used in response to a preflight request."
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*",
											"name": "Access-Control-Allow-Origin",
											"description": "Specifies a URI that may access the resource. For requests without credentials, the server may specify '*' as a wildcard, thereby allowing any origin to access the resource."
										},
										{
											"key": "Connection",
											"value": "keep-alive",
											"name": "Connection",
											"description": "Options that are desired for the connection"
										},
										{
											"key": "Content-Length",
											"value": "446",
											"name": "Content-Length",
											"description": "The length of the response body in octets (8-bit bytes)"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8",
											"name": "Content-Type",
											"description": "The mime type of this content"
										},
										{
											"key": "Date",
											"value": "Thu, 19 Apr 2018 12:01:16 GMT",
											"name": "Date",
											"description": "The date and time that the message was sent"
										},
										{
											"key": "X-Response-Time",
											"value": "20ms",
											"name": "X-Response-Time",
											"description": "Custom header"
										},
										{
											"key": "x-server-time",
											"value": "2018-04-19T12:01:16.331Z",
											"name": "x-server-time",
											"description": "Custom header"
										}
									],
									"cookie": [],
									"body": "[{\"targetId\":\"2808b5c6-76a1-4d18-93f5-23ea9f6246da\",\"icon\":\"https://s3-eu-west-1.amazonaws.com/cdn.staging.zender.tv/live/uploads/2808b5c6-76a1-4d18-93f5-23ea9f6246da/2018-04-03/43f4631e-7be1-4dad-acdf-1afa70225b2f.original.png\",\"iconColor\":\"#B93D87\",\"updatedAt\":\"2018-04-03T14:00:56.702Z\",\"createdAt\":\"2018-03-05T13:18:06.247Z\",\"headerColor\":\"#B93D87\",\"id\":\"3789b16d-8e9d-4071-9209-2dae67be3760\",\"name\":\"Zender Trivia channel\",\"type\":\"streams\"}]"
								}
							]
						},
						{
							"name": "Get Channel",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "4f20ab80-5de3-4be2-890e-4fcdf2cd61ad",
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code is 200\"] = responseCode.code === 200;",
											"var data = JSON.parse(responseBody);",
											"tests[\"Response has streams\"] = data.streams.length > 0;",
											"postman.setEnvironmentVariable(\"streamId\", data.streams[0].id);"
										]
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{coreApiHost}}/v1/channels/{{channelId}}",
									"host": [
										"{{coreApiHost}}"
									],
									"path": [
										"v1",
										"channels",
										"{{channelId}}"
									]
								},
								"description": "Retrieve the info of a channel by id.\n\nA channel can be viewed as a collection of streams.\n\nIt contains the links to its underlying streams (and stories).\n\nWhen you're not logged in yet, the config contained in the response provides the login endpoint and the possible providers you can use. See [Provider Token Login](#bdcaea10-f58a-6019-aa49-25a5c78f9b14) on how to login.\n\nThe [Pusher](https://pusher.com) info is also provided in the response.\n\n| Permissions | no token | anonymous token | provider token | admin token |\n| ----------- | :------: | :-------------: | :------------: | :---------: |\n| Get Channel | x        | x               | x              | x           |"
							},
							"response": [
								{
									"name": "Get Channel",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{coreApiHost}}/v1/channels/{{channelId}}",
											"host": [
												"{{coreApiHost}}"
											],
											"path": [
												"v1",
												"channels",
												"{{channelId}}"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Access-Control-Allow-Headers",
											"value": "Content-Type, Authorization, Accept, Cache-Control, X-Requested-With",
											"name": "Access-Control-Allow-Headers",
											"description": "Used in response to a preflight request to indicate which HTTP headers can be used when making the actual request."
										},
										{
											"key": "Access-Control-Allow-Methods",
											"value": "GET,PUT,POST,DELETE",
											"name": "Access-Control-Allow-Methods",
											"description": "Specifies the method or methods allowed when accessing the resource. This is used in response to a preflight request."
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*",
											"name": "Access-Control-Allow-Origin",
											"description": "Specifies a URI that may access the resource. For requests without credentials, the server may specify '*' as a wildcard, thereby allowing any origin to access the resource."
										},
										{
											"key": "Cache-Control",
											"value": "public, max-age=5",
											"name": "Cache-Control",
											"description": "Tells all caching mechanisms from server to client whether they may cache this object. It is measured in seconds"
										},
										{
											"key": "Connection",
											"value": "keep-alive",
											"name": "Connection",
											"description": "Options that are desired for the connection"
										},
										{
											"key": "Content-Length",
											"value": "2156",
											"name": "Content-Length",
											"description": "The length of the response body in octets (8-bit bytes)"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8",
											"name": "Content-Type",
											"description": "The mime type of this content"
										},
										{
											"key": "Date",
											"value": "Tue, 28 Nov 2017 14:04:27 GMT",
											"name": "Date",
											"description": "The date and time that the message was sent"
										},
										{
											"key": "X-Response-Time",
											"value": "27ms",
											"name": "X-Response-Time",
											"description": "Custom header"
										},
										{
											"key": "x-server-time",
											"value": "2017-11-28T14:04:27.662Z",
											"name": "x-server-time",
											"description": "Custom header"
										}
									],
									"cookie": [],
									"body": "{\n    \"stories\": [],\n    \"preview\": {\n        \"width\": 579,\n        \"type\": \"image\",\n        \"url\": \"https://cdn.zender.tv/live/uploads/b8f99a0c-1383-4891-af7a-563b5903d390/2017-11-28/aa807b08-311a-45a1-9a43-fd8ac9a19616.original.png\",\n        \"height\": 580\n    },\n    \"createdAt\": \"2017-11-28T13:54:56.714Z\",\n    \"headerColor\": \"#000000\",\n    \"targetId\": \"b8f99a0c-1383-4891-af7a-563b5903d390\",\n    \"headerImage\": \"https://cdn.zender.tv/live/uploads/b8f99a0c-1383-4891-af7a-563b5903d390/2017-11-28/aa807b08-311a-45a1-9a43-fd8ac9a19616.original.png\",\n    \"icon\": \"https://cdn.zender.tv/live/uploads/b8f99a0c-1383-4891-af7a-563b5903d390/2017-11-28/aa807b08-311a-45a1-9a43-fd8ac9a19616.original.png\",\n    \"iconColor\": \"#000000\",\n    \"name\": \"Zender Api Channel\",\n    \"id\": \"67b5528a-baf4-41bc-b558-b36613ee14a4\",\n    \"type\": \"streams\",\n    \"updatedAt\": \"2017-11-28T13:55:16.192Z\",\n    \"streams\": [\n        {\n            \"preview\": {\n                \"type\": \"image\",\n                \"url\": \"https://cdn.zender.tv/live/uploads/b8f99a0c-1383-4891-af7a-563b5903d390/2017-11-28/aa807b08-311a-45a1-9a43-fd8ac9a19616.original.png\"\n            },\n            \"createdAt\": \"2017-11-28T13:55:31.569Z\",\n            \"airdate\": \"2017-11-27T10:30:00.000Z\",\n            \"custom\": {\n                \"splash_enabled\": true,\n                \"splash_url\": \"https://zender.tv\",\n                \"splash_loginrequired\": false\n            },\n            \"description\": \"Zender API Stream Update\",\n            \"id\": \"a2993350-cb51-437d-bf39-41e110a71f5a\",\n            \"published\": true,\n            \"state\": \"live\",\n            \"userCount\": 10,\n            \"title\": \"Zender API Stream\",\n            \"channelId\": \"67b5528a-baf4-41bc-b558-b36613ee14a4\",\n            \"updatedAt\": \"2017-11-28T13:55:43.800Z\"\n        }\n    ],\n    \"config\": {\n        \"auth\": {\n            \"login\": {\n                \"url\": \"{{authApiHost}}/v1/auth/login\"\n            },\n            \"providers\": {\n                \"youtube\": {\n                    \"clientId\": \"721563578034-8h5gt7grfb857fsisbom90ln2k1n747h.apps.googleusercontent.com\"\n                },\n                \"google\": {\n                    \"clientId\": \"721563578034-8h5gt7grfb857fsisbom90ln2k1n747h.apps.googleusercontent.com\"\n                },\n                \"facebook\": {\n                    \"enabled\": true,\n                    \"appId\": 690051904495300,\n                    \"tokenUrl\": \"https://graph.facebook.com/me\"\n                }\n            }\n        },\n        \"pusher\": {\n            \"config\": {\n                \"encrypted\": true,\n                \"cluster\": \"eu\",\n                \"authEndpoint\": \"{{coreApiHost}}/v1/pusher\"\n            },\n            \"key\": \"968089f2292502112add\"\n        },\n        \"streams\": {\n            \"url\": \"{{coreApiHost}}/v1/channels/67b5528a-baf4-41bc-b558-b36613ee14a4/streams\"\n        },\n        \"stories\": {\n            \"url\": \"{{coreApiHost}}/v1/stories/channels/67b5528a-baf4-41bc-b558-b36613ee14a4/stories\"\n        }\n    }\n}"
								}
							]
						},
						{
							"name": "Get Channel Streams",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{anonymousToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{coreApiHost}}/v1/channels/{{channelId}}/streams",
									"host": [
										"{{coreApiHost}}"
									],
									"path": [
										"v1",
										"channels",
										"{{channelId}}",
										"streams"
									]
								},
								"description": "Get all the published streams of a channel.\n\nThe response will only contain streams that have the \"published\" attribute set to true.\n\n| Permissions         | no token | anonymous token | provider token | admin token |\n| ------------------- | :------: | :-------------: | :------------: | :---------: |\n| Get Channel Streams | x        | x               | x              | x           |"
							},
							"response": [
								{
									"name": "Get Channel Streams",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"disabled": false
											}
										],
										"url": {
											"raw": "{{coreApiHost}}/v1/channels/{{channelId}}/streams",
											"host": [
												"{{coreApiHost}}"
											],
											"path": [
												"v1",
												"channels",
												"{{channelId}}",
												"streams"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Access-Control-Allow-Credentials",
											"value": "true",
											"name": "Access-Control-Allow-Credentials",
											"description": "Indicates whether or not the response to the request can be exposed when the credentials flag is true. When used as part of a response to a preflight request, this indicates whether or not the actual request can be made using credentials."
										},
										{
											"key": "Access-Control-Allow-Headers",
											"value": "Content-Type, Authorization, Accept, Cache-Control, X-Requested-With, Origin",
											"name": "Access-Control-Allow-Headers",
											"description": "Used in response to a preflight request to indicate which HTTP headers can be used when making the actual request."
										},
										{
											"key": "Access-Control-Allow-Methods",
											"value": "GET,PUT,POST,DELETE",
											"name": "Access-Control-Allow-Methods",
											"description": "Specifies the method or methods allowed when accessing the resource. This is used in response to a preflight request."
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*",
											"name": "Access-Control-Allow-Origin",
											"description": "Specifies a URI that may access the resource. For requests without credentials, the server may specify '*' as a wildcard, thereby allowing any origin to access the resource."
										},
										{
											"key": "Connection",
											"value": "keep-alive",
											"name": "Connection",
											"description": "Options that are desired for the connection"
										},
										{
											"key": "Content-Length",
											"value": "642",
											"name": "Content-Length",
											"description": "The length of the response body in octets (8-bit bytes)"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8",
											"name": "Content-Type",
											"description": "The mime type of this content"
										},
										{
											"key": "Date",
											"value": "Wed, 29 Aug 2018 11:36:43 GMT",
											"name": "Date",
											"description": "The date and time that the message was sent"
										},
										{
											"key": "X-Response-Time",
											"value": "53ms",
											"name": "X-Response-Time",
											"description": "Custom header"
										},
										{
											"key": "x-server-time",
											"value": "2018-08-29T11:36:43.216Z",
											"name": "x-server-time",
											"description": "Custom header"
										}
									],
									"cookie": [],
									"body": "[{\"s3CdnImageRegExp\":\"https://s3-eu-west-1.amazonaws.com/(.*)(.original[.|/]|.large[.|/]|.medium[.|/]|.small[.|/])(.*)\",\"published\":true,\"airdate\":\"2018-06-25T12:41:00.000Z\",\"createdAt\":\"2018-06-25T12:42:25.624Z\",\"preview\":{\"type\":\"image\",\"url\":\"https://s3-eu-west-1.amazonaws.com/cdn.staging.zender.tv/live/uploads/2808b5c6-76a1-4d18-93f5-23ea9f6246da/2018-06-25/792ccdff-e4e8-47cd-bb73-ded58a8f582a.original.png\"},\"custom\":{},\"state\":\"live\",\"channelId\":\"444e7089-7570-407f-b17e-cca0fa1b3b0e\",\"updatedAt\":\"2018-06-25T12:56:49.641Z\",\"userCount\":2,\"description\":\"Test Phenix\",\"id\":\"1bd940d9-6d2b-4fd2-b104-bfbabc9cbac4\",\"title\":\"Test Phenix\"}]"
								},
								{
									"name": "Get Channel Streams",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{coreApiHost}}/v1/channels/{{channelId}}/streams",
											"host": [
												"{{coreApiHost}}"
											],
											"path": [
												"v1",
												"channels",
												"{{channelId}}",
												"streams"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Access-Control-Allow-Headers",
											"value": "Content-Type, Authorization, Accept, Cache-Control, X-Requested-With",
											"name": "Access-Control-Allow-Headers",
											"description": "Used in response to a preflight request to indicate which HTTP headers can be used when making the actual request."
										},
										{
											"key": "Access-Control-Allow-Methods",
											"value": "GET,PUT,POST,DELETE",
											"name": "Access-Control-Allow-Methods",
											"description": "Specifies the method or methods allowed when accessing the resource. This is used in response to a preflight request."
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*",
											"name": "Access-Control-Allow-Origin",
											"description": "Specifies a URI that may access the resource. For requests without credentials, the server may specify '*' as a wildcard, thereby allowing any origin to access the resource."
										},
										{
											"key": "Connection",
											"value": "keep-alive",
											"name": "Connection",
											"description": "Options that are desired for the connection"
										},
										{
											"key": "Content-Length",
											"value": "604",
											"name": "Content-Length",
											"description": "The length of the response body in octets (8-bit bytes)"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8",
											"name": "Content-Type",
											"description": "The mime type of this content"
										},
										{
											"key": "Date",
											"value": "Tue, 28 Nov 2017 14:04:39 GMT",
											"name": "Date",
											"description": "The date and time that the message was sent"
										},
										{
											"key": "X-Response-Time",
											"value": "21ms",
											"name": "X-Response-Time",
											"description": "Custom header"
										},
										{
											"key": "x-server-time",
											"value": "2017-11-28T14:04:39.331Z",
											"name": "x-server-time",
											"description": "Custom header"
										}
									],
									"cookie": [],
									"body": "[\n    {\n        \"preview\": {\n            \"type\": \"image\",\n            \"url\": \"https://cdn.zender.tv/live/uploads/b8f99a0c-1383-4891-af7a-563b5903d390/2017-11-28/aa807b08-311a-45a1-9a43-fd8ac9a19616.original.png\"\n        },\n        \"createdAt\": \"2017-11-28T13:55:31.569Z\",\n        \"airdate\": \"2017-11-27T10:30:00.000Z\",\n        \"custom\": {\n            \"splash_enabled\": true,\n            \"splash_url\": \"http://zender.tv\",\n            \"splash_loginrequired\": false\n        },\n        \"description\": \"Zender API Stream\",\n        \"id\": \"a2993350-cb51-437d-bf39-41e110a71f5a\",\n        \"published\": true,\n        \"userCount\": 3,\n        \"state\": \"live\",\n        \"title\": \"Zender API Stream\",\n        \"channelId\": \"67b5528a-baf4-41bc-b558-b36613ee14a4\",\n        \"updatedAt\": \"2017-11-28T13:55:43.800Z\"\n    }\n]"
								}
							]
						},
						{
							"name": "Get Stream",
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{coreApiHost}}/v1/channels/{{channelId}}/streams/{{streamId}}",
									"host": [
										"{{coreApiHost}}"
									],
									"path": [
										"v1",
										"channels",
										"{{channelId}}",
										"streams",
										"{{streamId}}"
									]
								},
								"description": "Retrieves a stream by id.\n\nA stream contains the interaction endpoints for fetching further interaction data together with the [pusher](https://pusher.com) channels to subscribe to.\n\nSee the different interaction get config endpoints calls:\n\n[Get Emojis Config](#bfa45fa0-263f-00e6-fd6a-b7798e323eda)\n\n[Get Media Config](#8cb5cb06-faed-8d36-24d9-1dd78b0607c9)\n\n[Get Shoutbox Config](#9e6b94f6-dea4-97e5-4533-940c22f27bcb)\n\n[Get Polls Config](#bc0abbc2-1fe2-3dd6-3586-efea39c53727)\n\n[Get Quiz Config](#a72e8fb6-0e60-384f-8dd9-031c2a977c65)\n\nThe state of a stream can be 'before', 'live' or 'after'.\n\n| Permissions | no token | anonymous token | provider token | admin token |\n| ----------- | :------: | :-------------: | :------------: | :---------: |\n| Get Stream  | x        | x               | x              | x           |"
							},
							"response": [
								{
									"name": "Get Stream",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{coreApiHost}}/v1/channels/{{channelId}}/streams/{{streamId}}",
											"host": [
												"{{coreApiHost}}"
											],
											"path": [
												"v1",
												"channels",
												"{{channelId}}",
												"streams",
												"{{streamId}}"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Access-Control-Allow-Headers",
											"value": "Content-Type, Authorization, Accept, Cache-Control, X-Requested-With",
											"name": "Access-Control-Allow-Headers",
											"description": "Used in response to a preflight request to indicate which HTTP headers can be used when making the actual request."
										},
										{
											"key": "Access-Control-Allow-Methods",
											"value": "GET,PUT,POST,DELETE",
											"name": "Access-Control-Allow-Methods",
											"description": "Specifies the method or methods allowed when accessing the resource. This is used in response to a preflight request."
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*",
											"name": "Access-Control-Allow-Origin",
											"description": "Specifies a URI that may access the resource. For requests without credentials, the server may specify '*' as a wildcard, thereby allowing any origin to access the resource."
										},
										{
											"key": "Cache-Control",
											"value": "public, max-age=5",
											"name": "Cache-Control",
											"description": "Tells all caching mechanisms from server to client whether they may cache this object. It is measured in seconds"
										},
										{
											"key": "Connection",
											"value": "keep-alive",
											"name": "Connection",
											"description": "Options that are desired for the connection"
										},
										{
											"key": "Content-Length",
											"value": "1519",
											"name": "Content-Length",
											"description": "The length of the response body in octets (8-bit bytes)"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8",
											"name": "Content-Type",
											"description": "The mime type of this content"
										},
										{
											"key": "Date",
											"value": "Tue, 28 Nov 2017 14:04:57 GMT",
											"name": "Date",
											"description": "The date and time that the message was sent"
										},
										{
											"key": "X-Response-Time",
											"value": "14ms",
											"name": "X-Response-Time",
											"description": "Custom header"
										},
										{
											"key": "x-server-time",
											"value": "2017-11-28T14:04:57.701Z",
											"name": "x-server-time",
											"description": "Custom header"
										}
									],
									"cookie": [],
									"body": "{\n    \"s3CdnImageRegExp\": \"https://s3-eu-west-1.amazonaws.com/(.*)(.original[.|/])(.*)\",\n    \"published\": true,\n    \"interactions\": {\n        \"media\": {\n            \"pusher\": {\n                \"channel\": \"stream-abe2c3fb-a60a-41ee-b6e3-a649755bdea2-media\"\n            },\n            \"endpoint\": \"{{mediaApiHost}}/v1/channels/3789b16d-8e9d-4071-9209-2dae67be3760/streams/abe2c3fb-a60a-41ee-b6e3-a649755bdea2/media\"\n        },\n        \"shoutbox\": {\n            \"pusher\": {\n                \"channel\": \"stream-abe2c3fb-a60a-41ee-b6e3-a649755bdea2-shoutbox\"\n            },\n            \"endpoint\": \"{{shoutboxApiHost}}/v1/channels/3789b16d-8e9d-4071-9209-2dae67be3760/streams/abe2c3fb-a60a-41ee-b6e3-a649755bdea2/shoutbox\"\n        },\n        \"emojis\": {\n            \"pusher\": {\n                \"channel\": \"stream-abe2c3fb-a60a-41ee-b6e3-a649755bdea2-emojis\"\n            },\n            \"endpoint\": \"{{emojisApiHost}}/v1/channels/3789b16d-8e9d-4071-9209-2dae67be3760/streams/abe2c3fb-a60a-41ee-b6e3-a649755bdea2/emojis\"\n        },\n        \"polls\": {\n            \"pusher\": {\n                \"channel\": \"stream-abe2c3fb-a60a-41ee-b6e3-a649755bdea2-polls\"\n            },\n            \"endpoint\": \"{{pollsApiHost}}/v1/channels/3789b16d-8e9d-4071-9209-2dae67be3760/streams/abe2c3fb-a60a-41ee-b6e3-a649755bdea2/polls\"\n        },\n        \"quiz\": {\n            \"pusher\": {\n                \"channel\": \"stream-abe2c3fb-a60a-41ee-b6e3-a649755bdea2-quiz\"\n            },\n            \"endpoint\": \"{{quizApiHost}}/v1/channels/3789b16d-8e9d-4071-9209-2dae67be3760/streams/abe2c3fb-a60a-41ee-b6e3-a649755bdea2/quiz\"\n        }\n    },\n    \"channelId\": \"3789b16d-8e9d-4071-9209-2dae67be3760\",\n    \"updatedAt\": \"2018-04-16T09:07:55.956Z\",\n    \"airdate\": \"2018-03-05T13:18:00.000Z\",\n    \"userCount\": 23,\n    \"createdAt\": \"2018-03-05T13:18:57.622Z\",\n    \"description\": \"Trivia stream\",\n    \"id\": \"abe2c3fb-a60a-41ee-b6e3-a649755bdea2\",\n    \"preview\": {\n        \"type\": \"image\",\n        \"url\": \"https://cdn.zender.tv/live/uploads/2808b5c6-76a1-4d18-93f5-23ea9f6246da/2018-04-03/b7afb9c2-943a-471a-a8f2-af2853be7dbe.original.png\"\n    },\n    \"custom\": {},\n    \"state\": \"live\",\n    \"title\": \"Zender API stream\"\n}"
								}
							]
						},
						{
							"name": "Get Registered Devices",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{providerToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{coreApiHost}}/v1/users/devices",
									"host": [
										"{{coreApiHost}}"
									],
									"path": [
										"v1",
										"users",
										"devices"
									]
								},
								"description": "Retrieves all the registered devices of a user logged in with a provider.\n\n| Permissions             | no token | anonymous token | provider token | admin token |\n| ----------------------- | :------: | :-------------: | :------------: | :---------: |\n| Get Registered Devices  | -        | -               | x              | -           |"
							},
							"response": [
								{
									"name": "Get Registered Devices",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"disabled": false
											}
										],
										"url": {
											"raw": "{{coreApiHost}}/v1/users/devices",
											"host": [
												"{{coreApiHost}}"
											],
											"path": [
												"v1",
												"users",
												"devices"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Access-Control-Allow-Credentials",
											"value": "true",
											"name": "Access-Control-Allow-Credentials",
											"description": "Indicates whether or not the response to the request can be exposed when the credentials flag is true. When used as part of a response to a preflight request, this indicates whether or not the actual request can be made using credentials."
										},
										{
											"key": "Access-Control-Allow-Headers",
											"value": "Content-Type, Authorization, Accept, Cache-Control, X-Requested-With, Origin",
											"name": "Access-Control-Allow-Headers",
											"description": "Used in response to a preflight request to indicate which HTTP headers can be used when making the actual request."
										},
										{
											"key": "Access-Control-Allow-Methods",
											"value": "GET,PUT,POST,DELETE",
											"name": "Access-Control-Allow-Methods",
											"description": "Specifies the method or methods allowed when accessing the resource. This is used in response to a preflight request."
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*",
											"name": "Access-Control-Allow-Origin",
											"description": "Specifies a URI that may access the resource. For requests without credentials, the server may specify '*' as a wildcard, thereby allowing any origin to access the resource."
										},
										{
											"key": "Connection",
											"value": "keep-alive",
											"name": "Connection",
											"description": "Options that are desired for the connection"
										},
										{
											"key": "Content-Length",
											"value": "48",
											"name": "Content-Length",
											"description": "The length of the response body in octets (8-bit bytes)"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8",
											"name": "Content-Type",
											"description": "The mime type of this content"
										},
										{
											"key": "Date",
											"value": "Wed, 29 Aug 2018 10:49:41 GMT",
											"name": "Date",
											"description": "The date and time that the message was sent"
										},
										{
											"key": "X-Response-Time",
											"value": "23ms",
											"name": "X-Response-Time",
											"description": "Custom header"
										},
										{
											"key": "x-server-time",
											"value": "2018-08-29T10:49:41.382Z",
											"name": "x-server-time",
											"description": "Custom header"
										}
									],
									"cookie": [],
									"body": "[{\"type\":\"android\",\"token\":\"fake-device-token\"}]"
								}
							]
						},
						{
							"name": "Register Device",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code is 200\"] = responseCode.code === 200;",
											"var data = JSON.parse(responseBody);",
											""
										]
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{providerToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"deviceToken\": \"deviceToken\",\n\t\"deviceType\": \"android\"\n}"
								},
								"url": {
									"raw": "{{coreApiHost}}/v1/users/devices/register",
									"host": [
										"{{coreApiHost}}"
									],
									"path": [
										"v1",
										"users",
										"devices",
										"register"
									]
								},
								"description": "The register device endpoint is used for registering a device in order to receive native push notifications.\n\nThis call is only relevant for native implementations (iOS/Android).\n\nYou can only register a device with a provider bearer token.\n\n| Permissions     | no token | anonymous token | provider token | admin token |\n| --------------- | :------: | :-------------: | :------------: | :---------: |\n| Register Device | -        | -               | x              | -           |"
							},
							"response": [
								{
									"name": "Register Device",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"deviceToken\": \"deviceToken\",\n\t\"deviceType\": \"android\"\n}"
										},
										"url": {
											"raw": "{{coreApiHost}}/v1/users/devices/register",
											"host": [
												"{{coreApiHost}}"
											],
											"path": [
												"v1",
												"users",
												"devices",
												"register"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Access-Control-Allow-Headers",
											"value": "Content-Type, Authorization, Accept, Cache-Control, X-Requested-With",
											"name": "Access-Control-Allow-Headers",
											"description": "Used in response to a preflight request to indicate which HTTP headers can be used when making the actual request."
										},
										{
											"key": "Access-Control-Allow-Methods",
											"value": "GET,PUT,POST,DELETE",
											"name": "Access-Control-Allow-Methods",
											"description": "Specifies the method or methods allowed when accessing the resource. This is used in response to a preflight request."
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*",
											"name": "Access-Control-Allow-Origin",
											"description": "Specifies a URI that may access the resource. For requests without credentials, the server may specify '*' as a wildcard, thereby allowing any origin to access the resource."
										},
										{
											"key": "Connection",
											"value": "keep-alive",
											"name": "Connection",
											"description": "Options that are desired for the connection"
										},
										{
											"key": "Content-Length",
											"value": "571",
											"name": "Content-Length",
											"description": "The length of the response body in octets (8-bit bytes)"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8",
											"name": "Content-Type",
											"description": "The mime type of this content"
										},
										{
											"key": "Date",
											"value": "Tue, 09 Jan 2018 09:20:22 GMT",
											"name": "Date",
											"description": "The date and time that the message was sent"
										},
										{
											"key": "X-Response-Time",
											"value": "251ms",
											"name": "X-Response-Time",
											"description": "Custom header"
										},
										{
											"key": "x-server-time",
											"value": "2018-01-09T09:20:22.421Z",
											"name": "x-server-time",
											"description": "Custom header"
										}
									],
									"cookie": [],
									"body": "{\n    \"targetId\": \"6702e9ea-2b46-4487-8830-d713b32c7c5e\",\n    \"authenticated\": true,\n    \"avatar\": \"https://graph.facebook.com/undefined/picture?width=250&type=square\",\n    \"externalId\": \"6702e9ea-2b46-4487-8830-d713b32c7c5e_undefined\",\n    \"role\": \"user\",\n    \"devices\": [\n        {\n            \"type\": \"android\",\n            \"endpoint\": \"<arn-endpoint>\",\n            \"token\": \"deviceToken\"\n        }\n    ],\n    \"updatedAt\": \"2018-01-09T09:20:22.654Z\",\n    \"createdAt\": \"2018-01-09T09:19:30.719Z\",\n    \"provider\": {\n        \"name\": \"facebook\"\n    },\n    \"id\": \"904cae9c-e1e8-4c35-8791-a22845f9a0d2\"\n}"
								}
							]
						},
						{
							"name": "Unregister Device",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code is 200\"] = responseCode.code === 200;",
											"var data = JSON.parse(responseBody);"
										]
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{providerToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"deviceToken\": \"deviceToken\",\n\t\"deviceType\": \"android\"\n}"
								},
								"url": {
									"raw": "{{coreApiHost}}/v1/users/devices/unregister",
									"host": [
										"{{coreApiHost}}"
									],
									"path": [
										"v1",
										"users",
										"devices",
										"unregister"
									]
								},
								"description": "The unregister device endpoint is used for unregistering a device in order to stop receiving native push notifications.\n\nThis call is only relevant for native implementations (iOS/Android).\n\nYou can only register a device with a provider bearer token.\n\n| Permissions       | no token | anonymous token | provider token | admin token |\n| ----------------- | :------: | :-------------: | :------------: | :---------: |\n| Unregister Device | -        | -               | x              | -           |"
							},
							"response": [
								{
									"name": "Unregister Device (validation error)",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"disabled": false
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\n}"
										},
										"url": {
											"raw": "{{coreApiHost}}/v1/users/devices/unregister",
											"host": [
												"{{coreApiHost}}"
											],
											"path": [
												"v1",
												"users",
												"devices",
												"unregister"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Access-Control-Allow-Credentials",
											"value": "true",
											"name": "Access-Control-Allow-Credentials",
											"description": "Indicates whether or not the response to the request can be exposed when the credentials flag is true. When used as part of a response to a preflight request, this indicates whether or not the actual request can be made using credentials."
										},
										{
											"key": "Access-Control-Allow-Headers",
											"value": "Content-Type, Authorization, Accept, Cache-Control, X-Requested-With, Origin",
											"name": "Access-Control-Allow-Headers",
											"description": "Used in response to a preflight request to indicate which HTTP headers can be used when making the actual request."
										},
										{
											"key": "Access-Control-Allow-Methods",
											"value": "GET,PUT,POST,DELETE",
											"name": "Access-Control-Allow-Methods",
											"description": "Specifies the method or methods allowed when accessing the resource. This is used in response to a preflight request."
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*",
											"name": "Access-Control-Allow-Origin",
											"description": "Specifies a URI that may access the resource. For requests without credentials, the server may specify '*' as a wildcard, thereby allowing any origin to access the resource."
										},
										{
											"key": "Connection",
											"value": "keep-alive",
											"name": "Connection",
											"description": "Options that are desired for the connection"
										},
										{
											"key": "Content-Length",
											"value": "104",
											"name": "Content-Length",
											"description": "The length of the response body in octets (8-bit bytes)"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8",
											"name": "Content-Type",
											"description": "The mime type of this content"
										},
										{
											"key": "Date",
											"value": "Tue, 17 Apr 2018 13:20:20 GMT",
											"name": "Date",
											"description": "The date and time that the message was sent"
										},
										{
											"key": "X-Response-Time",
											"value": "60ms",
											"name": "X-Response-Time",
											"description": "Custom header"
										},
										{
											"key": "x-server-time",
											"value": "2018-04-17T13:20:20.091Z",
											"name": "x-server-time",
											"description": "Custom header"
										}
									],
									"cookie": [],
									"body": "{\"code\":\"BAD_REQUEST\",\"message\":\"Please provide 'deviceType' and 'deviceToken' params in request body!\"}"
								},
								{
									"name": "Unregister Device (success)",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"deviceToken\": \"deviceToken\",\n\t\"deviceType\": \"android\"\n}"
										},
										"url": {
											"raw": "{{coreApiHost}}/v1/users/devices/unregister",
											"host": [
												"{{coreApiHost}}"
											],
											"path": [
												"v1",
												"users",
												"devices",
												"unregister"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Access-Control-Allow-Headers",
											"value": "Content-Type, Authorization, Accept, Cache-Control, X-Requested-With",
											"name": "Access-Control-Allow-Headers",
											"description": "Used in response to a preflight request to indicate which HTTP headers can be used when making the actual request."
										},
										{
											"key": "Access-Control-Allow-Methods",
											"value": "GET,PUT,POST,DELETE",
											"name": "Access-Control-Allow-Methods",
											"description": "Specifies the method or methods allowed when accessing the resource. This is used in response to a preflight request."
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*",
											"name": "Access-Control-Allow-Origin",
											"description": "Specifies a URI that may access the resource. For requests without credentials, the server may specify '*' as a wildcard, thereby allowing any origin to access the resource."
										},
										{
											"key": "Connection",
											"value": "keep-alive",
											"name": "Connection",
											"description": "Options that are desired for the connection"
										},
										{
											"key": "Content-Length",
											"value": "392",
											"name": "Content-Length",
											"description": "The length of the response body in octets (8-bit bytes)"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8",
											"name": "Content-Type",
											"description": "The mime type of this content"
										},
										{
											"key": "Date",
											"value": "Tue, 09 Jan 2018 09:23:49 GMT",
											"name": "Date",
											"description": "The date and time that the message was sent"
										},
										{
											"key": "X-Response-Time",
											"value": "103ms",
											"name": "X-Response-Time",
											"description": "Custom header"
										},
										{
											"key": "x-server-time",
											"value": "2018-01-09T09:23:49.400Z",
											"name": "x-server-time",
											"description": "Custom header"
										}
									],
									"cookie": [],
									"body": "{\"targetId\":\"6702e9ea-2b46-4487-8830-d713b32c7c5e\",\"authenticated\":true,\"avatar\":\"https://graph.facebook.com/undefined/picture?width=250&type=square\",\"externalId\":\"6702e9ea-2b46-4487-8830-d713b32c7c5e_undefined\",\"role\":\"user\",\"devices\":[],\"updatedAt\":\"2018-01-09T09:23:49.486Z\",\"createdAt\":\"2018-01-09T09:19:30.719Z\",\"provider\":{\"name\":\"facebook\"},\"id\":\"904cae9c-e1e8-4c35-8791-a22845f9a0d2\"}"
								}
							]
						},
						{
							"name": "Subscribe to Topic",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code is 200\"] = responseCode.code === 200;",
											"var data = JSON.parse(responseBody);"
										]
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{providerToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"deviceToken\": \"deviceToken\",\n\t\"topicId\": \"be88e951-bbaf-4c16-a96a-f26da2eba763\"\n}"
								},
								"url": {
									"raw": "{{coreApiHost}}/v1/users/devices/subscribe",
									"host": [
										"{{coreApiHost}}"
									],
									"path": [
										"v1",
										"users",
										"devices",
										"subscribe"
									]
								},
								"description": "Subscribe to a push notifications topic.\n\nThe possible topicIds that can be provided in the request body can be found in the \"config\" attribute of the [Get Target](#5810f0fe-7be7-6839-c4a7-307b2527777e) response.\n\n| Permissions        | no token | anonymous token | provider token | admin token |\n| ------------------ | :------: | :-------------: | :------------: | :---------: |\n| Subscribe to Topic | -        | -               | x              | -           |"
							},
							"response": [
								{
									"name": "Subscribe to Topic (success)",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"deviceToken\": \"deviceToken\",\n\t\"topicId\": \"be88e951-bbaf-4c16-a96a-f26da2eba763\"\n}"
										},
										"url": {
											"raw": "{{coreApiHost}}/v1/users/devices/subscribe",
											"host": [
												"{{coreApiHost}}"
											],
											"path": [
												"v1",
												"users",
												"devices",
												"subscribe"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Access-Control-Allow-Headers",
											"value": "Content-Type, Authorization, Accept, Cache-Control, X-Requested-With",
											"name": "Access-Control-Allow-Headers",
											"description": "Used in response to a preflight request to indicate which HTTP headers can be used when making the actual request."
										},
										{
											"key": "Access-Control-Allow-Methods",
											"value": "GET,PUT,POST,DELETE",
											"name": "Access-Control-Allow-Methods",
											"description": "Specifies the method or methods allowed when accessing the resource. This is used in response to a preflight request."
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*",
											"name": "Access-Control-Allow-Origin",
											"description": "Specifies a URI that may access the resource. For requests without credentials, the server may specify '*' as a wildcard, thereby allowing any origin to access the resource."
										},
										{
											"key": "Connection",
											"value": "keep-alive",
											"name": "Connection",
											"description": "Options that are desired for the connection"
										},
										{
											"key": "Content-Length",
											"value": "94",
											"name": "Content-Length",
											"description": "The length of the response body in octets (8-bit bytes)"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8",
											"name": "Content-Type",
											"description": "The mime type of this content"
										},
										{
											"key": "Date",
											"value": "Tue, 09 Jan 2018 09:37:59 GMT",
											"name": "Date",
											"description": "The date and time that the message was sent"
										},
										{
											"key": "X-Response-Time",
											"value": "277ms",
											"name": "X-Response-Time",
											"description": "Custom header"
										},
										{
											"key": "x-server-time",
											"value": "2018-01-09T09:37:59.081Z",
											"name": "x-server-time",
											"description": "Custom header"
										}
									],
									"cookie": [],
									"body": "{\"topicId\":\"be88e951-bbaf-4c16-a96a-f26da2eba763\",\"token\":\"deviceToken\",\"status\":\"subscribed\"}"
								},
								{
									"name": "Subscribe to Topic (validation error)",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"disabled": false
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"deviceToken\": \"deviceToken\"\n}"
										},
										"url": {
											"raw": "{{coreApiHost}}/v1/users/devices/subscribe",
											"host": [
												"{{coreApiHost}}"
											],
											"path": [
												"v1",
												"users",
												"devices",
												"subscribe"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Access-Control-Allow-Credentials",
											"value": "true",
											"name": "Access-Control-Allow-Credentials",
											"description": "Indicates whether or not the response to the request can be exposed when the credentials flag is true. When used as part of a response to a preflight request, this indicates whether or not the actual request can be made using credentials."
										},
										{
											"key": "Access-Control-Allow-Headers",
											"value": "Content-Type, Authorization, Accept, Cache-Control, X-Requested-With, Origin",
											"name": "Access-Control-Allow-Headers",
											"description": "Used in response to a preflight request to indicate which HTTP headers can be used when making the actual request."
										},
										{
											"key": "Access-Control-Allow-Methods",
											"value": "GET,PUT,POST,DELETE",
											"name": "Access-Control-Allow-Methods",
											"description": "Specifies the method or methods allowed when accessing the resource. This is used in response to a preflight request."
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*",
											"name": "Access-Control-Allow-Origin",
											"description": "Specifies a URI that may access the resource. For requests without credentials, the server may specify '*' as a wildcard, thereby allowing any origin to access the resource."
										},
										{
											"key": "Connection",
											"value": "keep-alive",
											"name": "Connection",
											"description": "Options that are desired for the connection"
										},
										{
											"key": "Content-Length",
											"value": "101",
											"name": "Content-Length",
											"description": "The length of the response body in octets (8-bit bytes)"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8",
											"name": "Content-Type",
											"description": "The mime type of this content"
										},
										{
											"key": "Date",
											"value": "Tue, 17 Apr 2018 13:14:58 GMT",
											"name": "Date",
											"description": "The date and time that the message was sent"
										},
										{
											"key": "X-Response-Time",
											"value": "79ms",
											"name": "X-Response-Time",
											"description": "Custom header"
										},
										{
											"key": "x-server-time",
											"value": "2018-04-17T13:14:57.972Z",
											"name": "x-server-time",
											"description": "Custom header"
										}
									],
									"cookie": [],
									"body": "{\"code\":\"BAD_REQUEST\",\"message\":\"Please provide 'deviceToken' and 'topicId' params in request body!\"}"
								}
							]
						},
						{
							"name": "Unsubscribe from Topic",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code is 200\"] = responseCode.code === 200;",
											"var data = JSON.parse(responseBody);"
										]
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{providerToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"deviceToken\": \"deviceToken\",\n\t\"topicId\": \"be88e951-bbaf-4c16-a96a-f26da2eba763\"\n}"
								},
								"url": {
									"raw": "{{coreApiHost}}/v1/users/devices/unsubscribe",
									"host": [
										"{{coreApiHost}}"
									],
									"path": [
										"v1",
										"users",
										"devices",
										"unsubscribe"
									]
								},
								"description": "Unsubcribe from a push notifications topic.\n\nThe possible topicIds that can be provided in the request body can be found in the \"config\" attribute of the [Get Target](#5810f0fe-7be7-6839-c4a7-307b2527777e) response.\n\n| Permissions            | no token | anonymous token | provider token | admin token |\n| ---------------------- | :------: | :-------------: | :------------: | :---------: |\n| Unsubscribe from Topic | -        | -               | x              | -           |"
							},
							"response": [
								{
									"name": "Unsubscribe from Topic (validation error)",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"disabled": false
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"deviceToken\": \"deviceToken\"\n}"
										},
										"url": {
											"raw": "{{coreApiHost}}/v1/users/devices/unsubscribe",
											"host": [
												"{{coreApiHost}}"
											],
											"path": [
												"v1",
												"users",
												"devices",
												"unsubscribe"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Access-Control-Allow-Credentials",
											"value": "true",
											"name": "Access-Control-Allow-Credentials",
											"description": "Indicates whether or not the response to the request can be exposed when the credentials flag is true. When used as part of a response to a preflight request, this indicates whether or not the actual request can be made using credentials."
										},
										{
											"key": "Access-Control-Allow-Headers",
											"value": "Content-Type, Authorization, Accept, Cache-Control, X-Requested-With, Origin",
											"name": "Access-Control-Allow-Headers",
											"description": "Used in response to a preflight request to indicate which HTTP headers can be used when making the actual request."
										},
										{
											"key": "Access-Control-Allow-Methods",
											"value": "GET,PUT,POST,DELETE",
											"name": "Access-Control-Allow-Methods",
											"description": "Specifies the method or methods allowed when accessing the resource. This is used in response to a preflight request."
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*",
											"name": "Access-Control-Allow-Origin",
											"description": "Specifies a URI that may access the resource. For requests without credentials, the server may specify '*' as a wildcard, thereby allowing any origin to access the resource."
										},
										{
											"key": "Connection",
											"value": "keep-alive",
											"name": "Connection",
											"description": "Options that are desired for the connection"
										},
										{
											"key": "Content-Length",
											"value": "101",
											"name": "Content-Length",
											"description": "The length of the response body in octets (8-bit bytes)"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8",
											"name": "Content-Type",
											"description": "The mime type of this content"
										},
										{
											"key": "Date",
											"value": "Tue, 17 Apr 2018 13:18:30 GMT",
											"name": "Date",
											"description": "The date and time that the message was sent"
										},
										{
											"key": "X-Response-Time",
											"value": "43ms",
											"name": "X-Response-Time",
											"description": "Custom header"
										},
										{
											"key": "x-server-time",
											"value": "2018-04-17T13:18:30.870Z",
											"name": "x-server-time",
											"description": "Custom header"
										}
									],
									"cookie": [],
									"body": "{\"code\":\"BAD_REQUEST\",\"message\":\"Please provide 'deviceToken' and 'topicId' params in request body!\"}"
								},
								{
									"name": "Unsubscribe from Topic (success)",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"deviceToken\": \"deviceToken\",\n\t\"topicId\": \"be88e951-bbaf-4c16-a96a-f26da2eba763\"\n}"
										},
										"url": {
											"raw": "{{coreApiHost}}/v1/users/devices/unsubscribe",
											"host": [
												"{{coreApiHost}}"
											],
											"path": [
												"v1",
												"users",
												"devices",
												"unsubscribe"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Access-Control-Allow-Headers",
											"value": "Content-Type, Authorization, Accept, Cache-Control, X-Requested-With",
											"name": "Access-Control-Allow-Headers",
											"description": "Used in response to a preflight request to indicate which HTTP headers can be used when making the actual request."
										},
										{
											"key": "Access-Control-Allow-Methods",
											"value": "GET,PUT,POST,DELETE",
											"name": "Access-Control-Allow-Methods",
											"description": "Specifies the method or methods allowed when accessing the resource. This is used in response to a preflight request."
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*",
											"name": "Access-Control-Allow-Origin",
											"description": "Specifies a URI that may access the resource. For requests without credentials, the server may specify '*' as a wildcard, thereby allowing any origin to access the resource."
										},
										{
											"key": "Connection",
											"value": "keep-alive",
											"name": "Connection",
											"description": "Options that are desired for the connection"
										},
										{
											"key": "Content-Length",
											"value": "96",
											"name": "Content-Length",
											"description": "The length of the response body in octets (8-bit bytes)"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8",
											"name": "Content-Type",
											"description": "The mime type of this content"
										},
										{
											"key": "Date",
											"value": "Tue, 09 Jan 2018 09:40:11 GMT",
											"name": "Date",
											"description": "The date and time that the message was sent"
										},
										{
											"key": "X-Response-Time",
											"value": "186ms",
											"name": "X-Response-Time",
											"description": "Custom header"
										},
										{
											"key": "x-server-time",
											"value": "2018-01-09T09:40:11.055Z",
											"name": "x-server-time",
											"description": "Custom header"
										}
									],
									"cookie": [],
									"body": "{\"topicId\":\"be88e951-bbaf-4c16-a96a-f26da2eba763\",\"token\":\"deviceToken\",\"status\":\"unsubscribed\"}"
								}
							]
						},
						{
							"name": "Geo Check",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{coreApiHost}}/v1/geo/8.8.8.8",
									"host": [
										"{{coreApiHost}}"
									],
									"path": [
										"v1",
										"geo",
										"8.8.8.8"
									]
								},
								"description": "Get the geo location of an ip address.\n\n| Permissions | no token | anonymous token | device token | admin token |\n| ----------- | :------: | :-------------: | :----------: | :---------: |\n| Geo Check   | x        | x               | x            | x           |"
							},
							"response": [
								{
									"name": "Geo Check",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"disabled": false
											}
										],
										"url": {
											"raw": "{{coreApiHost}}/v1/geo/8.8.8.8",
											"host": [
												"{{coreApiHost}}"
											],
											"path": [
												"v1",
												"geo",
												"8.8.8.8"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Connection",
											"value": "keep-alive",
											"name": "Connection",
											"description": "Options that are desired for the connection"
										},
										{
											"key": "Content-Length",
											"value": "194",
											"name": "Content-Length",
											"description": "The length of the response body in octets (8-bit bytes)"
										},
										{
											"key": "Content-Type",
											"value": "application/json",
											"name": "Content-Type",
											"description": "The mime type of this content"
										},
										{
											"key": "Date",
											"value": "Mon, 16 Apr 2018 13:46:06 GMT",
											"name": "Date",
											"description": "The date and time that the message was sent"
										},
										{
											"key": "Server",
											"value": "nginx/1.10.3",
											"name": "Server",
											"description": "A name for the server"
										},
										{
											"key": "Vary",
											"value": "Origin",
											"name": "Vary",
											"description": "Tells downstream proxies how to match future request headers to decide whether the cached response can be used rather than requesting a fresh one from the origin server."
										},
										{
											"key": "X-Database-Date",
											"value": "Thu, 05 Apr 2018 13:27:30 GMT",
											"name": "X-Database-Date",
											"description": "Custom header"
										}
									],
									"cookie": [],
									"body": "{\"ip\":\"8.8.8.8\",\"country_code\":\"US\",\"country_name\":\"United States\",\"region_code\":\"\",\"region_name\":\"\",\"city\":\"\",\"zip_code\":\"\",\"time_zone\":\"\",\"latitude\":37.751,\"longitude\":-97.822,\"metro_code\":0}\n"
								}
							]
						},
						{
							"name": "Get Signed Upload Url",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code is 200\"] = responseCode.code === 200;",
											"var data = JSON.parse(responseBody);"
										]
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{providerToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"filename\": \"test-file.png\"\n}"
								},
								"url": {
									"raw": "{{coreApiHost}}/v1/upload",
									"host": [
										"{{coreApiHost}}"
									],
									"path": [
										"v1",
										"upload"
									]
								},
								"description": "This endpoint returns a url (uploadUrl) where you can upload content (images, video) to.\n\nIf the resource to upload is an image, different resized variants urls can be returned.\n\n| Permissions           | no token | anonymous token | provider token | admin token |\n| --------------------- | :------: | :-------------: | :------------: | :---------: |\n| Get Signed Upload Url | -        | x               | x              | x           |"
							},
							"response": [
								{
									"name": "Get Signed Upload Url",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"disabled": false
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"filename\": \"test-file.png\"\n}"
										},
										"url": {
											"raw": "{{coreApiHost}}/v1/upload",
											"host": [
												"{{coreApiHost}}"
											],
											"path": [
												"v1",
												"upload"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Access-Control-Allow-Credentials",
											"value": "true",
											"name": "Access-Control-Allow-Credentials",
											"description": "Indicates whether or not the response to the request can be exposed when the credentials flag is true. When used as part of a response to a preflight request, this indicates whether or not the actual request can be made using credentials."
										},
										{
											"key": "Access-Control-Allow-Headers",
											"value": "Content-Type, Authorization, Accept, Cache-Control, X-Requested-With, Origin",
											"name": "Access-Control-Allow-Headers",
											"description": "Used in response to a preflight request to indicate which HTTP headers can be used when making the actual request."
										},
										{
											"key": "Access-Control-Allow-Methods",
											"value": "GET,PUT,POST,DELETE",
											"name": "Access-Control-Allow-Methods",
											"description": "Specifies the method or methods allowed when accessing the resource. This is used in response to a preflight request."
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*",
											"name": "Access-Control-Allow-Origin",
											"description": "Specifies a URI that may access the resource. For requests without credentials, the server may specify '*' as a wildcard, thereby allowing any origin to access the resource."
										},
										{
											"key": "Connection",
											"value": "keep-alive",
											"name": "Connection",
											"description": "Options that are desired for the connection"
										},
										{
											"key": "Content-Length",
											"value": "2160",
											"name": "Content-Length",
											"description": "The length of the response body in octets (8-bit bytes)"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8",
											"name": "Content-Type",
											"description": "The mime type of this content"
										},
										{
											"key": "Date",
											"value": "Wed, 14 Mar 2018 09:32:40 GMT",
											"name": "Date",
											"description": "The date and time that the message was sent"
										},
										{
											"key": "X-Response-Time",
											"value": "25ms",
											"name": "X-Response-Time",
											"description": "Custom header"
										},
										{
											"key": "x-server-time",
											"value": "2018-03-14T09:32:40.184Z",
											"name": "x-server-time",
											"description": "Custom header"
										}
									],
									"cookie": [],
									"body": "{\n    \"uploadId\": \"e5855fe4-f371-49aa-9803-be69be580e1b\",\n    \"uploadUrl\": \"https://s3-eu-west-1.amazonaws.com/cdn.zender.tv/live/uploads/6702e9ea-2b46-4487-8830-d713b32c7c5e/user/2018-03-14/e5855fe4-f371-49aa-9803-be69be580e1b.original.png?AWSAccessKeyId=ASIAI4MYZEZT3GXDJGQQ&Content-Type=image%2Fpng&Expires=1521020020&Signature=%2BlusmzZ1GiI3n0jJPgKOnGPUFf4%3D&x-amz-acl=public-read&x-amz-meta-filename=test-file.png&x-amz-meta-id=e5855fe4-f371-49aa-9803-be69be580e1b&x-amz-meta-targetid=6702e9ea-2b46-4487-8830-d713b32c7c5e&x-amz-meta-userid=904cae9c-e1e8-4c35-8791-a22845f9a0d2&x-amz-meta-userrole=user&x-amz-security-token=FQoDYXdzEEIaDP1OrJUcxN4dkPcjZCLAAw0OdxgDaHb5I%2BzpLqyJZ1LH3M9yO1HBh%2BcF%2FDib9HzPGp281XQGQ0M5gS7xOUfPEFXKSMHwyHgF2hSW2i2G5RUkKPrBn6WuagkJOejtxR%2FqHzlLJyVtz9W1dN68bPLAoCiVzxOZcM2l7JytXZUORFHM7FLB0jLcS1PoW2CI%2FsEVEnCbCWT%2F5r7JppbwEIYoz4TU3tgPe9lw5KoW42SV%2BxiP5xUfSScHdhvjv0K8%2B91yV0LPaRpSWbiF3L%2FrfxGZYZXIA5Fxg1joJcuA4Kk5FhXcM5gaU0FlDLvryhZy%2BGg6JiB3TzPKhYCgL4XXTCpOpI4lf99UAzGOXHn6Twd4H7Goq5awSl%2BpSbYmJpTd60WRndbas1xoxqkEVBEUE5d41kvtDNmaz5nLaPj6wVYndBB7pWcoxmIBTm3IlU%2FvW6%2Fpzv764tESHLcu32qgQKffsHX0jBEWSYBt54FFeyigflDZVxVl6dyiIDFCy8%2FxYDkWqSJvN3nQz3HgUjb89b%2B7HkcpstzQ37vwqJsFPdG%2FQlrS8G4Er9ERIJ%2FkrewIeQfYPmkGikia99%2B0Dm34uk9QxtNsGOVYdzywIAGn5TuH5QQoycuj1QU%3D&x-amz-tagging=targetId%3D6702e9ea-2b46-4487-8830-d713b32c7c5e%26targetName%3Dkarrewiet\",\n    \"resizedUrls\": {\n        \"large\": \"https://s3-eu-west-1.amazonaws.com/cdn.zender.tv/live/uploads/6702e9ea-2b46-4487-8830-d713b32c7c5e/user/2018-03-14/e5855fe4-f371-49aa-9803-be69be580e1b.large.png\",\n        \"medium\": \"https://s3-eu-west-1.amazonaws.com/cdn.zender.tv/live/uploads/6702e9ea-2b46-4487-8830-d713b32c7c5e/user/2018-03-14/e5855fe4-f371-49aa-9803-be69be580e1b.medium.png\",\n        \"small\": \"https://s3-eu-west-1.amazonaws.com/cdn.zender.tv/live/uploads/6702e9ea-2b46-4487-8830-d713b32c7c5e/user/2018-03-14/e5855fe4-f371-49aa-9803-be69be580e1b.small.png\"\n    },\n    \"contentType\": \"image/png\",\n    \"getUrl\": \"https://s3-eu-west-1.amazonaws.com/cdn.zender.tv/live/uploads/6702e9ea-2b46-4487-8830-d713b32c7c5e/user/2018-03-14/e5855fe4-f371-49aa-9803-be69be580e1b.original.png\"\n}"
								}
							]
						},
						{
							"name": "Remove user data",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{providerToken}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": []
								},
								"url": {
									"raw": "{{authApiHost}}/v1/auth/users",
									"host": [
										"{{authApiHost}}"
									],
									"path": [
										"v1",
										"auth",
										"users"
									]
								},
								"description": "Removes user authentication data.\nExternal id is kept, so that account reactivation is still possible.\n\nMake sure to remove other data (like shouts) first."
							},
							"response": [
								{
									"name": "Remove user data, success",
									"originalRequest": {
										"method": "DELETE",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": []
										},
										"url": {
											"raw": "{{authApiHost}}/v1/auth/users",
											"host": [
												"{{authApiHost}}"
											],
											"path": [
												"v1",
												"auth",
												"users"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Access-Control-Allow-Credentials",
											"value": "true",
											"name": "Access-Control-Allow-Credentials",
											"description": "Indicates whether or not the response to the request can be exposed when the credentials flag is true. When used as part of a response to a preflight request, this indicates whether or not the actual request can be made using credentials."
										},
										{
											"key": "Access-Control-Allow-Headers",
											"value": "Content-Type, Authorization, Accept, Cache-Control, X-Requested-With, Origin",
											"name": "Access-Control-Allow-Headers",
											"description": "Used in response to a preflight request to indicate which HTTP headers can be used when making the actual request."
										},
										{
											"key": "Access-Control-Allow-Methods",
											"value": "GET,PUT,POST,DELETE",
											"name": "Access-Control-Allow-Methods",
											"description": "Specifies the method or methods allowed when accessing the resource. This is used in response to a preflight request."
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*",
											"name": "Access-Control-Allow-Origin",
											"description": "Specifies a URI that may access the resource. For requests without credentials, the server may specify '*' as a wildcard, thereby allowing any origin to access the resource."
										},
										{
											"key": "Connection",
											"value": "keep-alive",
											"name": "Connection",
											"description": "Options that are desired for the connection"
										},
										{
											"key": "Content-Length",
											"value": "2",
											"name": "Content-Length",
											"description": "The length of the response body in octets (8-bit bytes)"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8",
											"name": "Content-Type",
											"description": "The mime type of this content"
										},
										{
											"key": "Date",
											"value": "Fri, 31 Aug 2018 13:41:58 GMT",
											"name": "Date",
											"description": "The date and time that the message was sent"
										},
										{
											"key": "X-Response-Time",
											"value": "38ms",
											"name": "X-Response-Time",
											"description": "Custom header"
										}
									],
									"cookie": [],
									"body": "{}"
								},
								{
									"name": "Remove user data, unauthorized",
									"originalRequest": {
										"method": "DELETE",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": []
										},
										"url": {
											"raw": "{{authApiHost}}/v1/auth/users",
											"host": [
												"{{authApiHost}}"
											],
											"path": [
												"v1",
												"auth",
												"users"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Access-Control-Allow-Credentials",
											"value": "true",
											"name": "Access-Control-Allow-Credentials",
											"description": "Indicates whether or not the response to the request can be exposed when the credentials flag is true. When used as part of a response to a preflight request, this indicates whether or not the actual request can be made using credentials."
										},
										{
											"key": "Access-Control-Allow-Headers",
											"value": "Content-Type, Authorization, Accept, Cache-Control, X-Requested-With, Origin",
											"name": "Access-Control-Allow-Headers",
											"description": "Used in response to a preflight request to indicate which HTTP headers can be used when making the actual request."
										},
										{
											"key": "Access-Control-Allow-Methods",
											"value": "GET,PUT,POST,DELETE",
											"name": "Access-Control-Allow-Methods",
											"description": "Specifies the method or methods allowed when accessing the resource. This is used in response to a preflight request."
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*",
											"name": "Access-Control-Allow-Origin",
											"description": "Specifies a URI that may access the resource. For requests without credentials, the server may specify '*' as a wildcard, thereby allowing any origin to access the resource."
										},
										{
											"key": "Connection",
											"value": "keep-alive",
											"name": "Connection",
											"description": "Options that are desired for the connection"
										},
										{
											"key": "Content-Length",
											"value": "67",
											"name": "Content-Length",
											"description": "The length of the response body in octets (8-bit bytes)"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8",
											"name": "Content-Type",
											"description": "The mime type of this content"
										},
										{
											"key": "Date",
											"value": "Fri, 31 Aug 2018 13:28:03 GMT",
											"name": "Date",
											"description": "The date and time that the message was sent"
										},
										{
											"key": "X-Response-Time",
											"value": "3ms",
											"name": "X-Response-Time",
											"description": "Custom header"
										}
									],
									"cookie": [],
									"body": "{\"code\":\"UNAUTHORIZED\",\"message\":\"This request is not authorized.\"}"
								}
							]
						}
					],
					"description": "Core contains endpoints to get the target, channel and stream together with the authentication endpoint, upload endpoint and push notification registration/subscription endpoints.",
					"_postman_isSubFolder": true
				},
				{
					"name": "Emojis",
					"item": [
						{
							"name": "Get Emojis Config",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code is 200\"] = responseCode.code === 200;",
											"var data = JSON.parse(responseBody);",
											"tests[\"Response has default emoji\"] = data.defaultEmoji.id !== null;",
											"postman.setEnvironmentVariable(\"defaultEmoji\", data.defaultEmoji.id);"
										]
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{anonymousToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{emojisApiHost}}/v1/channels/{{channelId}}/streams/{{streamId}}/emojis/config",
									"host": [
										"{{emojisApiHost}}"
									],
									"path": [
										"v1",
										"channels",
										"{{channelId}}",
										"streams",
										"{{streamId}}",
										"emojis",
										"config"
									]
								},
								"description": "Get emojis config of a particular stream.\n\n| Permissions       | no token | anonymous token | provider token | admin token |\n| ----------------- | :------: | :-------------: | :------------: | :---------: |\n| Get Emojis Config | -        | x               | x              | x           |"
							},
							"response": [
								{
									"name": "Get Emojis Config",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{emojisApiHost}}/v1/channels/{{channelId}}/streams/{{streamId}}/emojis/config",
											"host": [
												"{{emojisApiHost}}"
											],
											"path": [
												"v1",
												"channels",
												"{{channelId}}",
												"streams",
												"{{streamId}}",
												"emojis",
												"config"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Access-Control-Allow-Headers",
											"value": "Content-Type, Authorization, Accept, Cache-Control, X-Requested-With",
											"name": "Access-Control-Allow-Headers",
											"description": "Used in response to a preflight request to indicate which HTTP headers can be used when making the actual request."
										},
										{
											"key": "Access-Control-Allow-Methods",
											"value": "GET,PUT,POST,DELETE",
											"name": "Access-Control-Allow-Methods",
											"description": "Specifies the method or methods allowed when accessing the resource. This is used in response to a preflight request."
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*",
											"name": "Access-Control-Allow-Origin",
											"description": "Specifies a URI that may access the resource. For requests without credentials, the server may specify '*' as a wildcard, thereby allowing any origin to access the resource."
										},
										{
											"key": "Cache-Control",
											"value": "max-age=5",
											"name": "Cache-Control",
											"description": "Tells all caching mechanisms from server to client whether they may cache this object. It is measured in seconds"
										},
										{
											"key": "Connection",
											"value": "keep-alive",
											"name": "Connection",
											"description": "Options that are desired for the connection"
										},
										{
											"key": "Content-Length",
											"value": "18337",
											"name": "Content-Length",
											"description": "The length of the response body in octets (8-bit bytes)"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8",
											"name": "Content-Type",
											"description": "The mime type of this content"
										},
										{
											"key": "Date",
											"value": "Tue, 28 Nov 2017 14:05:38 GMT",
											"name": "Date",
											"description": "The date and time that the message was sent"
										},
										{
											"key": "X-Response-Time",
											"value": "27ms",
											"name": "X-Response-Time",
											"description": "Custom header"
										}
									],
									"cookie": [],
									"body": "{\n    \"createdAt\": \"2017-11-28T13:55:31.724Z\",\n    \"sortedSets\": [\n        {\n            \"emojis\": [\n                {\n                    \"title\": \"73ebf11e-ad24-4dcb-878f-3e9b06db280e.original.png\",\n                    \"url\": \"https://cdn.zender.tv/live/uploads/e1cc9d4b-2969-4d50-a74f-cb39ac5f5f68/2017-11-28/73ebf11e-ad24-4dcb-878f-3e9b06db280e.original.png\",\n                    \"id\": \"/live/uploads/e1cc9d4b-2969-4d50-a74f-cb39ac5f5f68/2017-11-28/73ebf11e-ad24-4dcb-878f-3e9b06db280e.original.png\"\n                },\n                {\n                    \"title\": \"560527f8-4319-4021-a522-9b4ad0aecad5.original.png\",\n                    \"url\": \"https://cdn.zender.tv/live/uploads/e1cc9d4b-2969-4d50-a74f-cb39ac5f5f68/2017-11-28/560527f8-4319-4021-a522-9b4ad0aecad5.original.png\",\n                    \"id\": \"/live/uploads/e1cc9d4b-2969-4d50-a74f-cb39ac5f5f68/2017-11-28/560527f8-4319-4021-a522-9b4ad0aecad5.original.png\"\n                },\n                {\n                    \"title\": \"26b9db64-ec8d-47fe-92c9-d4e104213ab9.original.png\",\n                    \"url\": \"https://cdn.zender.tv/live/uploads/e1cc9d4b-2969-4d50-a74f-cb39ac5f5f68/2017-11-28/26b9db64-ec8d-47fe-92c9-d4e104213ab9.original.png\",\n                    \"id\": \"/live/uploads/e1cc9d4b-2969-4d50-a74f-cb39ac5f5f68/2017-11-28/26b9db64-ec8d-47fe-92c9-d4e104213ab9.original.png\"\n                }\n            ],\n            \"icon\": {\n                \"url\": \"https://cdn.zender.tv/live/uploads/e1cc9d4b-2969-4d50-a74f-cb39ac5f5f68/2017-11-28/73ebf11e-ad24-4dcb-878f-3e9b06db280e.original.png\",\n                \"id\": \"/live/uploads/e1cc9d4b-2969-4d50-a74f-cb39ac5f5f68/2017-11-28/73ebf11e-ad24-4dcb-878f-3e9b06db280e.original.png\"\n            },\n            \"id\": \"7e85a00c-5d94-444c-93a2-b93764d50ca2\",\n            \"title\": \"Zender API Emoji Set\",\n            \"type\": \"custom\",\n            \"enabled\": true\n        },\n        {\n            \"emojis\": [\n                {\n                    \"title\": \"000-gezichten__smile01\",\n                    \"url\": \"https://cdn.zender.tv/live/uploads/e1cc9d4b-2969-4d50-a74f-cb39ac5f5f68/2017-11-28/fbc5dabe-8fb7-4c1c-8dd0-d70d37ce4559.original.png\",\n                    \"id\": \"/live/uploads/e1cc9d4b-2969-4d50-a74f-cb39ac5f5f68/2017-11-28/fbc5dabe-8fb7-4c1c-8dd0-d70d37ce4559.original.png\"\n                },\n                {\n                    \"title\": \"000-gezichten__smile02\",\n                    \"url\": \"https://cdn.zender.tv/live/uploads/e1cc9d4b-2969-4d50-a74f-cb39ac5f5f68/2017-11-28/b1554f8c-a099-4146-bb72-74e65524ac71.original.png\",\n                    \"id\": \"/live/uploads/e1cc9d4b-2969-4d50-a74f-cb39ac5f5f68/2017-11-28/b1554f8c-a099-4146-bb72-74e65524ac71.original.png\"\n                },\n                {\n                    \"title\": \"000-gezichten__smile03\",\n                    \"url\": \"https://cdn.zender.tv/live/uploads/e1cc9d4b-2969-4d50-a74f-cb39ac5f5f68/2017-11-28/a3920971-0169-41d8-b5c7-b1a5e4ebd853.original.png\",\n                    \"id\": \"/live/uploads/e1cc9d4b-2969-4d50-a74f-cb39ac5f5f68/2017-11-28/a3920971-0169-41d8-b5c7-b1a5e4ebd853.original.png\"\n                },\n                {\n                    \"title\": \"000-gezichten__smile04\",\n                    \"url\": \"https://cdn.zender.tv/live/uploads/e1cc9d4b-2969-4d50-a74f-cb39ac5f5f68/2017-11-28/5734048c-d83b-4941-8bd6-797658274424.original.png\",\n                    \"id\": \"/live/uploads/e1cc9d4b-2969-4d50-a74f-cb39ac5f5f68/2017-11-28/5734048c-d83b-4941-8bd6-797658274424.original.png\"\n                },\n                {\n                    \"title\": \"000-gezichten__smile05\",\n                    \"url\": \"https://cdn.zender.tv/live/uploads/e1cc9d4b-2969-4d50-a74f-cb39ac5f5f68/2017-11-28/5badba92-e650-4223-ba18-87585e1e07a6.original.png\",\n                    \"id\": \"/live/uploads/e1cc9d4b-2969-4d50-a74f-cb39ac5f5f68/2017-11-28/5badba92-e650-4223-ba18-87585e1e07a6.original.png\"\n                },\n                {\n                    \"title\": \"000-gezichten__smile06\",\n                    \"url\": \"https://cdn.zender.tv/live/uploads/e1cc9d4b-2969-4d50-a74f-cb39ac5f5f68/2017-11-28/3e93bc03-5c51-452a-a4ca-bd6e2121bcce.original.png\",\n                    \"id\": \"/live/uploads/e1cc9d4b-2969-4d50-a74f-cb39ac5f5f68/2017-11-28/3e93bc03-5c51-452a-a4ca-bd6e2121bcce.original.png\"\n                },\n                {\n                    \"title\": \"000-gezichten__smile07\",\n                    \"url\": \"https://cdn.zender.tv/live/uploads/e1cc9d4b-2969-4d50-a74f-cb39ac5f5f68/2017-11-28/73eb9ba8-a9f2-465d-882d-cf29d6349029.original.png\",\n                    \"id\": \"/live/uploads/e1cc9d4b-2969-4d50-a74f-cb39ac5f5f68/2017-11-28/73eb9ba8-a9f2-465d-882d-cf29d6349029.original.png\"\n                },\n                {\n                    \"title\": \"000-gezichten__smile08\",\n                    \"url\": \"https://cdn.zender.tv/live/uploads/e1cc9d4b-2969-4d50-a74f-cb39ac5f5f68/2017-11-28/cab89d89-67a6-4ec8-ab06-3fecee8c9d8d.original.png\",\n                    \"id\": \"/live/uploads/e1cc9d4b-2969-4d50-a74f-cb39ac5f5f68/2017-11-28/cab89d89-67a6-4ec8-ab06-3fecee8c9d8d.original.png\"\n                }\n            ],\n            \"icon\": {\n                \"url\": \"https://cdn.zender.tv/live/uploads/e1cc9d4b-2969-4d50-a74f-cb39ac5f5f68/2017-11-28/fbc5dabe-8fb7-4c1c-8dd0-d70d37ce4559.original.png\",\n                \"id\": \"/live/uploads/e1cc9d4b-2969-4d50-a74f-cb39ac5f5f68/2017-11-28/fbc5dabe-8fb7-4c1c-8dd0-d70d37ce4559.original.png\"\n            },\n            \"id\": \"7b3f2436-dae0-45cf-aad2-4320cd342640\",\n            \"title\": \"000-faces\"\n        },\n        {\n            \"emojis\": [\n                {\n                    \"title\": \"001-handen__hand01\",\n                    \"url\": \"https://cdn.zender.tv/live/uploads/e1cc9d4b-2969-4d50-a74f-cb39ac5f5f68/2017-11-28/16d20a2e-47ee-4315-b673-7b91e5230763.original.png\",\n                    \"id\": \"/live/uploads/e1cc9d4b-2969-4d50-a74f-cb39ac5f5f68/2017-11-28/16d20a2e-47ee-4315-b673-7b91e5230763.original.png\"\n                },\n                {\n                    \"title\": \"001-handen__hand02\",\n                    \"url\": \"https://cdn.zender.tv/live/uploads/e1cc9d4b-2969-4d50-a74f-cb39ac5f5f68/2017-11-28/655e92a4-5d18-47ab-9cf6-e39c2cb4babf.original.png\",\n                    \"id\": \"/live/uploads/e1cc9d4b-2969-4d50-a74f-cb39ac5f5f68/2017-11-28/655e92a4-5d18-47ab-9cf6-e39c2cb4babf.original.png\"\n                },\n                {\n                    \"title\": \"001-handen__hand03\",\n                    \"url\": \"https://cdn.zender.tv/live/uploads/e1cc9d4b-2969-4d50-a74f-cb39ac5f5f68/2017-11-28/1b7fe938-d774-474c-a194-d3dd1fb865a8.original.png\",\n                    \"id\": \"/live/uploads/e1cc9d4b-2969-4d50-a74f-cb39ac5f5f68/2017-11-28/1b7fe938-d774-474c-a194-d3dd1fb865a8.original.png\"\n                },\n                {\n                    \"title\": \"001-handen__hand04\",\n                    \"url\": \"https://cdn.zender.tv/live/uploads/e1cc9d4b-2969-4d50-a74f-cb39ac5f5f68/2017-11-28/e31906f3-e6be-4fb8-a902-5c07de7707bf.original.png\",\n                    \"id\": \"/live/uploads/e1cc9d4b-2969-4d50-a74f-cb39ac5f5f68/2017-11-28/e31906f3-e6be-4fb8-a902-5c07de7707bf.original.png\"\n                },\n                {\n                    \"title\": \"001-handen__hand05\",\n                    \"url\": \"https://cdn.zender.tv/live/uploads/e1cc9d4b-2969-4d50-a74f-cb39ac5f5f68/2017-11-28/9308dd80-b525-4313-9bff-7f602fbb9435.original.png\",\n                    \"id\": \"/live/uploads/e1cc9d4b-2969-4d50-a74f-cb39ac5f5f68/2017-11-28/9308dd80-b525-4313-9bff-7f602fbb9435.original.png\"\n                },\n                {\n                    \"title\": \"001-handen__hand06\",\n                    \"url\": \"https://cdn.zender.tv/live/uploads/e1cc9d4b-2969-4d50-a74f-cb39ac5f5f68/2017-11-28/957a5877-94a9-45c5-94b4-26c6e71c7b5d.original.png\",\n                    \"id\": \"/live/uploads/e1cc9d4b-2969-4d50-a74f-cb39ac5f5f68/2017-11-28/957a5877-94a9-45c5-94b4-26c6e71c7b5d.original.png\"\n                }\n            ],\n            \"icon\": {\n                \"url\": \"https://cdn.zender.tv/live/uploads/e1cc9d4b-2969-4d50-a74f-cb39ac5f5f68/2017-11-28/16d20a2e-47ee-4315-b673-7b91e5230763.original.png\",\n                \"id\": \"/live/uploads/e1cc9d4b-2969-4d50-a74f-cb39ac5f5f68/2017-11-28/16d20a2e-47ee-4315-b673-7b91e5230763.original.png\"\n            },\n            \"id\": \"4775a542-bc43-4ce6-bf43-27a0fa7acc78\",\n            \"title\": \"001-hands\"\n        },\n        {\n            \"emojis\": [\n                {\n                    \"title\": \"002-liefde__love01\",\n                    \"url\": \"https://cdn.zender.tv/live/uploads/e1cc9d4b-2969-4d50-a74f-cb39ac5f5f68/2017-11-28/9523c952-2e23-4c3a-bf83-61c9a17a4168.original.png\",\n                    \"id\": \"/live/uploads/e1cc9d4b-2969-4d50-a74f-cb39ac5f5f68/2017-11-28/9523c952-2e23-4c3a-bf83-61c9a17a4168.original.png\"\n                },\n                {\n                    \"title\": \"002-liefde__love02\",\n                    \"url\": \"https://cdn.zender.tv/live/uploads/e1cc9d4b-2969-4d50-a74f-cb39ac5f5f68/2017-11-28/f2730bd7-aa84-4027-baae-0bfbc5a2e065.original.png\",\n                    \"id\": \"/live/uploads/e1cc9d4b-2969-4d50-a74f-cb39ac5f5f68/2017-11-28/f2730bd7-aa84-4027-baae-0bfbc5a2e065.original.png\"\n                },\n                {\n                    \"title\": \"002-liefde__love03\",\n                    \"url\": \"https://cdn.zender.tv/live/uploads/e1cc9d4b-2969-4d50-a74f-cb39ac5f5f68/2017-11-28/18801fe1-bc93-4673-ac7a-e5de23677fd8.original.png\",\n                    \"id\": \"/live/uploads/e1cc9d4b-2969-4d50-a74f-cb39ac5f5f68/2017-11-28/18801fe1-bc93-4673-ac7a-e5de23677fd8.original.png\"\n                },\n                {\n                    \"title\": \"002-liefde__love04\",\n                    \"url\": \"https://cdn.zender.tv/live/uploads/e1cc9d4b-2969-4d50-a74f-cb39ac5f5f68/2017-11-28/f1ad0ac7-6e89-47cd-8af4-880dbf344dd5.original.png\",\n                    \"id\": \"/live/uploads/e1cc9d4b-2969-4d50-a74f-cb39ac5f5f68/2017-11-28/f1ad0ac7-6e89-47cd-8af4-880dbf344dd5.original.png\"\n                },\n                {\n                    \"title\": \"002-liefde__love05\",\n                    \"url\": \"https://cdn.zender.tv/live/uploads/e1cc9d4b-2969-4d50-a74f-cb39ac5f5f68/2017-11-28/4bcf20b5-237c-48e1-864c-acd5e0a736fe.original.png\",\n                    \"id\": \"/live/uploads/e1cc9d4b-2969-4d50-a74f-cb39ac5f5f68/2017-11-28/4bcf20b5-237c-48e1-864c-acd5e0a736fe.original.png\"\n                },\n                {\n                    \"title\": \"002-liefde__love06\",\n                    \"url\": \"https://cdn.zender.tv/live/uploads/e1cc9d4b-2969-4d50-a74f-cb39ac5f5f68/2017-11-28/bc9b218a-2170-4aba-aeea-efb777ff15d3.original.png\",\n                    \"id\": \"/live/uploads/e1cc9d4b-2969-4d50-a74f-cb39ac5f5f68/2017-11-28/bc9b218a-2170-4aba-aeea-efb777ff15d3.original.png\"\n                }\n            ],\n            \"icon\": {\n                \"url\": \"https://cdn.zender.tv/live/uploads/e1cc9d4b-2969-4d50-a74f-cb39ac5f5f68/2017-11-28/9523c952-2e23-4c3a-bf83-61c9a17a4168.original.png\",\n                \"id\": \"/live/uploads/e1cc9d4b-2969-4d50-a74f-cb39ac5f5f68/2017-11-28/9523c952-2e23-4c3a-bf83-61c9a17a4168.original.png\"\n            },\n            \"id\": \"5b9dab91-f96d-4b60-a612-39a2ef567077\",\n            \"title\": \"002-love\"\n        },\n        {\n            \"emojis\": [\n                {\n                    \"title\": \"003-dieren__a-bunny\",\n                    \"url\": \"https://cdn.zender.tv/live/uploads/e1cc9d4b-2969-4d50-a74f-cb39ac5f5f68/2017-11-28/d0e333f7-1905-4acb-9e63-4102c11e9db5.original.png\",\n                    \"id\": \"/live/uploads/e1cc9d4b-2969-4d50-a74f-cb39ac5f5f68/2017-11-28/d0e333f7-1905-4acb-9e63-4102c11e9db5.original.png\"\n                },\n                {\n                    \"title\": \"003-dieren__a-cat01\",\n                    \"url\": \"https://cdn.zender.tv/live/uploads/e1cc9d4b-2969-4d50-a74f-cb39ac5f5f68/2017-11-28/2cd7d92f-ebff-4bb3-b4cd-eca611443244.original.png\",\n                    \"id\": \"/live/uploads/e1cc9d4b-2969-4d50-a74f-cb39ac5f5f68/2017-11-28/2cd7d92f-ebff-4bb3-b4cd-eca611443244.original.png\"\n                },\n                {\n                    \"title\": \"003-dieren__a-cat02\",\n                    \"url\": \"https://cdn.zender.tv/live/uploads/e1cc9d4b-2969-4d50-a74f-cb39ac5f5f68/2017-11-28/c6e365e5-5cde-410f-b036-9a5970ec3aa6.original.png\",\n                    \"id\": \"/live/uploads/e1cc9d4b-2969-4d50-a74f-cb39ac5f5f68/2017-11-28/c6e365e5-5cde-410f-b036-9a5970ec3aa6.original.png\"\n                },\n                {\n                    \"title\": \"003-dieren__a-cat03\",\n                    \"url\": \"https://cdn.zender.tv/live/uploads/e1cc9d4b-2969-4d50-a74f-cb39ac5f5f68/2017-11-28/97d6ef27-1be6-4071-9f19-b613b24d553e.original.png\",\n                    \"id\": \"/live/uploads/e1cc9d4b-2969-4d50-a74f-cb39ac5f5f68/2017-11-28/97d6ef27-1be6-4071-9f19-b613b24d553e.original.png\"\n                },\n                {\n                    \"title\": \"003-dieren__a-cat04\",\n                    \"url\": \"https://cdn.zender.tv/live/uploads/e1cc9d4b-2969-4d50-a74f-cb39ac5f5f68/2017-11-28/f64293a2-a7c1-42d8-a62c-5b303617b2df.original.png\",\n                    \"id\": \"/live/uploads/e1cc9d4b-2969-4d50-a74f-cb39ac5f5f68/2017-11-28/f64293a2-a7c1-42d8-a62c-5b303617b2df.original.png\"\n                },\n                {\n                    \"title\": \"003-dieren__a-chicken\",\n                    \"url\": \"https://cdn.zender.tv/live/uploads/e1cc9d4b-2969-4d50-a74f-cb39ac5f5f68/2017-11-28/caf5e45c-fe08-4740-b5ff-7e160d88cc4e.original.png\",\n                    \"id\": \"/live/uploads/e1cc9d4b-2969-4d50-a74f-cb39ac5f5f68/2017-11-28/caf5e45c-fe08-4740-b5ff-7e160d88cc4e.original.png\"\n                }\n            ],\n            \"icon\": {\n                \"url\": \"https://cdn.zender.tv/live/uploads/e1cc9d4b-2969-4d50-a74f-cb39ac5f5f68/2017-11-28/d0e333f7-1905-4acb-9e63-4102c11e9db5.original.png\",\n                \"id\": \"/live/uploads/e1cc9d4b-2969-4d50-a74f-cb39ac5f5f68/2017-11-28/d0e333f7-1905-4acb-9e63-4102c11e9db5.original.png\"\n            },\n            \"id\": \"ed93d548-63a7-4729-bec8-8fe9cbda2dd5\",\n            \"title\": \"003-animals\"\n        },\n        {\n            \"emojis\": [\n                {\n                    \"title\": \"004-sport__s-ball\",\n                    \"url\": \"https://cdn.zender.tv/live/uploads/e1cc9d4b-2969-4d50-a74f-cb39ac5f5f68/2017-11-28/9f088285-b8af-49b5-bb18-f8c3ea950d64.original.png\",\n                    \"id\": \"/live/uploads/e1cc9d4b-2969-4d50-a74f-cb39ac5f5f68/2017-11-28/9f088285-b8af-49b5-bb18-f8c3ea950d64.original.png\"\n                },\n                {\n                    \"title\": \"004-sport__s-bike\",\n                    \"url\": \"https://cdn.zender.tv/live/uploads/e1cc9d4b-2969-4d50-a74f-cb39ac5f5f68/2017-11-28/0a13262d-501f-42d8-82d5-5e9026d32998.original.png\",\n                    \"id\": \"/live/uploads/e1cc9d4b-2969-4d50-a74f-cb39ac5f5f68/2017-11-28/0a13262d-501f-42d8-82d5-5e9026d32998.original.png\"\n                },\n                {\n                    \"title\": \"004-sport__basebal\",\n                    \"url\": \"https://cdn.zender.tv/live/uploads/e1cc9d4b-2969-4d50-a74f-cb39ac5f5f68/2017-11-28/9350eeba-6228-44ea-ae85-ac13e261e6b3.original.png\",\n                    \"id\": \"/live/uploads/e1cc9d4b-2969-4d50-a74f-cb39ac5f5f68/2017-11-28/9350eeba-6228-44ea-ae85-ac13e261e6b3.original.png\"\n                },\n                {\n                    \"title\": \"004-sport__basketbal\",\n                    \"url\": \"https://cdn.zender.tv/live/uploads/e1cc9d4b-2969-4d50-a74f-cb39ac5f5f68/2017-11-28/f5b3882c-af2d-4b3c-a4fe-b2cdae5f6d86.original.png\",\n                    \"id\": \"/live/uploads/e1cc9d4b-2969-4d50-a74f-cb39ac5f5f68/2017-11-28/f5b3882c-af2d-4b3c-a4fe-b2cdae5f6d86.original.png\"\n                },\n                {\n                    \"title\": \"004-sport__fiets\",\n                    \"url\": \"https://cdn.zender.tv/live/uploads/e1cc9d4b-2969-4d50-a74f-cb39ac5f5f68/2017-11-28/882e4699-f171-4b1b-aaad-c410d210d6a3.original.png\",\n                    \"id\": \"/live/uploads/e1cc9d4b-2969-4d50-a74f-cb39ac5f5f68/2017-11-28/882e4699-f171-4b1b-aaad-c410d210d6a3.original.png\"\n                }\n            ],\n            \"icon\": {\n                \"url\": \"https://cdn.zender.tv/live/uploads/e1cc9d4b-2969-4d50-a74f-cb39ac5f5f68/2017-11-28/9f088285-b8af-49b5-bb18-f8c3ea950d64.original.png\",\n                \"id\": \"/live/uploads/e1cc9d4b-2969-4d50-a74f-cb39ac5f5f68/2017-11-28/9f088285-b8af-49b5-bb18-f8c3ea950d64.original.png\"\n            },\n            \"id\": \"30ae1d2f-dbec-4069-93cc-0bc4352d25eb\",\n            \"title\": \"004-sport\"\n        },\n        {\n            \"emojis\": [\n                {\n                    \"title\": \"005-objecten__a-food01\",\n                    \"url\": \"https://cdn.zender.tv/live/uploads/e1cc9d4b-2969-4d50-a74f-cb39ac5f5f68/2017-11-28/8ed6b445-a414-48b3-9a0a-5a8b037b9f47.original.png\",\n                    \"id\": \"/live/uploads/e1cc9d4b-2969-4d50-a74f-cb39ac5f5f68/2017-11-28/8ed6b445-a414-48b3-9a0a-5a8b037b9f47.original.png\"\n                },\n                {\n                    \"title\": \"005-objecten__a-food02\",\n                    \"url\": \"https://cdn.zender.tv/live/uploads/e1cc9d4b-2969-4d50-a74f-cb39ac5f5f68/2017-11-28/7452ce3e-0112-4f85-b2e2-f17de5d52190.original.png\",\n                    \"id\": \"/live/uploads/e1cc9d4b-2969-4d50-a74f-cb39ac5f5f68/2017-11-28/7452ce3e-0112-4f85-b2e2-f17de5d52190.original.png\"\n                },\n                {\n                    \"title\": \"005-objecten__a-food03\",\n                    \"url\": \"https://cdn.zender.tv/live/uploads/e1cc9d4b-2969-4d50-a74f-cb39ac5f5f68/2017-11-28/2994ab4a-f49e-4e03-9c23-64067e629e51.original.png\",\n                    \"id\": \"/live/uploads/e1cc9d4b-2969-4d50-a74f-cb39ac5f5f68/2017-11-28/2994ab4a-f49e-4e03-9c23-64067e629e51.original.png\"\n                },\n                {\n                    \"title\": \"005-objecten__a-food04\",\n                    \"url\": \"https://cdn.zender.tv/live/uploads/e1cc9d4b-2969-4d50-a74f-cb39ac5f5f68/2017-11-28/43d445f0-02b1-4cde-9eb6-91b1d2267711.original.png\",\n                    \"id\": \"/live/uploads/e1cc9d4b-2969-4d50-a74f-cb39ac5f5f68/2017-11-28/43d445f0-02b1-4cde-9eb6-91b1d2267711.original.png\"\n                }\n            ],\n            \"icon\": {\n                \"url\": \"https://cdn.zender.tv/live/uploads/e1cc9d4b-2969-4d50-a74f-cb39ac5f5f68/2017-11-28/8ed6b445-a414-48b3-9a0a-5a8b037b9f47.original.png\",\n                \"id\": \"/live/uploads/e1cc9d4b-2969-4d50-a74f-cb39ac5f5f68/2017-11-28/8ed6b445-a414-48b3-9a0a-5a8b037b9f47.original.png\"\n            },\n            \"id\": \"800e75aa-16e3-4d32-aaa8-b20bc9682c98\",\n            \"title\": \"005-objects\"\n        },\n        {\n            \"emojis\": [\n                {\n                    \"title\": \"005-weer__a-weer01\",\n                    \"url\": \"https://cdn.zender.tv/live/uploads/e1cc9d4b-2969-4d50-a74f-cb39ac5f5f68/2017-11-28/7d645b32-1e43-4a32-93a5-6a48d8df842f.original.png\",\n                    \"id\": \"/live/uploads/e1cc9d4b-2969-4d50-a74f-cb39ac5f5f68/2017-11-28/7d645b32-1e43-4a32-93a5-6a48d8df842f.original.png\"\n                },\n                {\n                    \"title\": \"005-weer__a-weer02\",\n                    \"url\": \"https://cdn.zender.tv/live/uploads/e1cc9d4b-2969-4d50-a74f-cb39ac5f5f68/2017-11-28/a47dbf95-6268-4a19-ad47-2e0f86229f32.original.png\",\n                    \"id\": \"/live/uploads/e1cc9d4b-2969-4d50-a74f-cb39ac5f5f68/2017-11-28/a47dbf95-6268-4a19-ad47-2e0f86229f32.original.png\"\n                },\n                {\n                    \"title\": \"005-weer__a-weer03\",\n                    \"url\": \"https://cdn.zender.tv/live/uploads/e1cc9d4b-2969-4d50-a74f-cb39ac5f5f68/2017-11-28/61689c10-f4be-4a14-a1cb-b9c2f041ee1a.original.png\",\n                    \"id\": \"/live/uploads/e1cc9d4b-2969-4d50-a74f-cb39ac5f5f68/2017-11-28/61689c10-f4be-4a14-a1cb-b9c2f041ee1a.original.png\"\n                }\n            ],\n            \"icon\": {\n                \"url\": \"https://cdn.zender.tv/live/uploads/e1cc9d4b-2969-4d50-a74f-cb39ac5f5f68/2017-11-28/7d645b32-1e43-4a32-93a5-6a48d8df842f.original.png\",\n                \"id\": \"/live/uploads/e1cc9d4b-2969-4d50-a74f-cb39ac5f5f68/2017-11-28/7d645b32-1e43-4a32-93a5-6a48d8df842f.original.png\"\n            },\n            \"id\": \"737178d3-a13b-4b44-af2c-04f9a4b69475\",\n            \"title\": \"005-weather\"\n        }\n    ],\n    \"id\": \"a2993350-cb51-437d-bf39-41e110a71f5a\",\n    \"streamId\": \"a2993350-cb51-437d-bf39-41e110a71f5a\",\n    \"enabled\": true,\n    \"updatedAt\": \"2017-11-28T13:56:54.728Z\",\n    \"cdnHost\": \"https://cdn.zender.tv\",\n    \"defaultEmoji\": {\n        \"title\": \"73ebf11e-ad24-4dcb-878f-3e9b06db280e.original.png\",\n        \"url\": \"https://cdn.zender.tv/live/uploads/e1cc9d4b-2969-4d50-a74f-cb39ac5f5f68/2017-11-28/73ebf11e-ad24-4dcb-878f-3e9b06db280e.original.png\",\n        \"id\": \"/live/uploads/e1cc9d4b-2969-4d50-a74f-cb39ac5f5f68/2017-11-28/73ebf11e-ad24-4dcb-878f-3e9b06db280e.original.png\"\n    },\n    \"sets\": [\n        {\n            \"emojis\": [\n                {\n                    \"title\": \"73ebf11e-ad24-4dcb-878f-3e9b06db280e.original.png\",\n                    \"url\": \"https://cdn.zender.tv/live/uploads/e1cc9d4b-2969-4d50-a74f-cb39ac5f5f68/2017-11-28/73ebf11e-ad24-4dcb-878f-3e9b06db280e.original.png\",\n                    \"id\": \"/live/uploads/e1cc9d4b-2969-4d50-a74f-cb39ac5f5f68/2017-11-28/73ebf11e-ad24-4dcb-878f-3e9b06db280e.original.png\"\n                },\n                {\n                    \"title\": \"560527f8-4319-4021-a522-9b4ad0aecad5.original.png\",\n                    \"url\": \"https://cdn.zender.tv/live/uploads/e1cc9d4b-2969-4d50-a74f-cb39ac5f5f68/2017-11-28/560527f8-4319-4021-a522-9b4ad0aecad5.original.png\",\n                    \"id\": \"/live/uploads/e1cc9d4b-2969-4d50-a74f-cb39ac5f5f68/2017-11-28/560527f8-4319-4021-a522-9b4ad0aecad5.original.png\"\n                },\n                {\n                    \"title\": \"26b9db64-ec8d-47fe-92c9-d4e104213ab9.original.png\",\n                    \"url\": \"https://cdn.zender.tv/live/uploads/e1cc9d4b-2969-4d50-a74f-cb39ac5f5f68/2017-11-28/26b9db64-ec8d-47fe-92c9-d4e104213ab9.original.png\",\n                    \"id\": \"/live/uploads/e1cc9d4b-2969-4d50-a74f-cb39ac5f5f68/2017-11-28/26b9db64-ec8d-47fe-92c9-d4e104213ab9.original.png\"\n                }\n            ],\n            \"icon\": {\n                \"url\": \"https://cdn.zender.tv/live/uploads/e1cc9d4b-2969-4d50-a74f-cb39ac5f5f68/2017-11-28/73ebf11e-ad24-4dcb-878f-3e9b06db280e.original.png\",\n                \"id\": \"/live/uploads/e1cc9d4b-2969-4d50-a74f-cb39ac5f5f68/2017-11-28/73ebf11e-ad24-4dcb-878f-3e9b06db280e.original.png\"\n            },\n            \"id\": \"7e85a00c-5d94-444c-93a2-b93764d50ca2\",\n            \"title\": \"Zender API Emoji Set\",\n            \"type\": \"custom\",\n            \"enabled\": true\n        }\n    ],\n    \"postEmojis\": \"{{emojisApiHost}}/v1/channels/67b5528a-baf4-41bc-b558-b36613ee14a4/streams/a2993350-cb51-437d-bf39-41e110a71f5a/emojis/reactions\",\n    \"postAvatars\": \"{{emojisApiHost}}/v1/channels/67b5528a-baf4-41bc-b558-b36613ee14a4/streams/a2993350-cb51-437d-bf39-41e110a71f5a/emojis/avatars\",\n    \"emojis\": {\n        \"total\": 0,\n        \"counters\": {}\n    },\n    \"avatars\": {\n        \"total\": 0\n    }\n}"
								}
							]
						},
						{
							"name": "Post Emojis",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code is 200\"] = responseCode.code === 200;"
										]
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{anonymousToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"emojis\": [\n    { \"id\": \"{{defaultEmoji}}\" }\n  ]\n}"
								},
								"url": {
									"raw": "{{emojisApiHost}}/v1/channels/{{channelId}}/streams/{{streamId}}/emojis/reactions",
									"host": [
										"{{emojisApiHost}}"
									],
									"path": [
										"v1",
										"channels",
										"{{channelId}}",
										"streams",
										"{{streamId}}",
										"emojis",
										"reactions"
									]
								},
								"description": "Send a single or multiple emojis.\n\n| Permissions | no token | anonymous token | provider token | admin token |\n| ----------- | :------: | :-------------: | :------------: | :---------: |\n| Post Emojis | -        | x               | x              | x           |"
							},
							"response": [
								{
									"name": "Post Emojis (validation error)",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"disabled": false
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \n}"
										},
										"url": {
											"raw": "{{emojisApiHost}}/v1/channels/{{channelId}}/streams/{{streamId}}/emojis/reactions",
											"host": [
												"{{emojisApiHost}}"
											],
											"path": [
												"v1",
												"channels",
												"{{channelId}}",
												"streams",
												"{{streamId}}",
												"emojis",
												"reactions"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Access-Control-Allow-Headers",
											"value": "Content-Type, Authorization, Accept, Cache-Control, X-Requested-With",
											"name": "Access-Control-Allow-Headers",
											"description": "Used in response to a preflight request to indicate which HTTP headers can be used when making the actual request."
										},
										{
											"key": "Access-Control-Allow-Methods",
											"value": "GET,PUT,POST,DELETE",
											"name": "Access-Control-Allow-Methods",
											"description": "Specifies the method or methods allowed when accessing the resource. This is used in response to a preflight request."
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*",
											"name": "Access-Control-Allow-Origin",
											"description": "Specifies a URI that may access the resource. For requests without credentials, the server may specify '*' as a wildcard, thereby allowing any origin to access the resource."
										},
										{
											"key": "Cache-Control",
											"value": "no-cache,max-age=0",
											"name": "Cache-Control",
											"description": "Tells all caching mechanisms from server to client whether they may cache this object. It is measured in seconds"
										},
										{
											"key": "Connection",
											"value": "keep-alive",
											"name": "Connection",
											"description": "Options that are desired for the connection"
										},
										{
											"key": "Content-Length",
											"value": "125",
											"name": "Content-Length",
											"description": "The length of the response body in octets (8-bit bytes)"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8",
											"name": "Content-Type",
											"description": "The mime type of this content"
										},
										{
											"key": "Date",
											"value": "Tue, 17 Apr 2018 13:28:23 GMT",
											"name": "Date",
											"description": "The date and time that the message was sent"
										},
										{
											"key": "Vary",
											"value": "Accept-Encoding",
											"name": "Vary",
											"description": "Tells downstream proxies how to match future request headers to decide whether the cached response can be used rather than requesting a fresh one from the origin server."
										},
										{
											"key": "X-Response-Time",
											"value": "10ms",
											"name": "X-Response-Time",
											"description": "Custom header"
										}
									],
									"cookie": [],
									"body": "{\"message\":[{\"selector\":\"emojis\",\"tip\":\"emojis is mandatory.\"},{\"selector\":\"emojis.*.id\",\"tip\":\"emojis.*.id is mandatory.\"}]}"
								},
								{
									"name": "Post Single Emoji (success)",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"emojis\": [\n    { \"id\": \"{{defaultEmoji}}\" }\n  ]\n}"
										},
										"url": {
											"raw": "{{emojisApiHost}}/v1/channels/{{channelId}}/streams/{{streamId}}/emojis/reactions",
											"host": [
												"{{emojisApiHost}}"
											],
											"path": [
												"v1",
												"channels",
												"{{channelId}}",
												"streams",
												"{{streamId}}",
												"emojis",
												"reactions"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Access-Control-Allow-Headers",
											"value": "Content-Type, Authorization, Accept, Cache-Control, X-Requested-With",
											"name": "Access-Control-Allow-Headers",
											"description": "Used in response to a preflight request to indicate which HTTP headers can be used when making the actual request."
										},
										{
											"key": "Access-Control-Allow-Methods",
											"value": "GET,PUT,POST,DELETE",
											"name": "Access-Control-Allow-Methods",
											"description": "Specifies the method or methods allowed when accessing the resource. This is used in response to a preflight request."
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*",
											"name": "Access-Control-Allow-Origin",
											"description": "Specifies a URI that may access the resource. For requests without credentials, the server may specify '*' as a wildcard, thereby allowing any origin to access the resource."
										},
										{
											"key": "Cache-Control",
											"value": "no-cache,max-age=0",
											"name": "Cache-Control",
											"description": "Tells all caching mechanisms from server to client whether they may cache this object. It is measured in seconds"
										},
										{
											"key": "Connection",
											"value": "keep-alive",
											"name": "Connection",
											"description": "Options that are desired for the connection"
										},
										{
											"key": "Content-Length",
											"value": "2",
											"name": "Content-Length",
											"description": "The length of the response body in octets (8-bit bytes)"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8",
											"name": "Content-Type",
											"description": "The mime type of this content"
										},
										{
											"key": "Date",
											"value": "Tue, 28 Nov 2017 11:13:54 GMT",
											"name": "Date",
											"description": "The date and time that the message was sent"
										},
										{
											"key": "X-Response-Time",
											"value": "4ms",
											"name": "X-Response-Time",
											"description": "Custom header"
										}
									],
									"cookie": [],
									"body": "{}"
								},
								{
									"name": "Post Multiple Emojis (success)",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"emojis\": [\n    {\n      \"id\": \"{{defaultEmoji}}\"\n    },\n    {\n      \"id\": \"{{defaultEmoji}}\"\n    },\n    {\n      \"id\": \"{{defaultEmoji}}\"\n    },\n    {\n      \"id\": \"{{defaultEmoji}}\"\n    },\n    {\n      \"id\": \"{{defaultEmoji}}\"\n    },\n    {\n      \"id\": \"{{defaultEmoji}}\"\n    },\n    {\n      \"id\": \"{{defaultEmoji}}\"\n    },\n    {\n      \"id\": \"{{defaultEmoji}}\"\n    },\n    {\n      \"id\": \"{{defaultEmoji}}\"\n    },\n    {\n      \"id\": \"{{defaultEmoji}}\"\n    }\n  ]\n}"
										},
										"url": {
											"raw": "{{emojisApiHost}}/v1/channels/{{channelId}}/streams/{{streamId}}/emojis/reactions",
											"host": [
												"{{emojisApiHost}}"
											],
											"path": [
												"v1",
												"channels",
												"{{channelId}}",
												"streams",
												"{{streamId}}",
												"emojis",
												"reactions"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Access-Control-Allow-Headers",
											"value": "Content-Type, Authorization, Accept, Cache-Control, X-Requested-With",
											"name": "Access-Control-Allow-Headers",
											"description": "Used in response to a preflight request to indicate which HTTP headers can be used when making the actual request."
										},
										{
											"key": "Access-Control-Allow-Methods",
											"value": "GET,PUT,POST,DELETE",
											"name": "Access-Control-Allow-Methods",
											"description": "Specifies the method or methods allowed when accessing the resource. This is used in response to a preflight request."
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*",
											"name": "Access-Control-Allow-Origin",
											"description": "Specifies a URI that may access the resource. For requests without credentials, the server may specify '*' as a wildcard, thereby allowing any origin to access the resource."
										},
										{
											"key": "Cache-Control",
											"value": "no-cache,max-age=0",
											"name": "Cache-Control",
											"description": "Tells all caching mechanisms from server to client whether they may cache this object. It is measured in seconds"
										},
										{
											"key": "Connection",
											"value": "keep-alive",
											"name": "Connection",
											"description": "Options that are desired for the connection"
										},
										{
											"key": "Content-Length",
											"value": "2",
											"name": "Content-Length",
											"description": "The length of the response body in octets (8-bit bytes)"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8",
											"name": "Content-Type",
											"description": "The mime type of this content"
										},
										{
											"key": "Date",
											"value": "Tue, 28 Nov 2017 11:13:54 GMT",
											"name": "Date",
											"description": "The date and time that the message was sent"
										},
										{
											"key": "X-Response-Time",
											"value": "4ms",
											"name": "X-Response-Time",
											"description": "Custom header"
										}
									],
									"cookie": [],
									"body": "{}"
								}
							]
						},
						{
							"name": "Post Avatars",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code is 200\"] = responseCode.code === 200;"
										]
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{providerToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"count\": 10\n}"
								},
								"url": {
									"raw": "{{emojisApiHost}}/v1/channels/{{channelId}}/streams/{{streamId}}/emojis/avatars",
									"host": [
										"{{emojisApiHost}}"
									],
									"path": [
										"v1",
										"channels",
										"{{channelId}}",
										"streams",
										"{{streamId}}",
										"emojis",
										"avatars"
									]
								},
								"description": "Posting an avatar is only possible if the Bearer token in the authorization header belongs to a non-anonymous user. To login as a authenticated user see: \"Provider Token Login\".\n\n| Permissions  | no token | anonymous token | provider token | admin token |\n| ------------ | :------: | :-------------: | :------------: | :---------: |\n| Post Avatars | -        | x               | x              | x           |"
							},
							"response": [
								{
									"name": "Post Avatars (validation error)",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"disabled": false
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \n}"
										},
										"url": {
											"raw": "{{emojisApiHost}}/v1/channels/{{channelId}}/streams/{{streamId}}/emojis/avatars",
											"host": [
												"{{emojisApiHost}}"
											],
											"path": [
												"v1",
												"channels",
												"{{channelId}}",
												"streams",
												"{{streamId}}",
												"emojis",
												"avatars"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Access-Control-Allow-Headers",
											"value": "Content-Type, Authorization, Accept, Cache-Control, X-Requested-With",
											"name": "Access-Control-Allow-Headers",
											"description": "Used in response to a preflight request to indicate which HTTP headers can be used when making the actual request."
										},
										{
											"key": "Access-Control-Allow-Methods",
											"value": "GET,PUT,POST,DELETE",
											"name": "Access-Control-Allow-Methods",
											"description": "Specifies the method or methods allowed when accessing the resource. This is used in response to a preflight request."
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*",
											"name": "Access-Control-Allow-Origin",
											"description": "Specifies a URI that may access the resource. For requests without credentials, the server may specify '*' as a wildcard, thereby allowing any origin to access the resource."
										},
										{
											"key": "Cache-Control",
											"value": "no-cache,max-age=0",
											"name": "Cache-Control",
											"description": "Tells all caching mechanisms from server to client whether they may cache this object. It is measured in seconds"
										},
										{
											"key": "Connection",
											"value": "keep-alive",
											"name": "Connection",
											"description": "Options that are desired for the connection"
										},
										{
											"key": "Content-Length",
											"value": "62",
											"name": "Content-Length",
											"description": "The length of the response body in octets (8-bit bytes)"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8",
											"name": "Content-Type",
											"description": "The mime type of this content"
										},
										{
											"key": "Date",
											"value": "Tue, 17 Apr 2018 13:29:19 GMT",
											"name": "Date",
											"description": "The date and time that the message was sent"
										},
										{
											"key": "Vary",
											"value": "Accept-Encoding",
											"name": "Vary",
											"description": "Tells downstream proxies how to match future request headers to decide whether the cached response can be used rather than requesting a fresh one from the origin server."
										},
										{
											"key": "X-Response-Time",
											"value": "3ms",
											"name": "X-Response-Time",
											"description": "Custom header"
										}
									],
									"cookie": [],
									"body": "{\"message\":[{\"selector\":\"count\",\"tip\":\"count is mandatory.\"}]}"
								},
								{
									"name": "Post Multiple Emojis (success)",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"emojis\": [\n    {\n      \"id\": \"{{defaultEmoji}}\"\n    },\n    {\n      \"id\": \"{{defaultEmoji}}\"\n    },\n    {\n      \"id\": \"{{defaultEmoji}}\"\n    },\n    {\n      \"id\": \"{{defaultEmoji}}\"\n    },\n    {\n      \"id\": \"{{defaultEmoji}}\"\n    },\n    {\n      \"id\": \"{{defaultEmoji}}\"\n    },\n    {\n      \"id\": \"{{defaultEmoji}}\"\n    },\n    {\n      \"id\": \"{{defaultEmoji}}\"\n    },\n    {\n      \"id\": \"{{defaultEmoji}}\"\n    },\n    {\n      \"id\": \"{{defaultEmoji}}\"\n    }\n  ]\n}"
										},
										"url": {
											"raw": "{{emojisApiHost}}/v1/channels/{{channelId}}/streams/{{streamId}}/emojis/reactions",
											"host": [
												"{{emojisApiHost}}"
											],
											"path": [
												"v1",
												"channels",
												"{{channelId}}",
												"streams",
												"{{streamId}}",
												"emojis",
												"reactions"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Access-Control-Allow-Headers",
											"value": "Content-Type, Authorization, Accept, Cache-Control, X-Requested-With",
											"name": "Access-Control-Allow-Headers",
											"description": "Used in response to a preflight request to indicate which HTTP headers can be used when making the actual request."
										},
										{
											"key": "Access-Control-Allow-Methods",
											"value": "GET,PUT,POST,DELETE",
											"name": "Access-Control-Allow-Methods",
											"description": "Specifies the method or methods allowed when accessing the resource. This is used in response to a preflight request."
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*",
											"name": "Access-Control-Allow-Origin",
											"description": "Specifies a URI that may access the resource. For requests without credentials, the server may specify '*' as a wildcard, thereby allowing any origin to access the resource."
										},
										{
											"key": "Cache-Control",
											"value": "no-cache,max-age=0",
											"name": "Cache-Control",
											"description": "Tells all caching mechanisms from server to client whether they may cache this object. It is measured in seconds"
										},
										{
											"key": "Connection",
											"value": "keep-alive",
											"name": "Connection",
											"description": "Options that are desired for the connection"
										},
										{
											"key": "Content-Length",
											"value": "2",
											"name": "Content-Length",
											"description": "The length of the response body in octets (8-bit bytes)"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8",
											"name": "Content-Type",
											"description": "The mime type of this content"
										},
										{
											"key": "Date",
											"value": "Tue, 28 Nov 2017 11:13:54 GMT",
											"name": "Date",
											"description": "The date and time that the message was sent"
										},
										{
											"key": "X-Response-Time",
											"value": "4ms",
											"name": "X-Response-Time",
											"description": "Custom header"
										}
									],
									"cookie": [],
									"body": "{}"
								},
								{
									"name": "Post Single Emoji (success)",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"emojis\": [\n    { \"id\": \"{{defaultEmoji}}\" }\n  ]\n}"
										},
										"url": {
											"raw": "{{emojisApiHost}}/v1/channels/{{channelId}}/streams/{{streamId}}/emojis/reactions",
											"host": [
												"{{emojisApiHost}}"
											],
											"path": [
												"v1",
												"channels",
												"{{channelId}}",
												"streams",
												"{{streamId}}",
												"emojis",
												"reactions"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Access-Control-Allow-Headers",
											"value": "Content-Type, Authorization, Accept, Cache-Control, X-Requested-With",
											"name": "Access-Control-Allow-Headers",
											"description": "Used in response to a preflight request to indicate which HTTP headers can be used when making the actual request."
										},
										{
											"key": "Access-Control-Allow-Methods",
											"value": "GET,PUT,POST,DELETE",
											"name": "Access-Control-Allow-Methods",
											"description": "Specifies the method or methods allowed when accessing the resource. This is used in response to a preflight request."
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*",
											"name": "Access-Control-Allow-Origin",
											"description": "Specifies a URI that may access the resource. For requests without credentials, the server may specify '*' as a wildcard, thereby allowing any origin to access the resource."
										},
										{
											"key": "Cache-Control",
											"value": "no-cache,max-age=0",
											"name": "Cache-Control",
											"description": "Tells all caching mechanisms from server to client whether they may cache this object. It is measured in seconds"
										},
										{
											"key": "Connection",
											"value": "keep-alive",
											"name": "Connection",
											"description": "Options that are desired for the connection"
										},
										{
											"key": "Content-Length",
											"value": "2",
											"name": "Content-Length",
											"description": "The length of the response body in octets (8-bit bytes)"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8",
											"name": "Content-Type",
											"description": "The mime type of this content"
										},
										{
											"key": "Date",
											"value": "Tue, 28 Nov 2017 11:13:54 GMT",
											"name": "Date",
											"description": "The date and time that the message was sent"
										},
										{
											"key": "X-Response-Time",
											"value": "4ms",
											"name": "X-Response-Time",
											"description": "Custom header"
										}
									],
									"cookie": [],
									"body": "{}"
								}
							]
						}
					],
					"description": "## Emoji events\n\nApart from the HTTP API calls there are [Pusher](https://pusher.com) events with info about stats (emojis thrown). Since the emojis module relies on events being sent from pusher you must subscribe to the pusher-channel provided in the response of the [Get Target](#5810f0fe-7be7-6839-c4a7-307b2527777e) (pusher connection info) and [Get Stream](#aaa9244a-d56c-b2da-67df-3b63c36ae2b3) (the interaction channel id) calls.\n\n\n## Emoji interaction enabled/disabled\n\nChannel: stream-{streamId}-emojis\n\nEvent: emojis-enable\n\n```\n{\n  \"enabled\": false\n}\n```\n\n## Emoji stats (results)\n\nChannel: stream-{streamId}-emojis\n\nEvent: emojis-stats\n\n```\n{\n  \"total\": 403,\n  \"counters\": {\n    \"/live/uploads/841722a9-4e7e-4851-b185-bf27320a6ba5.png\": 1,\n    \"/live/uploads/3191dd39-8786-49e3-860b-ecc316fbbbcd.png\": 1,\n    \"/live/uploads/f66671a0-a04e-4050-bdef-728bdab5d33f.png\": 1,\n    \"/live/uploads/9b89cdf3-05c4-4718-90ed-2d2365c4ddda.png\": 1,\n    \"/live/uploads/a8d60f0b-32e8-49f5-9229-42fb6b317249.png\": 1,\n    \"/live/uploads/d00849e8-ec37-46ad-9f2e-c56ca3420689.png\": 1,\n    \"/live/uploads/ac94cdf8-5d28-4c77-98fb-3cf45e3da1a9.png\": 1,\n    \"/live/uploads/e6074d88-9369-4dd9-91c1-01e044c13bd5.png\": 1,\n    \"/live/uploads/d5be4cd5-db4e-4495-941a-bcaa24f27830.png\": 1,\n    \"/live/uploads/7e5d0564-c4a7-42a0-acd5-118f00bb5fd8.png\": 1,\n    \"/live/uploads/5aa91d73-b1ff-4149-a597-9f64e328b60b.png\": 1,\n    \"/live/uploads/b8ef4498-ba8d-4fcd-81c9-bbe0f483a135.png\": 1,\n    \"/live/uploads/957968e4-88d8-4889-be80-6cd2c8e4bb16.png\": 1,\n    \"/live/uploads/05cbe6b9-726d-4eb9-a19e-509ca75d054d.png\": 1,\n    \"/live/uploads/043da308-485f-4760-a055-8cc90b4f9d12.png\": 1,\n    \"/live/uploads/81bd9e1e-b8e6-4c9e-b8e6-92b91ef10a61.png\": 1,\n    \"/live/uploads/b3a23af2-b18f-41ad-a127-b99cffc32a37.png\": 1,\n    \"/live/uploads/c750cd02-1df4-40f3-bcb8-a0d631b6e7ff.png\": 1,\n    \"/live/uploads/79282c65-5b0a-4b8f-8adf-863c935bdbd2.png\": 1,\n    \"/live/uploads/11845d10-a340-4e7f-b2bd-5b65ca256eda.png\": 1,\n    \"/live/uploads/312c961d-e297-402e-b4a2-263169d13797.png\": 1,\n    \"/live/uploads/397e7d85-ac0d-4894-b6d7-1439549f35e5.png\": 1,\n    \"/live/uploads/75cb5266-40d3-420c-b251-2e9fc4f9ca7d.png\": 1,\n    \"/live/uploads/915b7dc2-c4c3-43a9-bde3-78e2763318d1.png\": 1,\n    \"/live/uploads/0c56485e-c215-4f66-8fc2-860478635267.png\": 1,\n    \"/live/uploads/f28cd981-ab9d-4bc9-98d6-c182b2907ceb.png\": 1,\n    \"/live/uploads/edbadd71-4267-401d-9754-f13ae85f2d43.png\": 1,\n    \"/live/uploads/1336341f-061c-4adf-a83d-e8667a167e1b.png\": 1,\n    \"/live/uploads/dc5c6ca7-5e6c-40da-9079-7b045c56b50b.png\": 1,\n    \"/live/uploads/9cd28161-b215-46cb-a689-075408a5f718.png\": 1\n  }\n}\n```",
					"_postman_isSubFolder": true
				},
				{
					"name": "Media",
					"item": [
						{
							"name": "Get Media Config",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code is 200\"] = responseCode.code === 200;",
											"var data = JSON.parse(responseBody);",
											"tests[\"Response has content id\"] = data.id !== null;",
											"postman.setEnvironmentVariable(\"contentId\", data.id);"
										]
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{anonymousToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{adminToken}}"
									}
								],
								"url": {
									"raw": "{{mediaApiHost}}/v1/channels/{{channelId}}/streams/{{streamId}}/media/config",
									"host": [
										"{{mediaApiHost}}"
									],
									"path": [
										"v1",
										"channels",
										"{{channelId}}",
										"streams",
										"{{streamId}}",
										"media",
										"config"
									]
								},
								"description": "Get the media config of a particular stream.\n\nThe response of can contain triggered content items that contain an image and/or video. The media content items will always have a \"routing\" attribute that can be either 'studio' (studio visualisation) or 'player' (the zender player).\n\nWhen a different url is needed for native video versus web, the url will be separated by '|native:', so in effect: 'https://some.video/stream|native:rtsp://some.other/url' should be split up in those two parts.\n\n| Permissions      | no token | anonymous token | provider token | admin token |\n| ---------------- | :------: | :-------------: | :------------: | :---------: |\n| Get Media Config | x        | x               | x              | x           |"
							},
							"response": [
								{
									"name": "Get Media Config",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{adminToken}}"
											}
										],
										"url": {
											"raw": "{{mediaApiHost}}/v1/channels/{{channelId}}/streams/{{streamId}}/media/config",
											"host": [
												"{{mediaApiHost}}"
											],
											"path": [
												"v1",
												"channels",
												"{{channelId}}",
												"streams",
												"{{streamId}}",
												"media",
												"config"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Access-Control-Allow-Headers",
											"value": "Content-Type, Authorization, Accept, Cache-Control, X-Requested-With",
											"name": "Access-Control-Allow-Headers",
											"description": "Used in response to a preflight request to indicate which HTTP headers can be used when making the actual request."
										},
										{
											"key": "Access-Control-Allow-Methods",
											"value": "GET,PUT,POST,DELETE",
											"name": "Access-Control-Allow-Methods",
											"description": "Specifies the method or methods allowed when accessing the resource. This is used in response to a preflight request."
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*",
											"name": "Access-Control-Allow-Origin",
											"description": "Specifies a URI that may access the resource. For requests without credentials, the server may specify '*' as a wildcard, thereby allowing any origin to access the resource."
										},
										{
											"key": "Cache-Control",
											"value": "public, max-age=5",
											"name": "Cache-Control",
											"description": "Tells all caching mechanisms from server to client whether they may cache this object. It is measured in seconds"
										},
										{
											"key": "Connection",
											"value": "keep-alive",
											"name": "Connection",
											"description": "Options that are desired for the connection"
										},
										{
											"key": "Content-Length",
											"value": "1269",
											"name": "Content-Length",
											"description": "The length of the response body in octets (8-bit bytes)"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8",
											"name": "Content-Type",
											"description": "The mime type of this content"
										},
										{
											"key": "Date",
											"value": "Tue, 28 Nov 2017 14:07:11 GMT",
											"name": "Date",
											"description": "The date and time that the message was sent"
										},
										{
											"key": "X-Response-Time",
											"value": "20ms",
											"name": "X-Response-Time",
											"description": "Custom header"
										}
									],
									"cookie": [],
									"body": "{\n    \"createdAt\": \"2017-11-28T13:55:31.739Z\",\n    \"id\": \"a2993350-cb51-437d-bf39-41e110a71f5a\",\n    \"streamId\": \"a2993350-cb51-437d-bf39-41e110a71f5a\",\n    \"enabled\": true,\n    \"updatedAt\": \"2017-11-28T13:57:21.427Z\",\n    \"content\": [\n        {\n            \"routing\": \"studio\",\n            \"createdAt\": \"2017-11-28T13:58:08.400Z\",\n            \"view\": {\n                \"image\": {\n                    \"url\": \"https://cdn.zender.tv/live/uploads/03013c55-9996-4735-bbff-e1405601346e/2017-11-28/4fd6327e-6189-4c68-a5fc-dacca6013ab8.original.png\"\n                }\n            },\n            \"streamId\": \"a2993350-cb51-437d-bf39-41e110a71f5a\",\n            \"description\": \"Zender API Media Pancarte\",\n            \"id\": \"80f0fe65-ae45-43d9-a1f5-5ad7fbd7fbf7\",\n            \"title\": \"Zender API Media Pancarte\"\n        },\n        {\n            \"routing\": \"player\",\n            \"createdAt\": \"2017-11-28T13:57:42.399Z\",\n            \"view\": {\n                \"image\": {\n                    \"url\": \"https://cdn..zender.tv/live/uploads/03013c55-9996-4735-bbff-e1405601346e/2017-11-28/4fd6327e-6189-4c68-a5fc-dacca6013ab8.original.png\"\n                },\n                \"video\": {\n                    \"autoplay\": true,\n                    \"aspectRatio\": \"16:9\",\n                    \"loop\": true,\n                    \"url\": \"https://cdn.zender.tv/live/uploads/03013c55-9996-4735-bbff-e1405601346e/2017-11-28/567153ca-482c-476f-a289-6317b9360574.original.mp4\",\n                    \"alternativeUrls\": [\n                    \t\"https://cdn.zender.tv/live/uploads/03013c55-9996-4735-bbff-e1405601346e/2017-11-28/567153ca-482c-476f-a289-6317b9360574.alternative.mp4\"\t\n                    ],\n                    \"allowedRegions\": \"BE\"\n                }\n            },\n            \"streamId\": \"a2993350-cb51-437d-bf39-41e110a71f5a\",\n            \"description\": \"Zender API Media Pancarte\",\n            \"id\": \"49a2328f-3759-44bf-8499-f0e2601efee7\",\n            \"title\": \"Zender API Media Pancarte\"\n        }\n    ]\n}"
								}
							]
						}
					],
					"description": "## Media events\n\nApart from the HTTP API calls there are [Pusher](https://pusher.com) events with info about content. Since the media module relies on events being sent from pusher you must subscribe to the pusher-channel provided in the response of the [Get Target](#5810f0fe-7be7-6839-c4a7-307b2527777e) (pusher connection info) and [Get Stream](#aaa9244a-d56c-b2da-67df-3b63c36ae2b3) (the interaction channel id) calls.\n\n## Content add\n\nChannel: stream-{streamId}-media\n\nEvent: content-add\n\n```\n{\n  \"content\": [\n    {\n      \"createdAt\": \"2018-04-16T14:57:05.705Z\",\n      \"routing\": \"player\",\n      \"view\": {\n        \"image\": {\n          \"url\": \"https://cdn.zender.tv/live/uploads/03013c55-9996-4735-bbff-e1405601346e/2017-11-28/567153ca-482c-476f-a289-6317b9360574.original.png\"\n        },\n        \"video\": {\n          \"autoplay\": false,\n          \"aspectRatio\": \"4:3\",\n          \"url\": \"https://cdn.zender.tv/live/uploads/03013c55-9996-4735-bbff-e1405601346e/2017-11-28/567153ca-482c-476f-a289-6317b9360574.original.mp4\"\n        }\n      },\n      \"streamId\": \"<streamId>\",\n      \"update\": \"update\",\n      \"id\": \"d4135bba-90c2-4ea2-ac0b-c2b525fbf165\",\n      \"triggeredAt\": \"2018-04-16T14:57:06.845Z\",\n      \"title\": \"a video\",\n      \"type\": \"video\",\n      \"updatedAt\": \"2018-04-16T14:57:06.845Z\"\n    }\n  ]\n}\n```\n\n## Content delete\n\nChannel: stream-{streamId}-media\n\nEvent: content-delete\n\n```\n{\n  \"ids\": [\n    \"d4135bba-90c2-4ea2-ac0b-c2b525fbf165\"\n  ]\n}\n```",
					"_postman_isSubFolder": true
				},
				{
					"name": "Shoutbox",
					"item": [
						{
							"name": "Get Shoutbox Config",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code is 200\"] = responseCode.code === 200;"
										]
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{providerToken}}"
									}
								],
								"url": {
									"raw": "{{shoutboxApiHost}}/v1/channels/{{channelId}}/streams/{{streamId}}/shoutbox/config",
									"host": [
										"{{shoutboxApiHost}}"
									],
									"path": [
										"v1",
										"channels",
										"{{channelId}}",
										"streams",
										"{{streamId}}",
										"shoutbox",
										"config"
									]
								},
								"description": "Get the shoutbox configuration for a given stream.\n\n| Permissions         | no token | anonymous token | provider token | admin token |\n| ------------------- | :------: | :-------------: | :------------: | :---------: |\n| Get Shoutbox Config | x        | x               | x              | x           |"
							},
							"response": [
								{
									"name": "Get Shoutbox Config",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"warning": ""
											},
											{
												"key": "Authorization",
												"value": "Bearer {{anonymousToken}}",
												"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman."
											}
										],
										"url": {
											"raw": "{{shoutboxApiHost}}/v1/channels/{{channelId}}/streams/{{streamId}}/shoutbox/config",
											"host": [
												"{{shoutboxApiHost}}"
											],
											"path": [
												"v1",
												"channels",
												"{{channelId}}",
												"streams",
												"{{streamId}}",
												"shoutbox",
												"config"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Access-Control-Allow-Headers",
											"value": "Content-Type, Authorization, Accept, Cache-Control, X-Requested-With",
											"name": "Access-Control-Allow-Headers",
											"description": "Used in response to a preflight request to indicate which HTTP headers can be used when making the actual request."
										},
										{
											"key": "Access-Control-Allow-Methods",
											"value": "GET,PUT,POST,DELETE",
											"name": "Access-Control-Allow-Methods",
											"description": "Specifies the method or methods allowed when accessing the resource. This is used in response to a preflight request."
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*",
											"name": "Access-Control-Allow-Origin",
											"description": "Specifies a URI that may access the resource. For requests without credentials, the server may specify '*' as a wildcard, thereby allowing any origin to access the resource."
										},
										{
											"key": "Cache-Control",
											"value": "max-age=5",
											"name": "Cache-Control",
											"description": "Tells all caching mechanisms from server to client whether they may cache this object. It is measured in seconds"
										},
										{
											"key": "Connection",
											"value": "keep-alive",
											"name": "Connection",
											"description": "Options that are desired for the connection"
										},
										{
											"key": "Content-Length",
											"value": "2902",
											"name": "Content-Length",
											"description": "The length of the response body in octets (8-bit bytes)"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8",
											"name": "Content-Type",
											"description": "The mime type of this content"
										},
										{
											"key": "Date",
											"value": "Tue, 28 Nov 2017 14:51:51 GMT",
											"name": "Date",
											"description": "The date and time that the message was sent"
										},
										{
											"key": "X-Response-Time",
											"value": "22ms",
											"name": "X-Response-Time",
											"description": "Custom header"
										}
									],
									"cookie": [],
									"body": "{\n    \"createdAt\": \"2017-11-28T13:55:31.657Z\",\n    \"streamId\": \"a2993350-cb51-437d-bf39-41e110a71f5a\",\n    \"topic\": \"Topic\",\n    \"id\": \"a2993350-cb51-437d-bf39-41e110a71f5a\",\n    \"placeholder\": \"Leave a message plz...\",\n    \"welcome\": \"Welcome to the new live stream\",\n    \"enabled\": true,\n    \"updatedAt\": \"2017-11-28T14:43:43.326Z\",\n    \"postShouts\": \"{{shoutboxApiHost}}/v1/channels/67b5528a-baf4-41bc-b558-b36613ee14a4/streams/a2993350-cb51-437d-bf39-41e110a71f5a/shoutbox/messages\",\n    \"shouts\": [\n        {\n            \"createdAt\": \"2017-11-28T14:50:50.426Z\",\n            \"clientId\": \"bdaac6e5-fb79-462c-b669-80641bfef413-1511880426214\",\n            \"streamId\": \"a2993350-cb51-437d-bf39-41e110a71f5a\",\n            \"id\": \"92639bcc-05c8-4c8f-b7f3-4f01710264d8\",\n            \"type\": \"user\",\n            \"userId\": \"f468fca3-1287-4858-880f-7c099e0ba1d3\",\n            \"content\": {\n                \"text\": \"Something interesting.\"\n            },\n            \"user\": {\n                \"id\": \"f468fca3-1287-4858-880f-7c099e0ba1d3\",\n                \"avatar\": \"https://graph.facebook.com/undefined/picture?width=250&type=square\",\n                \"externalId\": \"b8f99a0c-1383-4891-af7a-563b5903d390_undefined\"\n            }\n        },\n        {\n            \"createdAt\": \"2017-11-28T14:50:17.999Z\",\n            \"clientId\": \"bdaac6e5-fb79-462c-b669-80641bfef413-1511880426210\",\n            \"streamId\": \"a2993350-cb51-437d-bf39-41e110a71f5a\",\n            \"id\": \"58e51b0a-fc89-491d-980d-8b03877d8b49\",\n            \"type\": \"user\",\n            \"userId\": \"f468fca3-1287-4858-880f-7c099e0ba1d3\",\n            \"content\": {\n                \"text\": \"Something interesting.\"\n            },\n            \"user\": {\n                \"id\": \"f468fca3-1287-4858-880f-7c099e0ba1d3\",\n                \"avatar\": \"https://graph.facebook.com/undefined/picture?width=250&type=square\",\n                \"externalId\": \"b8f99a0c-1383-4891-af7a-563b5903d390_undefined\"\n            }\n        }\n    ]\n}"
								}
							]
						},
						{
							"name": "Get Shoutbox Messages",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code is 200\"] = responseCode.code === 200;",
											"var data = JSON.parse(responseBody);",
											"tests[\"Response has messages\"] = data !== null && data.length > 0;",
											"postman.setEnvironmentVariable(\"messageId\", data[0].id);"
										]
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{anonymousToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{shoutboxApiHost}}/v1/channels/{{channelId}}/streams/{{streamId}}/shoutbox/messages",
									"host": [
										"{{shoutboxApiHost}}"
									],
									"path": [
										"v1",
										"channels",
										"{{channelId}}",
										"streams",
										"{{streamId}}",
										"shoutbox",
										"messages"
									]
								},
								"description": "Get all shoutbox messages.\n\n| Permissions           | no token | anonymous token | provider token | admin token |\n| --------------------- | :------: | :-------------: | :------------: | :---------: |\n| Get Shoutbox Messages | x        | x               | x              | x           |"
							},
							"response": []
						},
						{
							"name": "Send Shoutbox Message",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{providerToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"type\": \"user\",\n  \"clientId\": \"bdaac6e5-fb79-462c-b669-80641bfef413-1511880426214\",\n  \"content\": {\n    \"text\": \"Something interesting.\",\n    \"image\": \"https://cdn.zender.tv/live/uploads/03013c55-9996-4735-bbff-e1405601346e/2017-11-28/4fd6327e-6189-4c68-a5fc-dacca6013ab8.original.png\"\n  }\n}"
								},
								"url": {
									"raw": "{{shoutboxApiHost}}/v1/channels/{{channelId}}/streams/{{streamId}}/shoutbox/messages",
									"host": [
										"{{shoutboxApiHost}}"
									],
									"path": [
										"v1",
										"channels",
										"{{channelId}}",
										"streams",
										"{{streamId}}",
										"shoutbox",
										"messages"
									]
								},
								"description": "Send a shoutbox message.\n\n**200 OK**: Message send successfully. See \"Send Shoutbox Message (success)\" example.\n\n**403 FORBIDDEN**: If you try to send a message with a token of a user with role that does not match one of the roles defined in the \"voteRoles\" array of the poll. See \"Send Shoutbox Message (auth role mismatch)\" example.\n\n| Permissions           | no token | anonymous token | provider token | admin token |\n| --------------------- | :------: | :-------------: | :------------: | :---------: |\n| Send Shoutbox Message | -        | configurable    | configurable   | -           |"
							},
							"response": [
								{
									"name": "Send Shoutbox Message (auth role mismatch)",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"type\": \"user\",\n  \"clientId\": \"bdaac6e5-fb79-462c-b669-80641bfef413-1511880426214\",\n  \"content\": {\n    \"text\": \"Something interesting.\"\n  }\n}"
										},
										"url": {
											"raw": "{{shoutboxApiHost}}/v1/channels/3789b16d-8e9d-4071-9209-2dae67be3760/streams/abe2c3fb-a60a-41ee-b6e3-a649755bdea2/shoutbox/messages",
											"host": [
												"{{shoutboxApiHost}}"
											],
											"path": [
												"v1",
												"channels",
												"3789b16d-8e9d-4071-9209-2dae67be3760",
												"streams",
												"abe2c3fb-a60a-41ee-b6e3-a649755bdea2",
												"shoutbox",
												"messages"
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Access-Control-Allow-Headers",
											"value": "Content-Type, Authorization, Accept, Cache-Control, X-Requested-With, X-On-Behalf-Of-User-Id",
											"name": "Access-Control-Allow-Headers",
											"description": "Used in response to a preflight request to indicate which HTTP headers can be used when making the actual request."
										},
										{
											"key": "Access-Control-Allow-Methods",
											"value": "GET,PUT,POST,DELETE",
											"name": "Access-Control-Allow-Methods",
											"description": "Specifies the method or methods allowed when accessing the resource. This is used in response to a preflight request."
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*",
											"name": "Access-Control-Allow-Origin",
											"description": "Specifies a URI that may access the resource. For requests without credentials, the server may specify '*' as a wildcard, thereby allowing any origin to access the resource."
										},
										{
											"key": "Cache-Control",
											"value": "no-cache,max-age=0",
											"name": "Cache-Control",
											"description": "Tells all caching mechanisms from server to client whether they may cache this object. It is measured in seconds"
										},
										{
											"key": "Connection",
											"value": "keep-alive",
											"name": "Connection",
											"description": "Options that are desired for the connection"
										},
										{
											"key": "Content-Length",
											"value": "62",
											"name": "Content-Length",
											"description": "The length of the response body in octets (8-bit bytes)"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8",
											"name": "Content-Type",
											"description": "The mime type of this content"
										},
										{
											"key": "Date",
											"value": "Tue, 17 Apr 2018 11:38:41 GMT",
											"name": "Date",
											"description": "The date and time that the message was sent"
										},
										{
											"key": "Vary",
											"value": "Accept-Encoding",
											"name": "Vary",
											"description": "Tells downstream proxies how to match future request headers to decide whether the cached response can be used rather than requesting a fresh one from the origin server."
										},
										{
											"key": "X-Response-Time",
											"value": "137ms",
											"name": "X-Response-Time",
											"description": "Custom header"
										}
									],
									"cookie": [],
									"body": "{\"code\":\"FORBIDDEN\",\"message\":\"You are not allowed to shout.\"}"
								},
								{
									"name": "Send Shoutbox Message (validation error)",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"type\": \"user\",\n  \"clientId\": \"bdaac6e5-fb79-462c-b669-80641bfef413-1511880426214\",\n  \"content\": {\n    \"text\": \"Something interesting.\",\n    \"image\": \"https://cdn.zender.tv/live/uploads/03013c55-9996-4735-bbff-e1405601346e/2017-11-28/4fd6327e-6189-4c68-a5fc-dacca6013ab8.original.png\"\n  }\n}"
										},
										"url": {
											"raw": "{{shoutboxApiHost}}/v1/channels/{{channelId}}/streams/{{streamId}}/shoutbox/messages",
											"host": [
												"{{shoutboxApiHost}}"
											],
											"path": [
												"v1",
												"channels",
												"{{channelId}}",
												"streams",
												"{{streamId}}",
												"shoutbox",
												"messages"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [],
									"cookie": [],
									"body": "{\n\"message\":[{\"selector\":\"type\",\"tip\":\"type is mandatory.\"},{\"selector\":\"clientId\",\"tip\":\"clientId is mandatory.\"},{\"selector\":\"content.text\",\"tip\":\"content.text is mandatory.\"}]}"
								},
								{
									"name": "Send Shoutbox Message (success)",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"warning": ""
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"type\": \"user\",\n  \"clientId\": \"bdaac6e5-fb79-462c-b669-80641bfef413-1511880426210\",\n  \"content\": {\n    \"text\": \"Something interesting.\"\n  }\n}"
										},
										"url": {
											"raw": "{{shoutboxApiHost}}/v1/channels/{{channelId}}/streams/{{streamId}}/shoutbox/messages",
											"host": [
												"{{shoutboxApiHost}}"
											],
											"path": [
												"v1",
												"channels",
												"{{channelId}}",
												"streams",
												"{{streamId}}",
												"shoutbox",
												"messages"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Access-Control-Allow-Headers",
											"value": "Content-Type, Authorization, Accept, Cache-Control, X-Requested-With",
											"name": "Access-Control-Allow-Headers",
											"description": "Used in response to a preflight request to indicate which HTTP headers can be used when making the actual request."
										},
										{
											"key": "Access-Control-Allow-Methods",
											"value": "GET,PUT,POST,DELETE",
											"name": "Access-Control-Allow-Methods",
											"description": "Specifies the method or methods allowed when accessing the resource. This is used in response to a preflight request."
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*",
											"name": "Access-Control-Allow-Origin",
											"description": "Specifies a URI that may access the resource. For requests without credentials, the server may specify '*' as a wildcard, thereby allowing any origin to access the resource."
										},
										{
											"key": "Cache-Control",
											"value": "no-cache,max-age=0",
											"name": "Cache-Control",
											"description": "Tells all caching mechanisms from server to client whether they may cache this object. It is measured in seconds"
										},
										{
											"key": "Connection",
											"value": "keep-alive",
											"name": "Connection",
											"description": "Options that are desired for the connection"
										},
										{
											"key": "Content-Length",
											"value": "604",
											"name": "Content-Length",
											"description": "The length of the response body in octets (8-bit bytes)"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8",
											"name": "Content-Type",
											"description": "The mime type of this content"
										},
										{
											"key": "Date",
											"value": "Tue, 28 Nov 2017 14:48:46 GMT",
											"name": "Date",
											"description": "The date and time that the message was sent"
										},
										{
											"key": "X-Response-Time",
											"value": "32ms",
											"name": "X-Response-Time",
											"description": "Custom header"
										}
									],
									"cookie": [],
									"body": "{\"type\":\"user\",\"id\":\"d0d23aea-e9d3-4b2e-8cfd-99c10f31539f\",\"clientId\":\"bdaac6e5-fb79-462c-b669-80641bfef413-1511880426210\",\"streamId\":\"a2993350-cb51-437d-bf39-41e110a71f5a\",\"content\":{\"text\":\"Something interesting.\"},\"createdAt\":\"2017-11-28T14:48:46.427Z\",\"user\":{\"authenticated\":true,\"createdAt\":\"2017-11-28T14:48:42.879Z\",\"role\":\"user\",\"targetId\":\"b8f99a0c-1383-4891-af7a-563b5903d390\",\"provider\":{\"name\":\"facebook\"},\"externalId\":\"b8f99a0c-1383-4891-af7a-563b5903d390_undefined\",\"avatar\":\"https://graph.facebook.com/undefined/picture?width=250&type=square\",\"id\":\"f468fca3-1287-4858-880f-7c099e0ba1d3\"}}"
								}
							]
						},
						{
							"name": "Delete Shoutbox Messages",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code is 200\"] = responseCode.code === 200;",
											"var data = JSON.parse(responseBody);",
											"tests[\"Response has messages\"] = data !== null && data.length > 0;",
											"postman.setEnvironmentVariable(\"messageId\", data[0].id);"
										]
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{anonymousToken}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"enabled\": \"false\"\n}"
								},
								"url": {
									"raw": "{{shoutboxApiHost}}/v1/channels/all/streams/all/shoutbox/messages",
									"host": [
										"{{shoutboxApiHost}}"
									],
									"path": [
										"v1",
										"channels",
										"all",
										"streams",
										"all",
										"shoutbox",
										"messages"
									]
								},
								"description": "Delete all shoutbox messages from current user.\n\n| Permissions              | no token | anonymous token | provider token | admin token |\n| ------------------------ | :------: | :-------------: | :------------: | :---------: |\n| Delete Shoutbox Messages | -        | -               | x              | -           |"
							},
							"response": [
								{
									"name": "Delete Shoutbox Messages, success",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"disabled": false
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"enabled\": \"false\"\n}"
										},
										"url": {
											"raw": "{{shoutboxApiHost}}/v1/channels/all/streams/all/shoutbox/messages",
											"host": [
												"{{shoutboxApiHost}}"
											],
											"path": [
												"v1",
												"channels",
												"all",
												"streams",
												"all",
												"shoutbox",
												"messages"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Access-Control-Allow-Headers",
											"value": "Content-Type, Authorization, Accept, Cache-Control, X-Requested-With, X-On-Behalf-Of-User-Id",
											"name": "Access-Control-Allow-Headers",
											"description": "Used in response to a preflight request to indicate which HTTP headers can be used when making the actual request."
										},
										{
											"key": "Access-Control-Allow-Methods",
											"value": "GET,PUT,POST,DELETE",
											"name": "Access-Control-Allow-Methods",
											"description": "Specifies the method or methods allowed when accessing the resource. This is used in response to a preflight request."
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*",
											"name": "Access-Control-Allow-Origin",
											"description": "Specifies a URI that may access the resource. For requests without credentials, the server may specify '*' as a wildcard, thereby allowing any origin to access the resource."
										},
										{
											"key": "Cache-Control",
											"value": "no-cache,max-age=0",
											"name": "Cache-Control",
											"description": "Tells all caching mechanisms from server to client whether they may cache this object. It is measured in seconds"
										},
										{
											"key": "Connection",
											"value": "keep-alive",
											"name": "Connection",
											"description": "Options that are desired for the connection"
										},
										{
											"key": "Content-Length",
											"value": "11",
											"name": "Content-Length",
											"description": "The length of the response body in octets (8-bit bytes)"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8",
											"name": "Content-Type",
											"description": "The mime type of this content"
										},
										{
											"key": "Date",
											"value": "Fri, 31 Aug 2018 13:45:31 GMT",
											"name": "Date",
											"description": "The date and time that the message was sent"
										},
										{
											"key": "Vary",
											"value": "Accept-Encoding",
											"name": "Vary",
											"description": "Tells downstream proxies how to match future request headers to decide whether the cached response can be used rather than requesting a fresh one from the origin server."
										},
										{
											"key": "X-Response-Time",
											"value": "21ms",
											"name": "X-Response-Time",
											"description": "Custom header"
										}
									],
									"cookie": [],
									"body": "{\"count\":0}"
								}
							]
						}
					],
					"description": "## Shoutbox Events\n\nApart from the HTTP API calls there are [Pusher](https://pusher.com) events with info of shouts and replies. Since the shoutbox module relies on events being sent from pusher you must subscribe to the pusher-channel provided in the response of the [Get Target](#5810f0fe-7be7-6839-c4a7-307b2527777e) (pusher connection info) and [Get Stream](#aaa9244a-d56c-b2da-67df-3b63c36ae2b3) (the interaction channel id) calls.\n\n## Topic change\n\nChannel: stream-{streamId}-shoutbox\n\nEvent: topic-change\n\n```\n{\n  \"topic\": \"Tell us what you think!\",\n  \"welcome\": \"Welcome to Zender Trivia\",\n  \"placeholder\": \"Leave a message...\"\n}\n```\n\n## Shoutbox enabled/disabled\n\nChannel: stream-{streamId}-shoutbox\n\nEvent: shoutbox-enable\n\n```\n{\n  \"enabled\": false\n}\n```\n\n\n## New shouts\n\n\nChannel: stream-{streamId}-shoutbox\n\nEvent: shouts-add\n\n```\n{\n  \"shouts\": [\n    {\n      \"type\": \"user\",\n      \"id\": \"11f433ce-f181-461f-a5c6-cc9f227a38e2\",\n      \"clientId\": \"postman\",\n      \"streamId\": \"<streamId>\",\n      \"userId\": \"c75ea684-3c1a-4ab2-89a6-15264507aed0\",\n      \"content\": {\n        \"text\": \"authenticated test\"\n      },\n      \"createdAt\": \"2018-04-16T14:51:28.924Z\",\n      \"user\": {\n        \"name\": \"test\",\n        \"authenticated\": true,\n        \"createdAt\": \"2018-04-16T14:51:27.889Z\",\n        \"id\": \"c75ea684-3c1a-4ab2-89a6-15264507aed0\",\n        \"role\": \"user\",\n        \"targetId\": \"<targetId>\"\n      }\n    }\n  ]\n}\n```\n\n## Reply\n\nChannel: stream-{streamId}-shoutbox\n\nEvent: shouts-reply\n\n```\n{\n  \"replies\": [\n    {\n      \"type\": \"user\",\n      \"id\": \"d60ab4be-cb34-4bf3-b23a-185aca5f6fe4\",\n      \"clientId\": \"clientId-reply-01\",\n      \"streamId\": \"<streamId>\",\n      \"userId\": \"58d3f0dd-e7b6-478f-966f-d14831db4391\",\n      \"replyTo\": {\n        \"createdAt\": \"2018-04-16T14:51:30.478Z\",\n        \"clientId\": \"postman\",\n        \"streamId\": \"<streamId>\",\n        \"id\": \"8c4c42e0-6c27-4274-8229-1553b4444ab7\",\n        \"stars\": 5,\n        \"type\": \"text\",\n        \"content\": {\n          \"text\": \"other test\"\n        },\n        \"updatedAt\": \"2018-04-16T14:51:31.610Z\",\n        \"user\": {\n          \"id\": \"c75ea684-3c1a-4ab2-89a6-15264507aed0\",\n          \"name\": \"test\"\n        }\n      },\n      \"content\": {\n        \"text\": \"reply test\"\n      },\n      \"createdAt\": \"2018-04-16T14:51:32.811Z\",\n      \"user\": {\n        \"authenticated\": true,\n        \"createdAt\": \"2018-04-16T14:51:27.874Z\",\n        \"role\": \"admin\",\n        \"targetId\": \"<targetId>\",\n        \"data\": {\n          \"prop\": \"someAdminUserData\"\n        },\n        \"name\": \"admin\",\n        \"id\": \"58d3f0dd-e7b6-478f-966f-d14831db4391\",\n        \"userId\": \"someAdminUserId\"\n      }\n    }\n  ]\n}\n```",
					"_postman_isSubFolder": true
				},
				{
					"name": "Polls",
					"item": [
						{
							"name": "Get Polls Config",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code is 200\"] = responseCode.code === 200;",
											"var data = JSON.parse(responseBody);",
											"tests[\"Response has a poll\"] = data.polls !== null && data.polls.length > 0;",
											"tests[\"Response has a choice\"] = data.polls[0].answer !== null && data.polls[0].answer.choices !== null && data.polls[0].answer.choices.length > 0;",
											"postman.setEnvironmentVariable(\"choiceId\", data.polls[0].answer.choices[0].id);"
										]
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{anonymousToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{pollsApiHost}}/v1/channels/{{channelId}}/streams/{{streamId}}/polls/config",
									"host": [
										"{{pollsApiHost}}"
									],
									"path": [
										"v1",
										"channels",
										"{{channelId}}",
										"streams",
										"{{streamId}}",
										"polls",
										"config"
									]
								},
								"description": "Get polls config. This endpoint will also return the started (public) polls and their results (if results are configured for that poll).\n\n| Permissions      | no token | anonymous token | provider token | admin token |\n| ---------------- | :------: | :-------------: | :------------: | :---------: |\n| Get Polls Config | x        | x               | x              | x           |"
							},
							"response": [
								{
									"name": "Get Polls Config",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"warning": ""
											}
										],
										"url": {
											"raw": "{{pollsApiHost}}/v1/channels/{{channelId}}/streams/{{streamId}}/polls/config",
											"host": [
												"{{pollsApiHost}}"
											],
											"path": [
												"v1",
												"channels",
												"{{channelId}}",
												"streams",
												"{{streamId}}",
												"polls",
												"config"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Access-Control-Allow-Headers",
											"value": "Content-Type, Authorization, Accept, Cache-Control, X-Requested-With",
											"name": "Access-Control-Allow-Headers",
											"description": "Used in response to a preflight request to indicate which HTTP headers can be used when making the actual request."
										},
										{
											"key": "Access-Control-Allow-Methods",
											"value": "GET,PUT,POST,DELETE",
											"name": "Access-Control-Allow-Methods",
											"description": "Specifies the method or methods allowed when accessing the resource. This is used in response to a preflight request."
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*",
											"name": "Access-Control-Allow-Origin",
											"description": "Specifies a URI that may access the resource. For requests without credentials, the server may specify '*' as a wildcard, thereby allowing any origin to access the resource."
										},
										{
											"key": "Cache-Control",
											"value": "public, max-age=5",
											"name": "Cache-Control",
											"description": "Tells all caching mechanisms from server to client whether they may cache this object. It is measured in seconds"
										},
										{
											"key": "Connection",
											"value": "keep-alive",
											"name": "Connection",
											"description": "Options that are desired for the connection"
										},
										{
											"key": "Content-Length",
											"value": "2333",
											"name": "Content-Length",
											"description": "The length of the response body in octets (8-bit bytes)"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8",
											"name": "Content-Type",
											"description": "The mime type of this content"
										},
										{
											"key": "Date",
											"value": "Wed, 29 Nov 2017 09:30:45 GMT",
											"name": "Date",
											"description": "The date and time that the message was sent"
										},
										{
											"key": "X-Response-Time",
											"value": "20ms",
											"name": "X-Response-Time",
											"description": "Custom header"
										}
									],
									"cookie": [],
									"body": "{\n    \"createdAt\": \"2017-11-28T13:55:31.723Z\",\n    \"id\": \"a2993350-cb51-437d-bf39-41e110a71f5a\",\n    \"streamId\": \"a2993350-cb51-437d-bf39-41e110a71f5a\",\n    \"enabled\": true,\n    \"updatedAt\": \"2017-11-29T09:17:24.489Z\",\n    \"cdnHost\": \"https://cdn.zender.tv\",\n    \"polls\": [\n        {\n            \"realtimeResults\": true,\n            \"studio\": {\n                \"backgroundVideo\": {\n                    \"aspectRatio\": \"16:9\",\n                    \"url\": \"https://cdn.zender.tv/live/uploads/b8f99a0c-1383-4891-af7a-563b5903d390/2017-11-28/aa807b08-311a-45a1-9a43-fd8ac9a19616.original.png\",\n                    \"loop\": true,\n                    \"autoplay\": true\n                },\n                \"backgroundImage\": {\n                    \"width\": 579,\n                    \"url\": \"https://cdn.zender.tv/live/uploads/b8f99a0c-1383-4891-af7a-563b5903d390/2017-11-28/aa807b08-311a-45a1-9a43-fd8ac9a19616.original.png\",\n                    \"height\": 580\n                }\n            },\n            \"fountain\": true,\n            \"voteRoles\": [\n                \"authenticated\"\n            ],\n            \"question\": {\n                \"text\": \"Who will win the elections?\"\n            },\n            \"streamId\": \"a2993350-cb51-437d-bf39-41e110a71f5a\",\n            \"facebook\": {\n                \"postId\": \"10151400246079999\",\n                \"integrationType\": \"text\",\n                \"enabled\": true,\n                \"linkedChoices\": [\n                    \"Bernie\",\n                    \"Trump\"\n                ]\n            },\n            \"priority\": 1,\n            \"openedAt\": \"2017-11-29T09:27:45.942Z\",\n            \"createdAt\": \"2017-11-29T09:23:41.146Z\",\n            \"status\": \"open\",\n            \"multiChoice\": true,\n            \"multiVote\": true,\n            \"answer\": {\n                \"choices\": [\n                    {\n                        \"title\": \"Bernie Sanders\",\n                        \"image\": {\n                            \"url\": \"https://cdn.zender.tv/live/uploads/b8f99a0c-1383-4891-af7a-563b5903d390/2017-11-28/aa807b08-311a-45a1-9a43-fd8ac9a19616.original.png\",\n                            \"id\": \"/live/uploads/b8f99a0c-1383-4891-af7a-563b5903d390/2017-11-28/aa807b08-311a-45a1-9a43-fd8ac9a19616.original.png\"\n                        },\n                        \"id\": \"084bacc5-b8ce-4096-bdc5-1b1e00570206\"\n                    },\n                    {\n                        \"title\": \"Donald Trump\",\n                        \"image\": {\n                            \"url\": \"https://cdn.zender.tv/live/uploads/b8f99a0c-1383-4891-af7a-563b5903d390/2017-11-28/aa807b08-311a-45a1-9a43-fd8ac9a19616.original.png\",\n                            \"id\": \"/live/uploads/b8f99a0c-1383-4891-af7a-563b5903d390/2017-11-28/aa807b08-311a-45a1-9a43-fd8ac9a19616.original.png\"\n                        },\n                        \"id\": \"85a0a3e1-a705-4844-8466-ea0e07ce9727\"\n                    }\n                ]\n            },\n            \"showResults\": true,\n            \"id\": \"d97a4943-9373-421a-ae6a-8d4a2908e50a\",\n            \"closedAt\": \"2017-11-29T09:27:19.894Z\",\n            \"closingOffset\": 5000,\n            \"updatedAt\": \"2017-11-29T09:27:45.942Z\",\n            \"postVotes\": \"{{pollsApiHost}}/v1/channels/67b5528a-baf4-41bc-b558-b36613ee14a4/streams/a2993350-cb51-437d-bf39-41e110a71f5a/polls/d97a4943-9373-421a-ae6a-8d4a2908e50a/vote\"\n        }\n    ],\n    \"results\": {\n        \"d97a4943-9373-421a-ae6a-8d4a2908e50a\": {\n            \"total\": 1,\n            \"counters\": {\n                \"85a0a3e1-a705-4844-8466-ea0e07ce9727\": 1\n            }\n        }\n    }\n}"
								}
							]
						},
						{
							"name": "Poll Vote",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{providerToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"votes\": [\n    {\n      \"count\": 1,\n      \"id\": \"{{choiceId}}\"\n    }\n  ]\n}"
								},
								"url": {
									"raw": "{{pollsApiHost}}/v1/channels/{{channelId}}/streams/{{streamId}}/polls/{{pollId}}/vote",
									"host": [
										"{{pollsApiHost}}"
									],
									"path": [
										"v1",
										"channels",
										"{{channelId}}",
										"streams",
										"{{streamId}}",
										"polls",
										"{{pollId}}",
										"vote"
									]
								},
								"description": "Vote for a choice of a poll.\n\nThese are the different responses that the endpoint can produce:\n\n**200 OK**: If the cast of the vote was successful. See the \"Poll vote (success)\" example.\n\n**410 GONE**: If you try to cast a vote for a poll that was stopped (i.e. its status is closed). See the \"Poll vote (closed poll)\" example.\n\n**403 FORBIDDEN**: If you try to cast a vote for a poll that has the \"multiVote\" attribute set to false. See the \"Poll vote (vote already cast)\" example.\n\n**400 BAD REQUEST**: If you try to cast more than one vote for a poll that has the \"multiChoice\" attribute set to false. See the \"Poll vote (no multiple choice)\" example.\n\n**403 FORBIDDEN**: If you try to cast a vote for a poll with a token of a user with a role that does not match one of the roles defined in the \"voteRoles\" array of the poll. See the \"Poll vote (auth role mismatch)\" example.\n\n**400 BAD REQUEST**: If you provide a request body where the \"votes\" attribute is not an array of objects with an \"id\" and positive \"count\" attributes. See the \"Poll vote (role mismatch)\" example.\n\n**404 NOT FOUND**: If the poll does not exist. See the \"Poll vote (poll not found)\" example.\n\n| Permissions | no token | anonymous token | provider token | admin token |\n| ----------- | :------: | :-------------: | :------------: | :---------: |\n| Poll Vote   | -        | configurable    | configurable   | -           |"
							},
							"response": [
								{
									"name": "Poll Vote (success)",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"votes\": [\n    {\n      \"count\": 1,\n      \"id\": \"{{choiceId}}\"\n    }\n  ]\n}"
										},
										"url": {
											"raw": "{{pollsApiHost}}/v1/channels/{{channelId}}/streams/{{streamId}}/polls/{{pollId}}/vote",
											"host": [
												"{{pollsApiHost}}"
											],
											"path": [
												"v1",
												"channels",
												"{{channelId}}",
												"streams",
												"{{streamId}}",
												"polls",
												"{{pollId}}",
												"vote"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Access-Control-Allow-Headers",
											"value": "Content-Type, Authorization, Accept, Cache-Control, X-Requested-With",
											"name": "Access-Control-Allow-Headers",
											"description": "Used in response to a preflight request to indicate which HTTP headers can be used when making the actual request."
										},
										{
											"key": "Access-Control-Allow-Methods",
											"value": "GET,PUT,POST,DELETE",
											"name": "Access-Control-Allow-Methods",
											"description": "Specifies the method or methods allowed when accessing the resource. This is used in response to a preflight request."
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*",
											"name": "Access-Control-Allow-Origin",
											"description": "Specifies a URI that may access the resource. For requests without credentials, the server may specify '*' as a wildcard, thereby allowing any origin to access the resource."
										},
										{
											"key": "Connection",
											"value": "keep-alive",
											"name": "Connection",
											"description": "Options that are desired for the connection"
										},
										{
											"key": "Content-Length",
											"value": "67",
											"name": "Content-Length",
											"description": "The length of the response body in octets (8-bit bytes)"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8",
											"name": "Content-Type",
											"description": "The mime type of this content"
										},
										{
											"key": "Date",
											"value": "Wed, 29 Nov 2017 09:37:17 GMT",
											"name": "Date",
											"description": "The date and time that the message was sent"
										},
										{
											"key": "X-Response-Time",
											"value": "10ms",
											"name": "X-Response-Time",
											"description": "Custom header"
										}
									],
									"cookie": [],
									"body": "{\"votes\":[{\"count\":1,\"id\":\"084bacc5-b8ce-4096-bdc5-1b1e00570206\"}]}"
								},
								{
									"name": "Poll Vote (validation error)",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"disabled": false
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"votes\": [\n    {\n      \"count\": \"bla\",\n      \"id\": \"f2e94587-2035-4c9a-8ff1-4f74dc22d21a\"\n    },\n    {\n      \"count\": 1,\n      \"id\": 3\n    }\n  ]\n}"
										},
										"url": {
											"raw": "{{pollsApiHost}}/v1/channels/3789b16d-8e9d-4071-9209-2dae67be3760/streams/abe2c3fb-a60a-41ee-b6e3-a649755bdea2/polls/c5ca4ed7-5a6e-42bc-8727-e8d782742b39/vote",
											"host": [
												"{{pollsApiHost}}"
											],
											"path": [
												"v1",
												"channels",
												"3789b16d-8e9d-4071-9209-2dae67be3760",
												"streams",
												"abe2c3fb-a60a-41ee-b6e3-a649755bdea2",
												"polls",
												"c5ca4ed7-5a6e-42bc-8727-e8d782742b39",
												"vote"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Access-Control-Allow-Headers",
											"value": "Content-Type, Authorization, Accept, Cache-Control, X-Requested-With",
											"name": "Access-Control-Allow-Headers",
											"description": "Used in response to a preflight request to indicate which HTTP headers can be used when making the actual request."
										},
										{
											"key": "Access-Control-Allow-Methods",
											"value": "GET,PUT,POST,DELETE",
											"name": "Access-Control-Allow-Methods",
											"description": "Specifies the method or methods allowed when accessing the resource. This is used in response to a preflight request."
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*",
											"name": "Access-Control-Allow-Origin",
											"description": "Specifies a URI that may access the resource. For requests without credentials, the server may specify '*' as a wildcard, thereby allowing any origin to access the resource."
										},
										{
											"key": "Connection",
											"value": "keep-alive",
											"name": "Connection",
											"description": "Options that are desired for the connection"
										},
										{
											"key": "Content-Length",
											"value": "104",
											"name": "Content-Length",
											"description": "The length of the response body in octets (8-bit bytes)"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8",
											"name": "Content-Type",
											"description": "The mime type of this content"
										},
										{
											"key": "Date",
											"value": "Tue, 17 Apr 2018 09:52:47 GMT",
											"name": "Date",
											"description": "The date and time that the message was sent"
										},
										{
											"key": "X-Response-Time",
											"value": "3ms",
											"name": "X-Response-Time",
											"description": "Custom header"
										}
									],
									"cookie": [],
									"body": "{\"message\":[{\"path\":[\"votes\"],\"tip\":\"Votes must be an array of objects with an id and positive count\"}]}"
								},
								{
									"name": "Poll Vote (auth role mismatch)",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"disabled": false
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"votes\": [\n    {\n      \"count\": 1,\n      \"id\": \"f2e94587-2035-4c9a-8ff1-4f74dc22d21a\"\n    },\n    {\n      \"count\": 1,\n      \"id\": \"531d61e7-535c-41cf-a9c5-d0c7513f23ea\"\n    }\n  ]\n}"
										},
										"url": {
											"raw": "{{pollsApiHost}}/v1/channels/3789b16d-8e9d-4071-9209-2dae67be3760/streams/abe2c3fb-a60a-41ee-b6e3-a649755bdea2/polls/c5ca4ed7-5a6e-42bc-8727-e8d782742b39/vote",
											"host": [
												"{{pollsApiHost}}"
											],
											"path": [
												"v1",
												"channels",
												"3789b16d-8e9d-4071-9209-2dae67be3760",
												"streams",
												"abe2c3fb-a60a-41ee-b6e3-a649755bdea2",
												"polls",
												"c5ca4ed7-5a6e-42bc-8727-e8d782742b39",
												"vote"
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Access-Control-Allow-Headers",
											"value": "Content-Type, Authorization, Accept, Cache-Control, X-Requested-With",
											"name": "Access-Control-Allow-Headers",
											"description": "Used in response to a preflight request to indicate which HTTP headers can be used when making the actual request."
										},
										{
											"key": "Access-Control-Allow-Methods",
											"value": "GET,PUT,POST,DELETE",
											"name": "Access-Control-Allow-Methods",
											"description": "Specifies the method or methods allowed when accessing the resource. This is used in response to a preflight request."
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*",
											"name": "Access-Control-Allow-Origin",
											"description": "Specifies a URI that may access the resource. For requests without credentials, the server may specify '*' as a wildcard, thereby allowing any origin to access the resource."
										},
										{
											"key": "Connection",
											"value": "keep-alive",
											"name": "Connection",
											"description": "Options that are desired for the connection"
										},
										{
											"key": "Content-Length",
											"value": "75",
											"name": "Content-Length",
											"description": "The length of the response body in octets (8-bit bytes)"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8",
											"name": "Content-Type",
											"description": "The mime type of this content"
										},
										{
											"key": "Date",
											"value": "Tue, 17 Apr 2018 09:49:38 GMT",
											"name": "Date",
											"description": "The date and time that the message was sent"
										},
										{
											"key": "X-Response-Time",
											"value": "19ms",
											"name": "X-Response-Time",
											"description": "Custom header"
										}
									],
									"cookie": [],
									"body": "{\"code\":\"FORBIDDEN\",\"message\":\"You are not allowed to vote for this poll.\"}"
								}
							]
						}
					],
					"description": "## Poll events\n\nApart from the HTTP API calls there are [Pusher](https://pusher.com) events with info about polls and their results. Since the poll module relies on events being sent from pusher you must subscribe to the pusher-channel provided in the response of the [Get Target](#5810f0fe-7be7-6839-c4a7-307b2527777e) (pusher connection info) and [Get Stream](#aaa9244a-d56c-b2da-67df-3b63c36ae2b3) (the interaction channel id) calls.\n\n## Poll enabled/disabled\n\nChannel: stream-{streamId}-polls\n\nEvent: polls-enable\n\n```\n{\n  \"enabled\": true\n}\n```\n\n## Poll update\n\nChannel: stream-{streamId}-polls\n\nEvent: polls-update\n\n```\n{\n  \"realtimeResults\": true,\n  \"fountain\": true,\n  \"voteRoles\": [\n    \"anonymous\"\n  ],\n  \"question\": \"Are you happy?\",\n  \"streamId\": \"<streamId>\",\n  \"priority\": 2,\n  \"openedAt\": \"2018-04-16T15:04:38.493Z\",\n  \"createdAt\": \"2018-04-16T15:04:38.190Z\",\n  \"status\": \"open\",\n  \"multiChoice\": true,\n  \"multiVote\": true,\n  \"answer\": {\n    \"choices\": [\n      {\n        \"description\": \"Affirmative\",\n        \"image\": {\n          \"width\": 300,\n          \"id\": \"/live/uploads/573b42f3-8708-4356-baee-e12f2c61a432/2017-07-25/4d71028c-a10a-49cb-8896-1ec104811820.jpeg\",\n          \"url\": \"https://cdn.zender.tv/live/uploads/573b42f3-8708-4356-baee-e12f2c61a432/2017-07-25/4d71028c-a10a-49cb-8896-1ec104811820.jpeg\",\n          \"height\": 200\n        },\n        \"id\": \"4778c1e4-c9fe-4c92-9492-0cce815a67b7\",\n        \"title\": \"Yes\"\n      },\n      {\n        \"description\": \"Negatory\",\n        \"image\": {\n          \"width\": 300,\n          \"id\": \"/live/uploads/573b42f3-8708-4356-baee-e12f2c61a432/2017-07-25/4d2326c6-e5ac-4d7e-b106-08ba74071b18.jpeg\",\n          \"url\": \"https://cdn.zender.tv/live/uploads/573b42f3-8708-4356-baee-e12f2c61a432/2017-07-25/4d2326c6-e5ac-4d7e-b106-08ba74071b18.jpeg\",\n          \"height\": 200\n        },\n        \"id\": \"c381a5a2-bc12-4512-a68d-16259a0ae982\",\n        \"title\": \"No\"\n      }\n    ]\n  },\n  \"showResults\": false,\n  \"id\": \"7ffcd8d4-535b-4d8e-aaa2-e3d9959d9250\",\n  \"closingOffset\": 1000,\n  \"resultType\": \"actual-votes\",\n  \"updatedAt\": \"2018-04-16T15:04:38.493Z\",\n  \"postVotes\": \"{{pollsApiHost}}/v1/channels/<channelId>/streams/<streamId>/polls/7ffcd8d4-535b-4d8e-aaa2-e3d9959d9250/vote\"\n}\n```\n\n## Results update\n\nChannel: stream-{streamId}-polls\n\nEvent: polls-update-results\n\n```\n{\n  \"id\": \"7ffcd8d4-535b-4d8e-aaa2-e3d9959d9250\",\n  \"results\": {\n    \"total\": 6,\n    \"counters\": {\n      \"4778c1e4-c9fe-4c92-9492-0cce815a67b7\": 2,\n      \"c381a5a2-bc12-4512-a68d-16259a0ae982\": 4\n    }\n  }\n}\n```\n\n## Animate results\n\n\nChannel: stream-{streamId}-polls\n\nEvent: polls-animate-results\n\n```\n{\n  \"id\": \"7ffcd8d4-535b-4d8e-aaa2-e3d9959d9250\",\n  \"destination\": \"player\",\n  \"timestamp\": 1523891082829,\n  \"results\": {\n    \"total\": 5,\n    \"counters\": {\n      \"4778c1e4-c9fe-4c92-9492-0cce815a67b7\": 1,\n      \"c381a5a2-bc12-4512-a68d-16259a0ae982\": 4\n    }\n  }\n}\n```\n\n## Delete poll\n\nChannel: stream-{streamId}-polls\n\nEvent: polls-delete\n\n```\n{\n  \"id\": \"7ffcd8d4-535b-4d8e-aaa2-e3d9959d9250\"\n}\n```",
					"_postman_isSubFolder": true
				},
				{
					"name": "Quiz",
					"item": [
						{
							"name": "Get Quiz Config",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code is 200\"] = responseCode.code === 200;",
											"var data = JSON.parse(responseBody);",
											"tests[\"Response has token\"] = data.quizzes !== null;",
											"postman.setEnvironmentVariable(\"quizId\", data.quizzes[0].id);"
										]
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{anonymousToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{quizApiHost}}/v1/channels/{{channelId}}/streams/{{streamId}}/quiz/config",
									"host": [
										"{{quizApiHost}}"
									],
									"path": [
										"v1",
										"channels",
										"{{channelId}}",
										"streams",
										"{{streamId}}",
										"quiz",
										"config"
									]
								},
								"description": "Get polls config. This endpoint will also return the started quizzes.\n\n| Permissions     | no token | anonymous token | provider token | admin token |\n| --------------- | :------: | :-------------: | :------------: | :---------: |\n| Get Quiz Config | x        | x               | x              | x           |"
							},
							"response": [
								{
									"name": "Get Quiz Config (no quizzes active)",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{quizApiHost}}/v1/channels/{{channelId}}/streams/{{streamId}}/quiz/config",
											"host": [
												"{{quizApiHost}}"
											],
											"path": [
												"v1",
												"channels",
												"{{channelId}}",
												"streams",
												"{{streamId}}",
												"quiz",
												"config"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Access-Control-Allow-Headers",
											"value": "Content-Type, Authorization, Accept, Cache-Control, X-Requested-With",
											"name": "Access-Control-Allow-Headers",
											"description": ""
										},
										{
											"key": "Access-Control-Allow-Methods",
											"value": "GET,PUT,POST,DELETE",
											"name": "Access-Control-Allow-Methods",
											"description": ""
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*",
											"name": "Access-Control-Allow-Origin",
											"description": ""
										},
										{
											"key": "Cache-Control",
											"value": "public, max-age=5",
											"name": "Cache-Control",
											"description": ""
										},
										{
											"key": "Connection",
											"value": "keep-alive",
											"name": "Connection",
											"description": ""
										},
										{
											"key": "Content-Length",
											"value": "162",
											"name": "Content-Length",
											"description": ""
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8",
											"name": "Content-Type",
											"description": ""
										},
										{
											"key": "Date",
											"value": "Mon, 05 Mar 2018 14:34:16 GMT",
											"name": "Date",
											"description": ""
										},
										{
											"key": "X-Response-Time",
											"value": "64ms",
											"name": "X-Response-Time",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\"enabled\":true,\"createdAt\":\"2018-03-05T14:33:42.658Z\",\"id\":\"abe2c3fb-a60a-41ee-b6e3-a649755bdea2\",\"streamId\":\"abe2c3fb-a60a-41ee-b6e3-a649755bdea2\",\"quizzes\":[]}"
								},
								{
									"name": "Get Quiz Config (quiz active)",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{quizApiHost}}/v1/channels/{{channelId}}/streams/{{streamId}}/quiz/config",
											"host": [
												"{{quizApiHost}}"
											],
											"path": [
												"v1",
												"channels",
												"{{channelId}}",
												"streams",
												"{{streamId}}",
												"quiz",
												"config"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Access-Control-Allow-Headers",
											"value": "Content-Type, Authorization, Accept, Cache-Control, X-Requested-With",
											"name": "Access-Control-Allow-Headers",
											"description": "Used in response to a preflight request to indicate which HTTP headers can be used when making the actual request."
										},
										{
											"key": "Access-Control-Allow-Methods",
											"value": "GET,PUT,POST,DELETE",
											"name": "Access-Control-Allow-Methods",
											"description": "Specifies the method or methods allowed when accessing the resource. This is used in response to a preflight request."
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*",
											"name": "Access-Control-Allow-Origin",
											"description": "Specifies a URI that may access the resource. For requests without credentials, the server may specify '*' as a wildcard, thereby allowing any origin to access the resource."
										},
										{
											"key": "Cache-Control",
											"value": "public, max-age=5",
											"name": "Cache-Control",
											"description": "Tells all caching mechanisms from server to client whether they may cache this object. It is measured in seconds"
										},
										{
											"key": "Connection",
											"value": "keep-alive",
											"name": "Connection",
											"description": "Options that are desired for the connection"
										},
										{
											"key": "Content-Length",
											"value": "426",
											"name": "Content-Length",
											"description": "The length of the response body in octets (8-bit bytes)"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8",
											"name": "Content-Type",
											"description": "The mime type of this content"
										},
										{
											"key": "Date",
											"value": "Mon, 16 Apr 2018 12:51:07 GMT",
											"name": "Date",
											"description": "The date and time that the message was sent"
										},
										{
											"key": "X-Response-Time",
											"value": "41ms",
											"name": "X-Response-Time",
											"description": "Custom header"
										}
									],
									"cookie": [],
									"body": "{\"streamId\":\"0f7b9760-38c9-11e8-8624-fd8ce62b547c\",\"createdAt\":\"2018-04-16T12:49:06.159Z\",\"enabled\":true,\"quizzes\":[{\"createdAt\":\"2018-04-16T12:49:08.189Z\",\"answerTime\":10000,\"streamId\":\"0f7b9760-38c9-11e8-8624-fd8ce62b547c\",\"description\":\"Trivia about Sports\",\"startedAt\":\"2018-04-16T12:51:04.783Z\",\"id\":\"0e9da1fd-322e-48bf-aedc-a0adb00b4b3f\",\"title\":\"Sports Quiz\",\"status\":\"started\",\"updatedAt\":\"2018-04-16T12:51:04.783Z\"}]}"
								},
								{
									"name": "Get Quiz Config",
									"originalRequest": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{anonymousToken}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{quizApiHost}}/v1/channels/{{channelId}}/streams/{{streamId}}/quiz/config",
											"host": [
												"{{quizApiHost}}"
											],
											"path": [
												"v1",
												"channels",
												"{{channelId}}",
												"streams",
												"{{streamId}}",
												"quiz",
												"config"
											]
										},
										"description": "Get polls config. This endpoint will also return the started quizzes.\n\n| Permissions     | no token | anonymous token | provider token | admin token |\n| --------------- | :------: | :-------------: | :------------: | :---------: |\n| Get Quiz Config | x        | x               | x              | x           |"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Access-Control-Allow-Headers",
											"value": "Content-Type, Authorization, Accept, Cache-Control, X-Requested-With",
											"name": "Access-Control-Allow-Headers",
											"description": ""
										},
										{
											"key": "Access-Control-Allow-Methods",
											"value": "GET,PUT,POST,DELETE",
											"name": "Access-Control-Allow-Methods",
											"description": ""
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*",
											"name": "Access-Control-Allow-Origin",
											"description": ""
										},
										{
											"key": "Cache-Control",
											"value": "public, max-age=5",
											"name": "Cache-Control",
											"description": ""
										},
										{
											"key": "Connection",
											"value": "keep-alive",
											"name": "Connection",
											"description": ""
										},
										{
											"key": "Content-Length",
											"value": "162",
											"name": "Content-Length",
											"description": ""
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8",
											"name": "Content-Type",
											"description": ""
										},
										{
											"key": "Date",
											"value": "Mon, 05 Mar 2018 14:34:16 GMT",
											"name": "Date",
											"description": ""
										},
										{
											"key": "X-Response-Time",
											"value": "64ms",
											"name": "X-Response-Time",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\"enabled\":true,\"createdAt\":\"2018-03-05T14:33:42.658Z\",\"id\":\"abe2c3fb-a60a-41ee-b6e3-a649755bdea2\",\"streamId\":\"abe2c3fb-a60a-41ee-b6e3-a649755bdea2\",\"quizzes\":[]}"
								}
							]
						},
						{
							"name": "Answer Question",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "e6dda3d8-f3f0-4007-8414-8ad28fea72cb",
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code is 200\"] = responseCode.code === 200;",
											"var data = JSON.parse(responseBody);"
										]
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{providerToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"answer\": 1\n}"
								},
								"url": {
									"raw": "{{quizApiHost}}/v1/channels/{{channelId}}/streams/{{streamId}}/quiz/{{quizId}}/question/{{questionId}}",
									"host": [
										"{{quizApiHost}}"
									],
									"path": [
										"v1",
										"channels",
										"{{channelId}}",
										"streams",
										"{{streamId}}",
										"quiz",
										"{{quizId}}",
										"question",
										"{{questionId}}"
									]
								},
								"description": "Send the answer to a quiz question.\n\nThese are the different responses that the endpoint can produce:\n\n**410 GONE**: The answer was to early or did not arrive within the configured quiz \"answerTime\". See the \"Answer Question (answerTime expired)\" example.\n\n**410 GONE**: If the user answered a previous question wrong or not at all. In other words: the user is terminated from the quiz. See the \"Answer Question (previous question not answered or answered incorrect)\" example.\n\n**409 CONFLICT**: If you try to answer twice or more. See the \"Answer Question (already answered)\" example.\n\n**404 NOT FOUND**: If the question does not exist. See the \"Answer Question (question not found)\" example.\n\n| Permissions     | no token | anonymous token | provider token | admin token |\n| --------------- | :------: | :-------------: | :------------: | :---------: |\n| Answer Question | -        | -               | x              | -           |"
							},
							"response": [
								{
									"name": "Answer Question (already answered)",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"disabled": false
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"answer\": 1\n}"
										},
										"url": {
											"raw": "{{quizApiHost}}/v1/channels/{{channelId}}/streams/{{streamId}}/quiz/{{quizId}}/question/b7ccbb57-6b2b-4f1b-833f-63f4386b1313",
											"host": [
												"{{quizApiHost}}"
											],
											"path": [
												"v1",
												"channels",
												"{{channelId}}",
												"streams",
												"{{streamId}}",
												"quiz",
												"{{quizId}}",
												"question",
												"b7ccbb57-6b2b-4f1b-833f-63f4386b1313"
											]
										}
									},
									"status": "Conflict",
									"code": 409,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Access-Control-Allow-Headers",
											"value": "Content-Type, Authorization, Accept, Cache-Control, X-Requested-With",
											"name": "Access-Control-Allow-Headers",
											"description": "Used in response to a preflight request to indicate which HTTP headers can be used when making the actual request."
										},
										{
											"key": "Access-Control-Allow-Methods",
											"value": "GET,PUT,POST,DELETE",
											"name": "Access-Control-Allow-Methods",
											"description": "Specifies the method or methods allowed when accessing the resource. This is used in response to a preflight request."
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*",
											"name": "Access-Control-Allow-Origin",
											"description": "Specifies a URI that may access the resource. For requests without credentials, the server may specify '*' as a wildcard, thereby allowing any origin to access the resource."
										},
										{
											"key": "Connection",
											"value": "keep-alive",
											"name": "Connection",
											"description": "Options that are desired for the connection"
										},
										{
											"key": "Content-Length",
											"value": "68",
											"name": "Content-Length",
											"description": "The length of the response body in octets (8-bit bytes)"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8",
											"name": "Content-Type",
											"description": "The mime type of this content"
										},
										{
											"key": "Date",
											"value": "Mon, 16 Apr 2018 13:09:01 GMT",
											"name": "Date",
											"description": "The date and time that the message was sent"
										},
										{
											"key": "X-Response-Time",
											"value": "20ms",
											"name": "X-Response-Time",
											"description": "Custom header"
										}
									],
									"cookie": [],
									"body": "{\"code\":\"CONFLICT\",\"message\":\"You can only answer a question once.\"}"
								},
								{
									"name": "Answer Question (question not found)",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"disabled": false
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"answer\": 1\n}"
										},
										"url": {
											"raw": "{{quizApiHost}}/v1/channels/{{channelId}}/streams/{{streamId}}/quiz/{{quizId}}/question/9c2bf863-a210-41c8-a6bf-08d01a19593",
											"host": [
												"{{quizApiHost}}"
											],
											"path": [
												"v1",
												"channels",
												"{{channelId}}",
												"streams",
												"{{streamId}}",
												"quiz",
												"{{quizId}}",
												"question",
												"9c2bf863-a210-41c8-a6bf-08d01a19593"
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Access-Control-Allow-Headers",
											"value": "Content-Type, Authorization, Accept, Cache-Control, X-Requested-With",
											"name": "Access-Control-Allow-Headers",
											"description": "Used in response to a preflight request to indicate which HTTP headers can be used when making the actual request."
										},
										{
											"key": "Access-Control-Allow-Methods",
											"value": "GET,PUT,POST,DELETE",
											"name": "Access-Control-Allow-Methods",
											"description": "Specifies the method or methods allowed when accessing the resource. This is used in response to a preflight request."
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*",
											"name": "Access-Control-Allow-Origin",
											"description": "Specifies a URI that may access the resource. For requests without credentials, the server may specify '*' as a wildcard, thereby allowing any origin to access the resource."
										},
										{
											"key": "Connection",
											"value": "keep-alive",
											"name": "Connection",
											"description": "Options that are desired for the connection"
										},
										{
											"key": "Content-Length",
											"value": "142",
											"name": "Content-Length",
											"description": "The length of the response body in octets (8-bit bytes)"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8",
											"name": "Content-Type",
											"description": "The mime type of this content"
										},
										{
											"key": "Date",
											"value": "Mon, 16 Apr 2018 13:12:35 GMT",
											"name": "Date",
											"description": "The date and time that the message was sent"
										},
										{
											"key": "X-Response-Time",
											"value": "12ms",
											"name": "X-Response-Time",
											"description": "Custom header"
										}
									],
									"cookie": [],
									"body": "{\n    \"code\": \"NOT_FOUND\",\n    \"message\": \"No question found with id: 9c2bf863-a210-41c8-a6bf-08d01a19593 for quiz: 0e9da1fd-322e-48bf-aedc-a0adb00b4b3fd\"\n}"
								},
								{
									"name": "Answer Question (answerTime expired)",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"disabled": false
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"answer\": 1\n}"
										},
										"url": {
											"raw": "{{quizApiHost}}/v1/channels/{{channelId}}/streams/{{streamId}}/quiz/{{quizId}}/question/b7ccbb57-6b2b-4f1b-833f-63f4386b1313",
											"host": [
												"{{quizApiHost}}"
											],
											"path": [
												"v1",
												"channels",
												"{{channelId}}",
												"streams",
												"{{streamId}}",
												"quiz",
												"{{quizId}}",
												"question",
												"b7ccbb57-6b2b-4f1b-833f-63f4386b1313"
											]
										}
									},
									"status": "Gone",
									"code": 410,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Access-Control-Allow-Headers",
											"value": "Content-Type, Authorization, Accept, Cache-Control, X-Requested-With",
											"name": "Access-Control-Allow-Headers",
											"description": "Used in response to a preflight request to indicate which HTTP headers can be used when making the actual request."
										},
										{
											"key": "Access-Control-Allow-Methods",
											"value": "GET,PUT,POST,DELETE",
											"name": "Access-Control-Allow-Methods",
											"description": "Specifies the method or methods allowed when accessing the resource. This is used in response to a preflight request."
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*",
											"name": "Access-Control-Allow-Origin",
											"description": "Specifies a URI that may access the resource. For requests without credentials, the server may specify '*' as a wildcard, thereby allowing any origin to access the resource."
										},
										{
											"key": "Connection",
											"value": "keep-alive",
											"name": "Connection",
											"description": "Options that are desired for the connection"
										},
										{
											"key": "Content-Length",
											"value": "87",
											"name": "Content-Length",
											"description": "The length of the response body in octets (8-bit bytes)"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8",
											"name": "Content-Type",
											"description": "The mime type of this content"
										},
										{
											"key": "Date",
											"value": "Mon, 16 Apr 2018 13:02:41 GMT",
											"name": "Date",
											"description": "The date and time that the message was sent"
										},
										{
											"key": "X-Response-Time",
											"value": "24ms",
											"name": "X-Response-Time",
											"description": "Custom header"
										}
									],
									"cookie": [],
									"body": "{\"code\":\"GONE\",\"message\":\"You can not answer the question for this quiz at this time.\"}"
								},
								{
									"name": "Answer Question (previous question not answered or answered incorrect)",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"disabled": false
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"answer\": 1\n}"
										},
										"url": {
											"raw": "{{quizApiHost}}/v1/channels/{{channelId}}/streams/{{streamId}}/quiz/{{quizId}}/question/9c2bf863-a210-41c8-a6bf-08d01a19593",
											"host": [
												"{{quizApiHost}}"
											],
											"path": [
												"v1",
												"channels",
												"{{channelId}}",
												"streams",
												"{{streamId}}",
												"quiz",
												"{{quizId}}",
												"question",
												"9c2bf863-a210-41c8-a6bf-08d01a19593"
											]
										}
									},
									"status": "Gone",
									"code": 410,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Access-Control-Allow-Headers",
											"value": "Content-Type, Authorization, Accept, Cache-Control, X-Requested-With",
											"name": "Access-Control-Allow-Headers",
											"description": "Used in response to a preflight request to indicate which HTTP headers can be used when making the actual request."
										},
										{
											"key": "Access-Control-Allow-Methods",
											"value": "GET,PUT,POST,DELETE",
											"name": "Access-Control-Allow-Methods",
											"description": "Specifies the method or methods allowed when accessing the resource. This is used in response to a preflight request."
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*",
											"name": "Access-Control-Allow-Origin",
											"description": "Specifies a URI that may access the resource. For requests without credentials, the server may specify '*' as a wildcard, thereby allowing any origin to access the resource."
										},
										{
											"key": "Connection",
											"value": "keep-alive",
											"name": "Connection",
											"description": "Options that are desired for the connection"
										},
										{
											"key": "Content-Length",
											"value": "77",
											"name": "Content-Length",
											"description": "The length of the response body in octets (8-bit bytes)"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8",
											"name": "Content-Type",
											"description": "The mime type of this content"
										},
										{
											"key": "Date",
											"value": "Mon, 16 Apr 2018 13:10:40 GMT",
											"name": "Date",
											"description": "The date and time that the message was sent"
										},
										{
											"key": "X-Response-Time",
											"value": "26ms",
											"name": "X-Response-Time",
											"description": "Custom header"
										}
									],
									"cookie": [],
									"body": "{\"code\":\"GONE\",\"message\":\"You can no longer answer questions for this quiz.\"}"
								},
								{
									"name": "Answer Question",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"answer\": 1\n}"
										},
										"url": {
											"raw": "{{quizApiHost}}/v1/channels/{{channelId}}/streams/{{streamId}}/quiz/{{quizId}}/question/b7ccbb57-6b2b-4f1b-833f-63f4386b1313",
											"host": [
												"{{quizApiHost}}"
											],
											"path": [
												"v1",
												"channels",
												"{{channelId}}",
												"streams",
												"{{streamId}}",
												"quiz",
												"{{quizId}}",
												"question",
												"b7ccbb57-6b2b-4f1b-833f-63f4386b1313"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Access-Control-Allow-Headers",
											"value": "Content-Type, Authorization, Accept, Cache-Control, X-Requested-With",
											"name": "Access-Control-Allow-Headers",
											"description": "Used in response to a preflight request to indicate which HTTP headers can be used when making the actual request."
										},
										{
											"key": "Access-Control-Allow-Methods",
											"value": "GET,PUT,POST,DELETE",
											"name": "Access-Control-Allow-Methods",
											"description": "Specifies the method or methods allowed when accessing the resource. This is used in response to a preflight request."
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*",
											"name": "Access-Control-Allow-Origin",
											"description": "Specifies a URI that may access the resource. For requests without credentials, the server may specify '*' as a wildcard, thereby allowing any origin to access the resource."
										},
										{
											"key": "Connection",
											"value": "keep-alive",
											"name": "Connection",
											"description": "Options that are desired for the connection"
										},
										{
											"key": "Content-Length",
											"value": "17",
											"name": "Content-Length",
											"description": "The length of the response body in octets (8-bit bytes)"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8",
											"name": "Content-Type",
											"description": "The mime type of this content"
										},
										{
											"key": "Date",
											"value": "Mon, 16 Apr 2018 13:04:19 GMT",
											"name": "Date",
											"description": "The date and time that the message was sent"
										},
										{
											"key": "X-Response-Time",
											"value": "31ms",
											"name": "X-Response-Time",
											"description": "Custom header"
										}
									],
									"cookie": [],
									"body": "{}"
								}
							]
						},
						{
							"name": "Get Quiz Leaderboard Win",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "e6dda3d8-f3f0-4007-8414-8ad28fea72cb",
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code is 200\"] = responseCode.code === 200;",
											"var data = JSON.parse(responseBody);"
										]
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{providerToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "",
										"value": ""
									}
								],
								"url": {
									"raw": "{{quizApiHost}}/v1/channels/{{channelId}}/streams/{{streamId}}/quiz/leaderboard?type=win&limit=10",
									"host": [
										"{{quizApiHost}}"
									],
									"path": [
										"v1",
										"channels",
										"{{channelId}}",
										"streams",
										"{{streamId}}",
										"quiz",
										"leaderboard"
									],
									"query": [
										{
											"key": "type",
											"value": "win"
										},
										{
											"key": "limit",
											"value": "10"
										}
									]
								},
								"description": "Retrieves the top n users by descending quiz wins for a given target (i.e. the target of the bearer token).\n\n| Permissions              | no token | anonymous token | provider token | admin token |\n| ------------------------ | :------: | :-------------: | :------------: | :---------: |\n| Get Quiz Leaderboard Win | -        | -               | x              | -           |"
							},
							"response": [
								{
									"name": "Get Quiz Leaderboard Win",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"disabled": false
											},
											{
												"key": "",
												"value": "",
												"disabled": false
											}
										],
										"url": {
											"raw": "{{quizApiHost}}/v1/channels/{{channelId}}/streams/{{streamId}}/quiz/leaderboard?type=win",
											"host": [
												"{{quizApiHost}}"
											],
											"path": [
												"v1",
												"channels",
												"{{channelId}}",
												"streams",
												"{{streamId}}",
												"quiz",
												"leaderboard"
											],
											"query": [
												{
													"key": "type",
													"value": "win"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Access-Control-Allow-Headers",
											"value": "Content-Type, Authorization, Accept, Cache-Control, X-Requested-With",
											"name": "Access-Control-Allow-Headers",
											"description": "Used in response to a preflight request to indicate which HTTP headers can be used when making the actual request."
										},
										{
											"key": "Access-Control-Allow-Methods",
											"value": "GET,PUT,POST,DELETE",
											"name": "Access-Control-Allow-Methods",
											"description": "Specifies the method or methods allowed when accessing the resource. This is used in response to a preflight request."
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*",
											"name": "Access-Control-Allow-Origin",
											"description": "Specifies a URI that may access the resource. For requests without credentials, the server may specify '*' as a wildcard, thereby allowing any origin to access the resource."
										},
										{
											"key": "Cache-Control",
											"value": "public, max-age=60",
											"name": "Cache-Control",
											"description": "Tells all caching mechanisms from server to client whether they may cache this object. It is measured in seconds"
										},
										{
											"key": "Connection",
											"value": "keep-alive",
											"name": "Connection",
											"description": "Options that are desired for the connection"
										},
										{
											"key": "Content-Length",
											"value": "341",
											"name": "Content-Length",
											"description": "The length of the response body in octets (8-bit bytes)"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8",
											"name": "Content-Type",
											"description": "The mime type of this content"
										},
										{
											"key": "Date",
											"value": "Mon, 16 Apr 2018 12:55:38 GMT",
											"name": "Date",
											"description": "The date and time that the message was sent"
										},
										{
											"key": "X-Response-Time",
											"value": "26ms",
											"name": "X-Response-Time",
											"description": "Custom header"
										}
									],
									"cookie": [],
									"body": "[{\"user\":{\"id\":\"f132c34a-ec33-4779-a837-e27c3e868753\",\"name\":\"Anonymous\",\"avatar\":\"https://cdn.zender.tv/live/uploads/6702e9ea-2b46-4487-8830-d713b32c7c5e/2017-11-09/eb37b0a3-d660-40cd-a1eb-7fe98cfdb3df.original.jpeg\",\"externalId\":\"e878ecf0-31b9-11e8-883b-150a4ff79cb7_fbed2d37-02bd-4e0e-8ee7-c1205fa75df0\"},\"scores\":{\"wins\":1,\"answers\":1}}]"
								}
							]
						},
						{
							"name": "Get Quiz Leaderboard Answer",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code is 200\"] = responseCode.code === 200;",
											"var data = JSON.parse(responseBody);"
										]
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{providerToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "",
										"value": ""
									}
								],
								"url": {
									"raw": "{{quizApiHost}}/v1/channels/{{channelId}}/streams/{{streamId}}/quiz/leaderboard?type=answer&limit=10",
									"host": [
										"{{quizApiHost}}"
									],
									"path": [
										"v1",
										"channels",
										"{{channelId}}",
										"streams",
										"{{streamId}}",
										"quiz",
										"leaderboard"
									],
									"query": [
										{
											"key": "type",
											"value": "answer"
										},
										{
											"key": "limit",
											"value": "10"
										}
									]
								},
								"description": "Retrieves the top n users by descending correct answers for a given target (i.e. the target of the bearer token).\n\n| Permissions                 | no token | anonymous token | provider token | admin token |\n| --------------------------- | :------: | :-------------: | :------------: | :---------: |\n| Get Quiz Leaderboard Answer | -        | -               | x              | -           |"
							},
							"response": [
								{
									"name": "Get Quiz Leaderboard Answer (no bearer token provided)",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"disabled": false
											},
											{
												"key": "",
												"value": "",
												"disabled": false
											}
										],
										"url": {
											"raw": "{{quizApiHost}}/v1/channels/{{channelId}}/streams/{{streamId}}/quiz/leaderboard?type=answer&limit=10",
											"host": [
												"{{quizApiHost}}"
											],
											"path": [
												"v1",
												"channels",
												"{{channelId}}",
												"streams",
												"{{streamId}}",
												"quiz",
												"leaderboard"
											],
											"query": [
												{
													"key": "type",
													"value": "answer"
												},
												{
													"key": "limit",
													"value": "10"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Access-Control-Allow-Headers",
											"value": "Content-Type, Authorization, Accept, Cache-Control, X-Requested-With",
											"name": "Access-Control-Allow-Headers",
											"description": "Used in response to a preflight request to indicate which HTTP headers can be used when making the actual request."
										},
										{
											"key": "Access-Control-Allow-Methods",
											"value": "GET,PUT,POST,DELETE",
											"name": "Access-Control-Allow-Methods",
											"description": "Specifies the method or methods allowed when accessing the resource. This is used in response to a preflight request."
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*",
											"name": "Access-Control-Allow-Origin",
											"description": "Specifies a URI that may access the resource. For requests without credentials, the server may specify '*' as a wildcard, thereby allowing any origin to access the resource."
										},
										{
											"key": "Cache-Control",
											"value": "public, max-age=60",
											"name": "Cache-Control",
											"description": "Tells all caching mechanisms from server to client whether they may cache this object. It is measured in seconds"
										},
										{
											"key": "Connection",
											"value": "keep-alive",
											"name": "Connection",
											"description": "Options that are desired for the connection"
										},
										{
											"key": "Content-Length",
											"value": "85",
											"name": "Content-Length",
											"description": "The length of the response body in octets (8-bit bytes)"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8",
											"name": "Content-Type",
											"description": "The mime type of this content"
										},
										{
											"key": "Date",
											"value": "Tue, 17 Apr 2018 14:25:05 GMT",
											"name": "Date",
											"description": "The date and time that the message was sent"
										},
										{
											"key": "X-Response-Time",
											"value": "74ms",
											"name": "X-Response-Time",
											"description": "Custom header"
										}
									],
									"cookie": [],
									"body": "{\"code\":\"UNAUTHORIZED\",\"message\":\"You are not allowed to retrieve this leaderboard.\"}"
								},
								{
									"name": "Get Quiz Leaderboard Answer (success)",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"disabled": false
											},
											{
												"key": "",
												"value": "",
												"disabled": false
											}
										],
										"url": {
											"raw": "{{quizApiHost}}/v1/channels/{{channelId}}/streams/{{streamId}}/quiz/leaderboard?type=answer",
											"host": [
												"{{quizApiHost}}"
											],
											"path": [
												"v1",
												"channels",
												"{{channelId}}",
												"streams",
												"{{streamId}}",
												"quiz",
												"leaderboard"
											],
											"query": [
												{
													"key": "type",
													"value": "answer"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Access-Control-Allow-Headers",
											"value": "Content-Type, Authorization, Accept, Cache-Control, X-Requested-With",
											"name": "Access-Control-Allow-Headers",
											"description": "Used in response to a preflight request to indicate which HTTP headers can be used when making the actual request."
										},
										{
											"key": "Access-Control-Allow-Methods",
											"value": "GET,PUT,POST,DELETE",
											"name": "Access-Control-Allow-Methods",
											"description": "Specifies the method or methods allowed when accessing the resource. This is used in response to a preflight request."
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*",
											"name": "Access-Control-Allow-Origin",
											"description": "Specifies a URI that may access the resource. For requests without credentials, the server may specify '*' as a wildcard, thereby allowing any origin to access the resource."
										},
										{
											"key": "Cache-Control",
											"value": "public, max-age=60",
											"name": "Cache-Control",
											"description": "Tells all caching mechanisms from server to client whether they may cache this object. It is measured in seconds"
										},
										{
											"key": "Connection",
											"value": "keep-alive",
											"name": "Connection",
											"description": "Options that are desired for the connection"
										},
										{
											"key": "Content-Length",
											"value": "341",
											"name": "Content-Length",
											"description": "The length of the response body in octets (8-bit bytes)"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8",
											"name": "Content-Type",
											"description": "The mime type of this content"
										},
										{
											"key": "Date",
											"value": "Mon, 16 Apr 2018 12:55:57 GMT",
											"name": "Date",
											"description": "The date and time that the message was sent"
										},
										{
											"key": "X-Response-Time",
											"value": "3ms",
											"name": "X-Response-Time",
											"description": "Custom header"
										}
									],
									"cookie": [],
									"body": "[{\"user\":{\"id\":\"f132c34a-ec33-4779-a837-e27c3e868753\",\"name\":\"Anonymous\",\"avatar\":\"https://cdn.zender.tv/live/uploads/6702e9ea-2b46-4487-8830-d713b32c7c5e/2017-11-09/eb37b0a3-d660-40cd-a1eb-7fe98cfdb3df.original.jpeg\",\"externalId\":\"e878ecf0-31b9-11e8-883b-150a4ff79cb7_fbed2d37-02bd-4e0e-8ee7-c1205fa75df0\"},\"scores\":{\"wins\":1,\"answers\":1}}]"
								}
							]
						},
						{
							"name": "Get Quiz Leaderboard User",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code is 200\"] = responseCode.code === 200;",
											"var data = JSON.parse(responseBody);"
										]
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{providerToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "",
										"value": ""
									}
								],
								"url": {
									"raw": "{{quizApiHost}}/v1/channels/{{channelId}}/streams/{{streamId}}/quiz/leaderboard?type=user",
									"host": [
										"{{quizApiHost}}"
									],
									"path": [
										"v1",
										"channels",
										"{{channelId}}",
										"streams",
										"{{streamId}}",
										"quiz",
										"leaderboard"
									],
									"query": [
										{
											"key": "type",
											"value": "user"
										}
									]
								},
								"description": "Retrieves current user's quiz scores for a given target (i.e. the target of the bearer token).\n\n| Permissions               | no token | anonymous token | provider token | admin token |\n| ------------------------- | :------: | :-------------: | :------------: | :---------: |\n| Get Quiz Leaderboard User | -        | -               | x              | -           |"
							},
							"response": [
								{
									"name": "Get Quiz Leaderboard User (no bearer token provided)",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"disabled": false
											},
											{
												"key": "",
												"value": "",
												"disabled": false
											}
										],
										"url": {
											"raw": "{{quizApiHost}}/v1/channels/{{channelId}}/streams/{{streamId}}/quiz/leaderboard?type=user",
											"host": [
												"{{quizApiHost}}"
											],
											"path": [
												"v1",
												"channels",
												"{{channelId}}",
												"streams",
												"{{streamId}}",
												"quiz",
												"leaderboard"
											],
											"query": [
												{
													"key": "type",
													"value": "user"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Access-Control-Allow-Headers",
											"value": "Content-Type, Authorization, Accept, Cache-Control, X-Requested-With",
											"name": "Access-Control-Allow-Headers",
											"description": "Used in response to a preflight request to indicate which HTTP headers can be used when making the actual request."
										},
										{
											"key": "Access-Control-Allow-Methods",
											"value": "GET,PUT,POST,DELETE",
											"name": "Access-Control-Allow-Methods",
											"description": "Specifies the method or methods allowed when accessing the resource. This is used in response to a preflight request."
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*",
											"name": "Access-Control-Allow-Origin",
											"description": "Specifies a URI that may access the resource. For requests without credentials, the server may specify '*' as a wildcard, thereby allowing any origin to access the resource."
										},
										{
											"key": "Cache-Control",
											"value": "public, max-age=60",
											"name": "Cache-Control",
											"description": "Tells all caching mechanisms from server to client whether they may cache this object. It is measured in seconds"
										},
										{
											"key": "Connection",
											"value": "keep-alive",
											"name": "Connection",
											"description": "Options that are desired for the connection"
										},
										{
											"key": "Content-Length",
											"value": "85",
											"name": "Content-Length",
											"description": "The length of the response body in octets (8-bit bytes)"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8",
											"name": "Content-Type",
											"description": "The mime type of this content"
										},
										{
											"key": "Date",
											"value": "Tue, 17 Apr 2018 14:19:51 GMT",
											"name": "Date",
											"description": "The date and time that the message was sent"
										},
										{
											"key": "X-Response-Time",
											"value": "22ms",
											"name": "X-Response-Time",
											"description": "Custom header"
										}
									],
									"cookie": [],
									"body": "{\"code\":\"UNAUTHORIZED\",\"message\":\"You are not allowed to retrieve this leaderboard.\"}"
								}
							]
						},
						{
							"name": "Set Quiz Referrer code",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code is 200\"] = responseCode.code === 200;",
											"var data = JSON.parse(responseBody);"
										]
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{providerToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "",
										"value": ""
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"shareCode\": \"2808b5c6-76a1-4d18-93f5-23ea9f6246da_10212482779324747\"\n}"
								},
								"url": {
									"raw": "{{quizApiHost}}/v1/channels/{{channelId}}/streams/{{streamId}}/quiz/referrer",
									"host": [
										"{{quizApiHost}}"
									],
									"path": [
										"v1",
										"channels",
										"{{channelId}}",
										"streams",
										"{{streamId}}",
										"quiz",
										"referrer"
									]
								},
								"description": "Sets current user's referrer code for a given target (i.e. the target of the bearer token).\n\n| Permissions  | no token | anonymous token | provider token | admin token |\n| ------------ | :------: | :-------------: | :------------: | :---------: |\n| Set referrer | -        | -               | x              | -           |"
							},
							"response": [
								{
									"name": "Set Quiz Referrer code",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"disabled": false
											},
											{
												"key": "",
												"value": "",
												"disabled": false
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"shareCode\": \"2808b5c6-76a1-4d18-93f5-23ea9f6246da_10212482779324747\"\n}"
										},
										"url": {
											"raw": "{{quizApiHost}}/v1/channels/{{channelId}}/streams/{{streamId}}/quiz/referrer",
											"host": [
												"{{quizApiHost}}"
											],
											"path": [
												"v1",
												"channels",
												"{{channelId}}",
												"streams",
												"{{streamId}}",
												"quiz",
												"referrer"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Access-Control-Allow-Headers",
											"value": "Content-Type, Authorization, Accept, Cache-Control, X-Requested-With",
											"name": "Access-Control-Allow-Headers",
											"description": "Used in response to a preflight request to indicate which HTTP headers can be used when making the actual request."
										},
										{
											"key": "Access-Control-Allow-Methods",
											"value": "GET,PUT,POST,DELETE",
											"name": "Access-Control-Allow-Methods",
											"description": "Specifies the method or methods allowed when accessing the resource. This is used in response to a preflight request."
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*",
											"name": "Access-Control-Allow-Origin",
											"description": "Specifies a URI that may access the resource. For requests without credentials, the server may specify '*' as a wildcard, thereby allowing any origin to access the resource."
										},
										{
											"key": "Connection",
											"value": "keep-alive",
											"name": "Connection",
											"description": "Options that are desired for the connection"
										},
										{
											"key": "Content-Length",
											"value": "15",
											"name": "Content-Length",
											"description": "The length of the response body in octets (8-bit bytes)"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8",
											"name": "Content-Type",
											"description": "The mime type of this content"
										},
										{
											"key": "Date",
											"value": "Tue, 21 Aug 2018 14:17:27 GMT",
											"name": "Date",
											"description": "The date and time that the message was sent"
										},
										{
											"key": "X-Response-Time",
											"value": "135ms",
											"name": "X-Response-Time",
											"description": "Custom header"
										}
									],
									"cookie": [],
									"body": "{\"status\":\"ok\"}"
								},
								{
									"name": "Set own quiz referrer code",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"disabled": false
											},
											{
												"key": "",
												"value": "",
												"disabled": false
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"shareCode\": \"abcd\"\n}"
										},
										"url": {
											"raw": "{{quizApiHost}}/v1/channels/{{channelId}}/streams/{{streamId}}/quiz/referrer",
											"host": [
												"{{quizApiHost}}"
											],
											"path": [
												"v1",
												"channels",
												"{{channelId}}",
												"streams",
												"{{streamId}}",
												"quiz",
												"referrer"
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Access-Control-Allow-Headers",
											"value": "Content-Type, Authorization, Accept, Cache-Control, X-Requested-With",
											"name": "Access-Control-Allow-Headers",
											"description": "Used in response to a preflight request to indicate which HTTP headers can be used when making the actual request."
										},
										{
											"key": "Access-Control-Allow-Methods",
											"value": "GET,PUT,POST,DELETE",
											"name": "Access-Control-Allow-Methods",
											"description": "Specifies the method or methods allowed when accessing the resource. This is used in response to a preflight request."
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*",
											"name": "Access-Control-Allow-Origin",
											"description": "Specifies a URI that may access the resource. For requests without credentials, the server may specify '*' as a wildcard, thereby allowing any origin to access the resource."
										},
										{
											"key": "Connection",
											"value": "keep-alive",
											"name": "Connection",
											"description": "Options that are desired for the connection"
										},
										{
											"key": "Content-Length",
											"value": "62",
											"name": "Content-Length",
											"description": "The length of the response body in octets (8-bit bytes)"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8",
											"name": "Content-Type",
											"description": "The mime type of this content"
										},
										{
											"key": "Date",
											"value": "Tue, 21 Aug 2018 14:03:37 GMT",
											"name": "Date",
											"description": "The date and time that the message was sent"
										},
										{
											"key": "X-Response-Time",
											"value": "95ms",
											"name": "X-Response-Time",
											"description": "Custom header"
										}
									],
									"cookie": [],
									"body": "{\"code\":\"FORBIDDEN\",\"message\":\"Cannot set own referrer code.\"}"
								},
								{
									"name": "Share code doesn't exist",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"disabled": false
											},
											{
												"key": "",
												"value": "",
												"disabled": false
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"shareCode\": \"dddddd\"\n}"
										},
										"url": {
											"raw": "{{quizApiHost}}/v1/channels/{{channelId}}/streams/{{streamId}}/quiz/referrer",
											"host": [
												"{{quizApiHost}}"
											],
											"path": [
												"v1",
												"channels",
												"{{channelId}}",
												"streams",
												"{{streamId}}",
												"quiz",
												"referrer"
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Access-Control-Allow-Headers",
											"value": "Content-Type, Authorization, Accept, Cache-Control, X-Requested-With",
											"name": "Access-Control-Allow-Headers",
											"description": "Used in response to a preflight request to indicate which HTTP headers can be used when making the actual request."
										},
										{
											"key": "Access-Control-Allow-Methods",
											"value": "GET,PUT,POST,DELETE",
											"name": "Access-Control-Allow-Methods",
											"description": "Specifies the method or methods allowed when accessing the resource. This is used in response to a preflight request."
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*",
											"name": "Access-Control-Allow-Origin",
											"description": "Specifies a URI that may access the resource. For requests without credentials, the server may specify '*' as a wildcard, thereby allowing any origin to access the resource."
										},
										{
											"key": "Connection",
											"value": "keep-alive",
											"name": "Connection",
											"description": "Options that are desired for the connection"
										},
										{
											"key": "Content-Length",
											"value": "59",
											"name": "Content-Length",
											"description": "The length of the response body in octets (8-bit bytes)"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8",
											"name": "Content-Type",
											"description": "The mime type of this content"
										},
										{
											"key": "Date",
											"value": "Tue, 21 Aug 2018 14:16:57 GMT",
											"name": "Date",
											"description": "The date and time that the message was sent"
										},
										{
											"key": "X-Response-Time",
											"value": "83ms",
											"name": "X-Response-Time",
											"description": "Custom header"
										}
									],
									"cookie": [],
									"body": "{\"code\":\"NOT_FOUND\",\"message\":\"Share code does not exist.\"}"
								}
							]
						},
						{
							"name": "Get Quiz Referrer code",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code is 200\"] = responseCode.code === 200;",
											"var data = JSON.parse(responseBody);"
										]
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{providerToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "",
										"value": ""
									}
								],
								"url": {
									"raw": "{{quizApiHost}}/v1/channels/{{channelId}}/streams/{{streamId}}/quiz/referrer",
									"host": [
										"{{quizApiHost}}"
									],
									"path": [
										"v1",
										"channels",
										"{{channelId}}",
										"streams",
										"{{streamId}}",
										"quiz",
										"referrer"
									]
								},
								"description": "Gets current user's referrer code for a given target (i.e. the target of the bearer token).\n\n| Permissions  | no token | anonymous token | provider token | admin token |\n| ------------ | :------: | :-------------: | :------------: | :---------: |\n| Get referrer | -        | -               | x              | -           |"
							},
							"response": [
								{
									"name": "Get Quiz Referrer code",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"disabled": false
											},
											{
												"key": "",
												"value": "",
												"disabled": false
											}
										],
										"url": {
											"raw": "{{quizApiHost}}/v1/channels/{{channelId}}/streams/{{streamId}}/quiz/referrer",
											"host": [
												"{{quizApiHost}}"
											],
											"path": [
												"v1",
												"channels",
												"{{channelId}}",
												"streams",
												"{{streamId}}",
												"quiz",
												"referrer"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Access-Control-Allow-Headers",
											"value": "Content-Type, Authorization, Accept, Cache-Control, X-Requested-With",
											"name": "Access-Control-Allow-Headers",
											"description": "Used in response to a preflight request to indicate which HTTP headers can be used when making the actual request."
										},
										{
											"key": "Access-Control-Allow-Methods",
											"value": "GET,PUT,POST,DELETE",
											"name": "Access-Control-Allow-Methods",
											"description": "Specifies the method or methods allowed when accessing the resource. This is used in response to a preflight request."
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*",
											"name": "Access-Control-Allow-Origin",
											"description": "Specifies a URI that may access the resource. For requests without credentials, the server may specify '*' as a wildcard, thereby allowing any origin to access the resource."
										},
										{
											"key": "Connection",
											"value": "keep-alive",
											"name": "Connection",
											"description": "Options that are desired for the connection"
										},
										{
											"key": "Content-Length",
											"value": "65",
											"name": "Content-Length",
											"description": "The length of the response body in octets (8-bit bytes)"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8",
											"name": "Content-Type",
											"description": "The mime type of this content"
										},
										{
											"key": "Date",
											"value": "Tue, 21 Aug 2018 14:17:45 GMT",
											"name": "Date",
											"description": "The date and time that the message was sent"
										},
										{
											"key": "X-Response-Time",
											"value": "89ms",
											"name": "X-Response-Time",
											"description": "Custom header"
										}
									],
									"cookie": [],
									"body": "{\"code\":\"2808b5c6-76a1-4d18-93f5-23ea9f6246da_10212482779324747\"}"
								},
								{
									"name": "Not found",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"disabled": false
											},
											{
												"key": "",
												"value": "",
												"disabled": false
											}
										],
										"url": {
											"raw": "{{quizApiHost}}/v1/channels/{{channelId}}/streams/{{streamId}}/quiz/referrer",
											"host": [
												"{{quizApiHost}}"
											],
											"path": [
												"v1",
												"channels",
												"{{channelId}}",
												"streams",
												"{{streamId}}",
												"quiz",
												"referrer"
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Access-Control-Allow-Headers",
											"value": "Content-Type, Authorization, Accept, Cache-Control, X-Requested-With",
											"name": "Access-Control-Allow-Headers",
											"description": "Used in response to a preflight request to indicate which HTTP headers can be used when making the actual request."
										},
										{
											"key": "Access-Control-Allow-Methods",
											"value": "GET,PUT,POST,DELETE",
											"name": "Access-Control-Allow-Methods",
											"description": "Specifies the method or methods allowed when accessing the resource. This is used in response to a preflight request."
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*",
											"name": "Access-Control-Allow-Origin",
											"description": "Specifies a URI that may access the resource. For requests without credentials, the server may specify '*' as a wildcard, thereby allowing any origin to access the resource."
										},
										{
											"key": "Connection",
											"value": "keep-alive",
											"name": "Connection",
											"description": "Options that are desired for the connection"
										},
										{
											"key": "Content-Length",
											"value": "54",
											"name": "Content-Length",
											"description": "The length of the response body in octets (8-bit bytes)"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8",
											"name": "Content-Type",
											"description": "The mime type of this content"
										},
										{
											"key": "Date",
											"value": "Tue, 21 Aug 2018 14:15:55 GMT",
											"name": "Date",
											"description": "The date and time that the message was sent"
										},
										{
											"key": "X-Response-Time",
											"value": "72ms",
											"name": "X-Response-Time",
											"description": "Custom header"
										}
									],
									"cookie": [],
									"body": "{\"code\":\"NOT_FOUND\",\"message\":\"No referrer code set.\"}"
								}
							]
						},
						{
							"name": "Redeem extra life on last question",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code is 200\"] = responseCode.code === 200;",
											"var data = JSON.parse(responseBody);"
										]
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{providerToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "",
										"value": ""
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n}"
								},
								"url": {
									"raw": "{{quizApiHost}}/v1/channels/{{channelId}}/streams/{{streamId}}/quiz/{{quizId}}/question/{{questionId}}/redeem",
									"host": [
										"{{quizApiHost}}"
									],
									"path": [
										"v1",
										"channels",
										"{{channelId}}",
										"streams",
										"{{streamId}}",
										"quiz",
										"{{quizId}}",
										"question",
										"{{questionId}}",
										"redeem"
									]
								},
								"description": "Redeem an extra life on the specified question. This is to be used when the user gives a bad answer or no answer to a question, and they want to stay in the quiz.\n\n| Permissions    | no token | anonymous token | provider token | admin token |\n| -------------- | :------: | :-------------: | :------------: | :---------: |\n| Use extra life | -        | -               | x              | -           |"
							},
							"response": [
								{
									"name": "You cannot redeem when still in the running.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "",
												"value": ""
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n}"
										},
										"url": {
											"raw": "{{quizApiHost}}/v1/channels/{{channelId}}/streams/{{streamId}}/quiz/{{quizId}}/question/{{questionId}}/redeem",
											"host": [
												"{{quizApiHost}}"
											],
											"path": [
												"v1",
												"channels",
												"{{channelId}}",
												"streams",
												"{{streamId}}",
												"quiz",
												"{{quizId}}",
												"question",
												"{{questionId}}",
												"redeem"
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Access-Control-Allow-Headers",
											"value": "Content-Type, Authorization, Accept, Cache-Control, X-Requested-With",
											"name": "Access-Control-Allow-Headers",
											"description": "Used in response to a preflight request to indicate which HTTP headers can be used when making the actual request."
										},
										{
											"key": "Access-Control-Allow-Methods",
											"value": "GET,PUT,POST,DELETE",
											"name": "Access-Control-Allow-Methods",
											"description": "Specifies the method or methods allowed when accessing the resource. This is used in response to a preflight request."
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*",
											"name": "Access-Control-Allow-Origin",
											"description": "Specifies a URI that may access the resource. For requests without credentials, the server may specify '*' as a wildcard, thereby allowing any origin to access the resource."
										},
										{
											"key": "Connection",
											"value": "keep-alive",
											"name": "Connection",
											"description": "Options that are desired for the connection"
										},
										{
											"key": "Content-Length",
											"value": "46",
											"name": "Content-Length",
											"description": "The length of the response body in octets (8-bit bytes)"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8",
											"name": "Content-Type",
											"description": "The mime type of this content"
										},
										{
											"key": "Date",
											"value": "Tue, 21 Aug 2018 14:41:26 GMT",
											"name": "Date",
											"description": "The date and time that the message was sent"
										},
										{
											"key": "X-Response-Time",
											"value": "90ms",
											"name": "X-Response-Time",
											"description": "Custom header"
										}
									],
									"cookie": [],
									"body": "{\n    \"code\": \"FORBIDDEN\",\n    \"message\": \"You cannot redeem when still in the running.\"\n}"
								},
								{
									"name": "Forbidden, no closed questions",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"disabled": false
											},
											{
												"key": "",
												"value": "",
												"disabled": false
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n}"
										},
										"url": {
											"raw": "{{quizApiHost}}/v1/channels/{{channelId}}/streams/{{streamId}}/quiz/{{quizId}}/question/{{questionId}}/redeem",
											"host": [
												"{{quizApiHost}}"
											],
											"path": [
												"v1",
												"channels",
												"{{channelId}}",
												"streams",
												"{{streamId}}",
												"quiz",
												"{{quizId}}",
												"question",
												"{{questionId}}",
												"redeem"
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Access-Control-Allow-Headers",
											"value": "Content-Type, Authorization, Accept, Cache-Control, X-Requested-With",
											"name": "Access-Control-Allow-Headers",
											"description": "Used in response to a preflight request to indicate which HTTP headers can be used when making the actual request."
										},
										{
											"key": "Access-Control-Allow-Methods",
											"value": "GET,PUT,POST,DELETE",
											"name": "Access-Control-Allow-Methods",
											"description": "Specifies the method or methods allowed when accessing the resource. This is used in response to a preflight request."
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*",
											"name": "Access-Control-Allow-Origin",
											"description": "Specifies a URI that may access the resource. For requests without credentials, the server may specify '*' as a wildcard, thereby allowing any origin to access the resource."
										},
										{
											"key": "Connection",
											"value": "keep-alive",
											"name": "Connection",
											"description": "Options that are desired for the connection"
										},
										{
											"key": "Content-Length",
											"value": "46",
											"name": "Content-Length",
											"description": "The length of the response body in octets (8-bit bytes)"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8",
											"name": "Content-Type",
											"description": "The mime type of this content"
										},
										{
											"key": "Date",
											"value": "Tue, 21 Aug 2018 14:41:26 GMT",
											"name": "Date",
											"description": "The date and time that the message was sent"
										},
										{
											"key": "X-Response-Time",
											"value": "90ms",
											"name": "X-Response-Time",
											"description": "Custom header"
										}
									],
									"cookie": [],
									"body": "{\n    \"code\": \"FORBIDDEN\",\n    \"message\": \"No closed questions yet.\"\n}"
								},
								{
									"name": "Question is not closed.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "",
												"value": ""
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n}"
										},
										"url": {
											"raw": "{{quizApiHost}}/v1/channels/{{channelId}}/streams/{{streamId}}/quiz/{{quizId}}/question/{{questionId}}/redeem",
											"host": [
												"{{quizApiHost}}"
											],
											"path": [
												"v1",
												"channels",
												"{{channelId}}",
												"streams",
												"{{streamId}}",
												"quiz",
												"{{quizId}}",
												"question",
												"{{questionId}}",
												"redeem"
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Access-Control-Allow-Headers",
											"value": "Content-Type, Authorization, Accept, Cache-Control, X-Requested-With",
											"name": "Access-Control-Allow-Headers",
											"description": "Used in response to a preflight request to indicate which HTTP headers can be used when making the actual request."
										},
										{
											"key": "Access-Control-Allow-Methods",
											"value": "GET,PUT,POST,DELETE",
											"name": "Access-Control-Allow-Methods",
											"description": "Specifies the method or methods allowed when accessing the resource. This is used in response to a preflight request."
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*",
											"name": "Access-Control-Allow-Origin",
											"description": "Specifies a URI that may access the resource. For requests without credentials, the server may specify '*' as a wildcard, thereby allowing any origin to access the resource."
										},
										{
											"key": "Connection",
											"value": "keep-alive",
											"name": "Connection",
											"description": "Options that are desired for the connection"
										},
										{
											"key": "Content-Length",
											"value": "46",
											"name": "Content-Length",
											"description": "The length of the response body in octets (8-bit bytes)"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8",
											"name": "Content-Type",
											"description": "The mime type of this content"
										},
										{
											"key": "Date",
											"value": "Tue, 21 Aug 2018 14:41:26 GMT",
											"name": "Date",
											"description": "The date and time that the message was sent"
										},
										{
											"key": "X-Response-Time",
											"value": "90ms",
											"name": "X-Response-Time",
											"description": "Custom header"
										}
									],
									"cookie": [],
									"body": "{\n    \"code\": \"FORBIDDEN\",\n    \"message\": \"Question not closed yet.\"\n}"
								},
								{
									"name": "Question is not redeemable.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "",
												"value": ""
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n}"
										},
										"url": {
											"raw": "{{quizApiHost}}/v1/channels/{{channelId}}/streams/{{streamId}}/quiz/{{quizId}}/question/{{questionId}}/redeem",
											"host": [
												"{{quizApiHost}}"
											],
											"path": [
												"v1",
												"channels",
												"{{channelId}}",
												"streams",
												"{{streamId}}",
												"quiz",
												"{{quizId}}",
												"question",
												"{{questionId}}",
												"redeem"
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Access-Control-Allow-Headers",
											"value": "Content-Type, Authorization, Accept, Cache-Control, X-Requested-With",
											"name": "Access-Control-Allow-Headers",
											"description": "Used in response to a preflight request to indicate which HTTP headers can be used when making the actual request."
										},
										{
											"key": "Access-Control-Allow-Methods",
											"value": "GET,PUT,POST,DELETE",
											"name": "Access-Control-Allow-Methods",
											"description": "Specifies the method or methods allowed when accessing the resource. This is used in response to a preflight request."
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*",
											"name": "Access-Control-Allow-Origin",
											"description": "Specifies a URI that may access the resource. For requests without credentials, the server may specify '*' as a wildcard, thereby allowing any origin to access the resource."
										},
										{
											"key": "Connection",
											"value": "keep-alive",
											"name": "Connection",
											"description": "Options that are desired for the connection"
										},
										{
											"key": "Content-Length",
											"value": "46",
											"name": "Content-Length",
											"description": "The length of the response body in octets (8-bit bytes)"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8",
											"name": "Content-Type",
											"description": "The mime type of this content"
										},
										{
											"key": "Date",
											"value": "Tue, 21 Aug 2018 14:41:26 GMT",
											"name": "Date",
											"description": "The date and time that the message was sent"
										},
										{
											"key": "X-Response-Time",
											"value": "90ms",
											"name": "X-Response-Time",
											"description": "Custom header"
										}
									],
									"cookie": [],
									"body": "{\n    \"code\": \"FORBIDDEN\",\n    \"message\": \"You can not redeem an extra life for this question.\"\n}"
								},
								{
									"name": "No questions",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "",
												"value": ""
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n}"
										},
										"url": {
											"raw": "{{quizApiHost}}/v1/channels/{{channelId}}/streams/{{streamId}}/quiz/{{quizId}}/question/{{questionId}}/redeem",
											"host": [
												"{{quizApiHost}}"
											],
											"path": [
												"v1",
												"channels",
												"{{channelId}}",
												"streams",
												"{{streamId}}",
												"quiz",
												"{{quizId}}",
												"question",
												"{{questionId}}",
												"redeem"
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Access-Control-Allow-Headers",
											"value": "Content-Type, Authorization, Accept, Cache-Control, X-Requested-With",
											"name": "Access-Control-Allow-Headers",
											"description": "Used in response to a preflight request to indicate which HTTP headers can be used when making the actual request."
										},
										{
											"key": "Access-Control-Allow-Methods",
											"value": "GET,PUT,POST,DELETE",
											"name": "Access-Control-Allow-Methods",
											"description": "Specifies the method or methods allowed when accessing the resource. This is used in response to a preflight request."
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*",
											"name": "Access-Control-Allow-Origin",
											"description": "Specifies a URI that may access the resource. For requests without credentials, the server may specify '*' as a wildcard, thereby allowing any origin to access the resource."
										},
										{
											"key": "Connection",
											"value": "keep-alive",
											"name": "Connection",
											"description": "Options that are desired for the connection"
										},
										{
											"key": "Content-Length",
											"value": "46",
											"name": "Content-Length",
											"description": "The length of the response body in octets (8-bit bytes)"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8",
											"name": "Content-Type",
											"description": "The mime type of this content"
										},
										{
											"key": "Date",
											"value": "Tue, 21 Aug 2018 14:41:26 GMT",
											"name": "Date",
											"description": "The date and time that the message was sent"
										},
										{
											"key": "X-Response-Time",
											"value": "90ms",
											"name": "X-Response-Time",
											"description": "Custom header"
										}
									],
									"cookie": [],
									"body": "{\"code\":\"FORBIDDEN\",\"message\":\"No questions.\"}"
								},
								{
									"name": "Only last question can be redeemed",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "",
												"value": ""
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n}"
										},
										"url": {
											"raw": "{{quizApiHost}}/v1/channels/{{channelId}}/streams/{{streamId}}/quiz/{{quizId}}/question/{{questionId}}/redeem",
											"host": [
												"{{quizApiHost}}"
											],
											"path": [
												"v1",
												"channels",
												"{{channelId}}",
												"streams",
												"{{streamId}}",
												"quiz",
												"{{quizId}}",
												"question",
												"{{questionId}}",
												"redeem"
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Access-Control-Allow-Headers",
											"value": "Content-Type, Authorization, Accept, Cache-Control, X-Requested-With",
											"name": "Access-Control-Allow-Headers",
											"description": "Used in response to a preflight request to indicate which HTTP headers can be used when making the actual request."
										},
										{
											"key": "Access-Control-Allow-Methods",
											"value": "GET,PUT,POST,DELETE",
											"name": "Access-Control-Allow-Methods",
											"description": "Specifies the method or methods allowed when accessing the resource. This is used in response to a preflight request."
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*",
											"name": "Access-Control-Allow-Origin",
											"description": "Specifies a URI that may access the resource. For requests without credentials, the server may specify '*' as a wildcard, thereby allowing any origin to access the resource."
										},
										{
											"key": "Connection",
											"value": "keep-alive",
											"name": "Connection",
											"description": "Options that are desired for the connection"
										},
										{
											"key": "Content-Length",
											"value": "46",
											"name": "Content-Length",
											"description": "The length of the response body in octets (8-bit bytes)"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8",
											"name": "Content-Type",
											"description": "The mime type of this content"
										},
										{
											"key": "Date",
											"value": "Tue, 21 Aug 2018 14:41:26 GMT",
											"name": "Date",
											"description": "The date and time that the message was sent"
										},
										{
											"key": "X-Response-Time",
											"value": "90ms",
											"name": "X-Response-Time",
											"description": "Custom header"
										}
									],
									"cookie": [],
									"body": "{\n    \"code\": \"FORBIDDEN\",\n    \"message\": \"Can only redeem last question.\"\n}"
								},
								{
									"name": "Ok",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "",
												"value": ""
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n}"
										},
										"url": {
											"raw": "{{quizApiHost}}/v1/channels/{{channelId}}/streams/{{streamId}}/quiz/{{quizId}}/question/{{questionId}}/redeem",
											"host": [
												"{{quizApiHost}}"
											],
											"path": [
												"v1",
												"channels",
												"{{channelId}}",
												"streams",
												"{{streamId}}",
												"quiz",
												"{{quizId}}",
												"question",
												"{{questionId}}",
												"redeem"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Access-Control-Allow-Headers",
											"value": "Content-Type, Authorization, Accept, Cache-Control, X-Requested-With",
											"name": "Access-Control-Allow-Headers",
											"description": "Used in response to a preflight request to indicate which HTTP headers can be used when making the actual request."
										},
										{
											"key": "Access-Control-Allow-Methods",
											"value": "GET,PUT,POST,DELETE",
											"name": "Access-Control-Allow-Methods",
											"description": "Specifies the method or methods allowed when accessing the resource. This is used in response to a preflight request."
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*",
											"name": "Access-Control-Allow-Origin",
											"description": "Specifies a URI that may access the resource. For requests without credentials, the server may specify '*' as a wildcard, thereby allowing any origin to access the resource."
										},
										{
											"key": "Connection",
											"value": "keep-alive",
											"name": "Connection",
											"description": "Options that are desired for the connection"
										},
										{
											"key": "Content-Length",
											"value": "46",
											"name": "Content-Length",
											"description": "The length of the response body in octets (8-bit bytes)"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8",
											"name": "Content-Type",
											"description": "The mime type of this content"
										},
										{
											"key": "Date",
											"value": "Tue, 21 Aug 2018 14:41:26 GMT",
											"name": "Date",
											"description": "The date and time that the message was sent"
										},
										{
											"key": "X-Response-Time",
											"value": "90ms",
											"name": "X-Response-Time",
											"description": "Custom header"
										}
									],
									"cookie": [],
									"body": "{}"
								},
								{
									"name": "You can redeem an extra life once per quiz.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "",
												"value": ""
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n}"
										},
										"url": {
											"raw": "{{quizApiHost}}/v1/channels/{{channelId}}/streams/{{streamId}}/quiz/{{quizId}}/question/{{questionId}}/redeem",
											"host": [
												"{{quizApiHost}}"
											],
											"path": [
												"v1",
												"channels",
												"{{channelId}}",
												"streams",
												"{{streamId}}",
												"quiz",
												"{{quizId}}",
												"question",
												"{{questionId}}",
												"redeem"
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Access-Control-Allow-Headers",
											"value": "Content-Type, Authorization, Accept, Cache-Control, X-Requested-With",
											"name": "Access-Control-Allow-Headers",
											"description": "Used in response to a preflight request to indicate which HTTP headers can be used when making the actual request."
										},
										{
											"key": "Access-Control-Allow-Methods",
											"value": "GET,PUT,POST,DELETE",
											"name": "Access-Control-Allow-Methods",
											"description": "Specifies the method or methods allowed when accessing the resource. This is used in response to a preflight request."
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*",
											"name": "Access-Control-Allow-Origin",
											"description": "Specifies a URI that may access the resource. For requests without credentials, the server may specify '*' as a wildcard, thereby allowing any origin to access the resource."
										},
										{
											"key": "Connection",
											"value": "keep-alive",
											"name": "Connection",
											"description": "Options that are desired for the connection"
										},
										{
											"key": "Content-Length",
											"value": "46",
											"name": "Content-Length",
											"description": "The length of the response body in octets (8-bit bytes)"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8",
											"name": "Content-Type",
											"description": "The mime type of this content"
										},
										{
											"key": "Date",
											"value": "Tue, 21 Aug 2018 14:41:26 GMT",
											"name": "Date",
											"description": "The date and time that the message was sent"
										},
										{
											"key": "X-Response-Time",
											"value": "90ms",
											"name": "X-Response-Time",
											"description": "Custom header"
										}
									],
									"cookie": [],
									"body": "{\n    \"code\": \"FORBIDDEN\",\n    \"message\": \"You can redeem an extra life once per quiz.\"\n}"
								},
								{
									"name": "No extra lives",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "",
												"value": ""
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n}"
										},
										"url": {
											"raw": "{{quizApiHost}}/v1/channels/{{channelId}}/streams/{{streamId}}/quiz/{{quizId}}/question/{{questionId}}/redeem",
											"host": [
												"{{quizApiHost}}"
											],
											"path": [
												"v1",
												"channels",
												"{{channelId}}",
												"streams",
												"{{streamId}}",
												"quiz",
												"{{quizId}}",
												"question",
												"{{questionId}}",
												"redeem"
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Access-Control-Allow-Headers",
											"value": "Content-Type, Authorization, Accept, Cache-Control, X-Requested-With",
											"name": "Access-Control-Allow-Headers",
											"description": "Used in response to a preflight request to indicate which HTTP headers can be used when making the actual request."
										},
										{
											"key": "Access-Control-Allow-Methods",
											"value": "GET,PUT,POST,DELETE",
											"name": "Access-Control-Allow-Methods",
											"description": "Specifies the method or methods allowed when accessing the resource. This is used in response to a preflight request."
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*",
											"name": "Access-Control-Allow-Origin",
											"description": "Specifies a URI that may access the resource. For requests without credentials, the server may specify '*' as a wildcard, thereby allowing any origin to access the resource."
										},
										{
											"key": "Connection",
											"value": "keep-alive",
											"name": "Connection",
											"description": "Options that are desired for the connection"
										},
										{
											"key": "Content-Length",
											"value": "46",
											"name": "Content-Length",
											"description": "The length of the response body in octets (8-bit bytes)"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8",
											"name": "Content-Type",
											"description": "The mime type of this content"
										},
										{
											"key": "Date",
											"value": "Tue, 21 Aug 2018 14:41:26 GMT",
											"name": "Date",
											"description": "The date and time that the message was sent"
										},
										{
											"key": "X-Response-Time",
											"value": "90ms",
											"name": "X-Response-Time",
											"description": "Custom header"
										}
									],
									"cookie": [],
									"body": "{\n    \"code\": \"FORBIDDEN\",\n    \"message\": \"No extra lives.\"\n}"
								}
							]
						},
						{
							"name": "Get extra lives",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code is 200\"] = responseCode.code === 200;",
											"var data = JSON.parse(responseBody);"
										]
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{providerToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "",
										"value": ""
									}
								],
								"url": {
									"raw": "{{quizApiHost}}/v1/channels/{{channelId}}/streams/{{streamId}}/quiz/extraLives",
									"host": [
										"{{quizApiHost}}"
									],
									"path": [
										"v1",
										"channels",
										"{{channelId}}",
										"streams",
										"{{streamId}}",
										"quiz",
										"extraLives"
									]
								},
								"description": "Get number of extra lives.\n\n| Permissions     | no token | anonymous token | provider token | admin token |\n| --------------- | :------: | :-------------: | :------------: | :---------: |\n| Get extra lives | -        | -               | x              | -           |"
							},
							"response": [
								{
									"name": "Get extra lives",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"disabled": false
											},
											{
												"key": "",
												"value": "",
												"disabled": false
											}
										],
										"url": {
											"raw": "{{quizApiHost}}/v1/channels/{{channelId}}/streams/{{streamId}}/quiz/extraLives",
											"host": [
												"{{quizApiHost}}"
											],
											"path": [
												"v1",
												"channels",
												"{{channelId}}",
												"streams",
												"{{streamId}}",
												"quiz",
												"extraLives"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Access-Control-Allow-Headers",
											"value": "Content-Type, Authorization, Accept, Cache-Control, X-Requested-With",
											"name": "Access-Control-Allow-Headers",
											"description": "Used in response to a preflight request to indicate which HTTP headers can be used when making the actual request."
										},
										{
											"key": "Access-Control-Allow-Methods",
											"value": "GET,PUT,POST,DELETE",
											"name": "Access-Control-Allow-Methods",
											"description": "Specifies the method or methods allowed when accessing the resource. This is used in response to a preflight request."
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*",
											"name": "Access-Control-Allow-Origin",
											"description": "Specifies a URI that may access the resource. For requests without credentials, the server may specify '*' as a wildcard, thereby allowing any origin to access the resource."
										},
										{
											"key": "Connection",
											"value": "keep-alive",
											"name": "Connection",
											"description": "Options that are desired for the connection"
										},
										{
											"key": "Content-Length",
											"value": "17",
											"name": "Content-Length",
											"description": "The length of the response body in octets (8-bit bytes)"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8",
											"name": "Content-Type",
											"description": "The mime type of this content"
										},
										{
											"key": "Date",
											"value": "Tue, 21 Aug 2018 14:47:31 GMT",
											"name": "Date",
											"description": "The date and time that the message was sent"
										},
										{
											"key": "X-Response-Time",
											"value": "78ms",
											"name": "X-Response-Time",
											"description": "Custom header"
										}
									],
									"cookie": [],
									"body": "{\"extraLives\":11}"
								}
							]
						}
					],
					"description": "## Quiz Events\n\nApart from the HTTP API calls there are [Pusher](https://pusher.com) events with info about started quizzes and launched questions, etc. Since the quiz module relies on events being sent from pusher you must subscribe to the pusher-channel provided in the response of the [Get Target](#5810f0fe-7be7-6839-c4a7-307b2527777e) (pusher connection info) and [Get Stream](#aaa9244a-d56c-b2da-67df-3b63c36ae2b3) (the interaction channel id) calls.\n\nA typical quiz flow goes as follows:\n\n## Fetch the quiz config\n\nSee the [Get Quiz Config](#a72e8fb6-0e60-384f-8dd9-031c2a977c65) Http api call.\n\n## Quiz interaction enabled/disabled\n\nChannel: stream-{streamId}-quiz\n\nEvent: quiz-enable\n\n```\n{\n  \"enabled\": true\n}\n```\n\n## Quiz started\n\nChannel: stream-{streamId}-quiz\n\nEvent: quiz-update\n\n```\n{\n  \"createdAt\": \"2018-04-16T13:22:34.445Z\",\n  \"answerTime\": 1000,\n  \"streamId\": \"<streamId>\",\n  \"endedAt\": \"2018-04-16T13:22:37.696Z\",\n  \"description\": \"Test Trivia\",\n  \"startedAt\": \"2018-04-16T13:22:38.178Z\",\n  \"id\": \"d0cc2947-715a-4fda-83e7-a8fde8c484f9\",\n  \"title\": \"Test Quiz\",\n  \"status\": \"started\",\n  \"updatedAt\": \"2018-04-16T13:22:38.178Z\"\n}\n```\n\n## Quiz question started\n\nChannel: stream-{streamId}-quiz\n\nEvent: quiz-question\n\n```\n{\n  \"question\": {\n    \"createdAt\": \"2018-04-16T13:22:37.408Z\",\n    \"quizId\": \"d0cc2947-715a-4fda-83e7-a8fde8c484f9\",\n    \"answers\": [\n      {\n        \"id\": 0,\n        \"text\": \"Ex Machina\"\n      },\n      {\n        \"id\": 1,\n        \"text\": \"The Beach\"\n      },\n      {\n        \"id\": 2,\n        \"text\": \"Annihalation\"\n      }\n    ],\n    \"id\": \"73d22ba4-c774-4588-a9fc-68c98259b3cb\",\n    \"text\": \"What is Alex Garlands 2nd feature movie as a director?\",\n    \"launchedAt\": \"2018-04-16T13:22:45.196Z\",\n    \"locked\": false,\n    \"updatedAt\": \"2018-04-16T13:22:45.196Z\",\n    \"endpoint\": \"https://api.zender.tv/v1/channels/<channelId>/streams/<streamId>/quiz/<quizId>/question/<questionId>\"\n  }\n}\n```\n\n## Send quiz question answer\n\nSee the [Answer Question](#570b094f-261b-018e-1c42-8a888c000101) post call.\n\n## Quiz question results\n\nChannel: stream-{streamId}-quiz\n\nEvent: quiz-question-results\n\n```\n{\n  \"quizId\": \"d0cc2947-715a-4fda-83e7-a8fde8c484f9\",\n  \"questionId\": \"73d22ba4-c774-4588-a9fc-68c98259b3cb\",\n  \"results\": {\n    \"answers\": [\n      {\n        \"answer\": 0,\n        \"count\": 0\n      },\n      {\n        \"answer\": 1,\n        \"count\": 0\n      },\n      {\n        \"answer\": 2,\n        \"count\": 2\n      }\n    ],\n    \"correct\": [\n      2\n    ]\n  }\n}\n```\n\n## Quiz results\n\n\nChannel: stream-{streamId}-quiz\n\nEvent: quiz-results\n\n```\n{\n  \"quizId\": \"d0cc2947-715a-4fda-83e7-a8fde8c484f9\",\n  \"results\": {\n    \"winners\": [\n      {\n        \"id\": \"70db02a8-8de5-4a1c-9333-e667815a121e\",\n        \"name\": \"user-device\",\n        \"avatar\": \"https://cdn.zender.tv/live/uploads/6702e9ea-2b46-4487-8830-d713b32c7c5e/2017-11-09/eb37b0a3-d660-40cd-a1eb-7fe98cfdb3df.original.jpeg\",\n        \"externalId\": \"targetId_tN3CvpfotEXWemffaUrECwyp\"\n      }\n    ]\n  }\n}\n```\n\n## Quiz stopped\n\nChannel: stream-{streamId}-quiz\n\nEvent: quiz-update\n\n```\n{\n  \"id\": \"d0cc2947-715a-4fda-83e7-a8fde8c484f9\",\n  \"endedAt\": \"2018-04-16T13:22:44.561Z\",\n  \"status\": \"ended\"\n}\n```\n\n## Quiz reset\n\nChannel: stream-{streamId}-quiz\n\nEvent: quiz-reset\n\n\n```\n{\n  \"quizId\": \"d0cc2947-715a-4fda-83e7-a8fde8c484f9\"\n}\n```",
					"_postman_isSubFolder": true
				},
				{
					"name": "Teams",
					"item": [
						{
							"name": "Create Team",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "d7e62359-20b2-4abb-8280-960f58b29080",
										"exec": [
											"tests[\"Status code is 200\"] = responseCode.code === 200;",
											"var data = JSON.parse(responseBody);",
											"tests[\"Response has stream id\"] = data.id !== null;",
											"postman.setEnvironmentVariable(\"teamCode\", data.teamCode);",
											"postman.setEnvironmentVariable(\"teamId\", data.teamId);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{providerToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"name\": \"Small Town Heroes\",\n\t\"category\": \"Colleagues\",\n\t\"avatar\": \"https://static1.squarespace.com/static/5955fc221b631b7dd41ede60/t/59563d7b6b4998649f330b42/1559119093821\"\n}"
								},
								"url": {
									"raw": "{{teamsApiHost}}/v1/teams",
									"host": [
										"{{teamsApiHost}}"
									],
									"path": [
										"v1",
										"teams"
									]
								}
							},
							"response": [
								{
									"name": "Create Team Validation Errors",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"name\": true,\n\t\"category\": 6,\n\t\"avatar\": []\n}"
										},
										"url": {
											"raw": "{{teamsApiHost}}/v1/teams",
											"host": [
												"{{teamsApiHost}}"
											],
											"path": [
												"v1",
												"teams"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Date",
											"value": "Thu, 06 Jun 2019 15:27:18 GMT"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "289"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "Access-Control-Allow-Methods",
											"value": "GET,PUT,POST,DELETE"
										},
										{
											"key": "Access-Control-Allow-Headers",
											"value": "Content-Type, Authorization, Accept, Cache-Control, X-Requested-With"
										},
										{
											"key": "X-Response-Time",
											"value": "25ms"
										}
									],
									"cookie": [],
									"body": "{\n    \"code\": \"VALIDATION_ERROR\",\n    \"message\": \"3 errors occurred\",\n    \"name\": \"ValidationError\",\n    \"errors\": [\n        \"avatar must be a `string` type, but the final value was: `[]`.\",\n        \"name must be a `string` type, but the final value was: `true`.\",\n        \"category must be a `string` type, but the final value was: `6`.\"\n    ]\n}"
								},
								{
									"name": "Create Team Success",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"name\": \"Small Town Heroes\",\n\t\"category\": \"Colleagues\",\n\t\"avatar\": \"https://static1.squarespace.com/static/5955fc221b631b7dd41ede60/t/59563d7b6b4998649f330b42/1559119093821\"\n}"
										},
										"url": {
											"raw": "{{authApiHost}}/v1/teams",
											"host": [
												"{{authApiHost}}"
											],
											"path": [
												"v1",
												"teams"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Date",
											"value": "Thu, 06 Jun 2019 15:00:11 GMT"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "349"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "Access-Control-Allow-Methods",
											"value": "GET,PUT,POST,DELETE"
										},
										{
											"key": "Access-Control-Allow-Headers",
											"value": "Content-Type, Authorization, Accept, Cache-Control, X-Requested-With"
										},
										{
											"key": "X-Response-Time",
											"value": "286ms"
										}
									],
									"cookie": [],
									"body": "{\n    \"name\": \"Small Town Heroes\",\n    \"category\": \"Colleagues\",\n    \"avatar\": \"https://static1.squarespace.com/static/5955fc221b631b7dd41ede60/t/59563d7b6b4998649f330b42/1559119093821\",\n    \"id\": \"712abb65-b6b2-4d01-b2fd-09ed44a15d3d\",\n    \"admin\": {\n        \"id\": \"e81356dd-1502-400f-b216-da9d09eacd7d\",\n        \"username\": \"user-device2\",\n        \"name\": \"user-device\",\n        \"avatar\": \"https://cdn.zender.tv/assets/zender/default-avatar2.png\"\n    },\n    \"members\": [\n        {\n            \"id\": \"e81356dd-1502-400f-b216-da9d09eacd7d\",\n            \"username\": \"user-device2\",\n            \"name\": \"user-device\",\n            \"avatar\": \"https://cdn.zender.tv/assets/zender/default-avatar2.png\"\n        }\n    ],\n    \"teamCode\": \"37WGCG\",\n    \"createdAt\": \"2019-06-06T15:00:11.546Z\"\n}\n"
								},
								{
									"name": "Create Team Duplicate Team Name",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"name\": \"Small Town Heroes\",\n\t\"category\": \"Colleagues\",\n\t\"avatar\": \"https://static1.squarespace.com/static/5955fc221b631b7dd41ede60/t/59563d7b6b4998649f330b42/1559119093821\"\n}"
										},
										"url": {
											"raw": "{{teamsApiHost}}/v1/teams",
											"host": [
												"{{teamsApiHost}}"
											],
											"path": [
												"v1",
												"teams"
											]
										}
									},
									"status": "Conflict",
									"code": 409,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Date",
											"value": "Thu, 06 Jun 2019 15:06:14 GMT"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "89"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "Access-Control-Allow-Methods",
											"value": "GET,PUT,POST,DELETE"
										},
										{
											"key": "Access-Control-Allow-Headers",
											"value": "Content-Type, Authorization, Accept, Cache-Control, X-Requested-With"
										},
										{
											"key": "X-Response-Time",
											"value": "43ms"
										}
									],
									"cookie": [],
									"body": "{\n    \"code\": \"CONFLICT\",\n    \"message\": \"Team name already in use.\",\n    \"name\": \"DuplicateTeamNameError\"\n}"
								},
								{
									"name": "Create Team No Multiple Teams",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"name\": \"Small Town Heroes\",\n\t\"category\": \"Colleagues\",\n\t\"avatar\": \"https://static1.squarespace.com/static/5955fc221b631b7dd41ede60/t/59563d7b6b4998649f330b42/1559119093821\"\n}"
										},
										"url": {
											"raw": "{{authApiHost}}/v1/teams",
											"host": [
												"{{authApiHost}}"
											],
											"path": [
												"v1",
												"teams"
											]
										}
									},
									"status": "Conflict",
									"code": 409,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Date",
											"value": "Thu, 06 Jun 2019 15:01:06 GMT"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "93"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "Access-Control-Allow-Methods",
											"value": "GET,PUT,POST,DELETE"
										},
										{
											"key": "Access-Control-Allow-Headers",
											"value": "Content-Type, Authorization, Accept, Cache-Control, X-Requested-With"
										},
										{
											"key": "X-Response-Time",
											"value": "36ms"
										}
									],
									"cookie": [],
									"body": "{\n    \"code\": \"CONFLICT\",\n    \"message\": \"You can only be part of one team.\",\n    \"name\": \"MultipleTeamsError\"\n}"
								}
							]
						},
						{
							"name": "Get Team",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "bad65e7d-74bb-43a6-a2c0-92bd5ddb7c2c",
										"exec": [
											"tests[\"Status code is 200\"] = responseCode.code === 200;",
											"var data = JSON.parse(responseBody);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{providerToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{teamsApiHost}}/v1/teams/{{teamId}}",
									"host": [
										"{{teamsApiHost}}"
									],
									"path": [
										"v1",
										"teams",
										"{{teamId}}"
									]
								},
								"description": "Get your team.\n\n| Permissions | no token | anonymous token | provider token | admin token |\n| ----------- | :------: | :-------------: | :------------: | :---------: |\n| Get team    | -        | x               | x              | x           |"
							},
							"response": [
								{
									"name": "Get Team Success",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{teamsApiHost}}/v1/teams/{{teamId}}",
											"host": [
												"{{teamsApiHost}}"
											],
											"path": [
												"v1",
												"teams",
												"{{teamId}}"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Date",
											"value": "Thu, 06 Jun 2019 15:10:00 GMT"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "338"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "Access-Control-Allow-Methods",
											"value": "GET,PUT,POST,DELETE"
										},
										{
											"key": "Access-Control-Allow-Headers",
											"value": "Content-Type, Authorization, Accept, Cache-Control, X-Requested-With"
										},
										{
											"key": "X-Response-Time",
											"value": "73ms"
										}
									],
									"cookie": [],
									"body": "{\n    \"avatar\": \"https://static1.squarespace.com/static/5955fc221b631b7dd41ede60/t/59563d7b6b4998649f330b42/1559119093821\",\n    \"admin\": \"d5f8ed38-56fc-45e0-a7ce-f6196430a35c\",\n    \"members\": [\n        \"d5f8ed38-56fc-45e0-a7ce-f6196430a35c\"\n    ],\n    \"category\": \"Colleagues\",\n    \"createdAt\": \"2019-06-06T15:06:50.609Z\",\n    \"id\": \"a53b13c5-e595-45ed-921a-92d9b9644ff1\",\n    \"name\": \"Zender\"\n}"
								},
								{
									"name": "Get Team Unauthorized",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{teamsApiHost}}/v1/teams/{{teamId}}",
											"host": [
												"{{teamsApiHost}}"
											],
											"path": [
												"v1",
												"teams",
												"{{teamId}}"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Date",
											"value": "Thu, 06 Jun 2019 15:11:01 GMT"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "94"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "Access-Control-Allow-Methods",
											"value": "GET,PUT,POST,DELETE"
										},
										{
											"key": "Access-Control-Allow-Headers",
											"value": "Content-Type, Authorization, Accept, Cache-Control, X-Requested-With"
										},
										{
											"key": "X-Response-Time",
											"value": "1ms"
										}
									],
									"cookie": [],
									"body": "{\n    \"code\": \"UNAUTHORIZED\",\n    \"message\": \"This request is not authorized.\",\n    \"name\": \"UnauthorizedError\"\n}"
								},
								{
									"name": "Get Team Not Found Error",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{teamsApiHost}}/v1/teams/unknown",
											"host": [
												"{{teamsApiHost}}"
											],
											"path": [
												"v1",
												"teams",
												"unknown"
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Date",
											"value": "Thu, 06 Jun 2019 15:10:35 GMT"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "86"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "Access-Control-Allow-Methods",
											"value": "GET,PUT,POST,DELETE"
										},
										{
											"key": "Access-Control-Allow-Headers",
											"value": "Content-Type, Authorization, Accept, Cache-Control, X-Requested-With"
										},
										{
											"key": "X-Response-Time",
											"value": "40ms"
										}
									],
									"cookie": [],
									"body": "{\n    \"code\": \"NOT_FOUND\",\n    \"message\": \"No team found for id 'unknown'\",\n    \"name\": \"NotFoundError\"\n}"
								}
							]
						},
						{
							"name": "Update Team",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "bad65e7d-74bb-43a6-a2c0-92bd5ddb7c2c",
										"exec": [
											"tests[\"Status code is 200\"] = responseCode.code === 200;",
											"var data = JSON.parse(responseBody);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{providerToken}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"category\": \"Friends\",\n\t\"avatar\": \"https://m.media-amazon.com/images/M/MV5BNDVkYjU0MzctMWRmZi00NTkxLTgwZWEtOWVhYjZlYjllYmU4XkEyXkFqcGdeQXVyNTA4NzY1MzY@._V1_UY268_CR0,0,182,268_AL_.jpg\"\n}"
								},
								"url": {
									"raw": "{{teamsApiHost}}/v1/teams/{{teamId}}",
									"host": [
										"{{teamsApiHost}}"
									],
									"path": [
										"v1",
										"teams",
										"{{teamId}}"
									]
								},
								"description": "Get emojis config of a particular stream.\n\n| Permissions       | no token | anonymous token | provider token | admin token |\n| ----------------- | :------: | :-------------: | :------------: | :---------: |\n| Get Emojis Config | -        | x               | x              | x           |"
							},
							"response": [
								{
									"name": "Update Team Success",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"category\": \"Friends\",\n\t\"avatar\": \"https://m.media-amazon.com/images/M/MV5BNDVkYjU0MzctMWRmZi00NTkxLTgwZWEtOWVhYjZlYjllYmU4XkEyXkFqcGdeQXVyNTA4NzY1MzY@._V1_UY268_CR0,0,182,268_AL_.jpg\"\n}"
										},
										"url": {
											"raw": "{{teamsApiHost}}/v1/teams/{{teamId}}",
											"host": [
												"{{teamsApiHost}}"
											],
											"path": [
												"v1",
												"teams",
												"{{teamId}}"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Date",
											"value": "Thu, 06 Jun 2019 15:14:47 GMT"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "429"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "Access-Control-Allow-Methods",
											"value": "GET,PUT,POST,DELETE"
										},
										{
											"key": "Access-Control-Allow-Headers",
											"value": "Content-Type, Authorization, Accept, Cache-Control, X-Requested-With"
										},
										{
											"key": "X-Response-Time",
											"value": "62ms"
										}
									],
									"cookie": [],
									"body": "{\n    \"avatar\": \"https://m.media-amazon.com/images/M/MV5BNDVkYjU0MzctMWRmZi00NTkxLTgwZWEtOWVhYjZlYjllYmU4XkEyXkFqcGdeQXVyNTA4NzY1MzY@._V1_UY268_CR0,0,182,268_AL_.jpg\",\n    \"admin\": \"4d5e9a5f-de97-469d-bc09-0d2ad184e90a\",\n    \"updatedAt\": \"2019-06-06T15:14:47.290Z\",\n    \"members\": [\n        \"4d5e9a5f-de97-469d-bc09-0d2ad184e90a\"\n    ],\n    \"category\": \"Friends\",\n    \"createdAt\": \"2019-06-06T15:14:38.212Z\",\n    \"id\": \"a939c8ef-5a3d-461e-9abb-3e39f861e305\",\n    \"name\": \"Small Town Heroes\"\n}"
								},
								{
									"name": "Update Team Only Admin Can Update Team",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"category\": \"Friends\",\n\t\"avatar\": \"https://m.media-amazon.com/images/M/MV5BNDVkYjU0MzctMWRmZi00NTkxLTgwZWEtOWVhYjZlYjllYmU4XkEyXkFqcGdeQXVyNTA4NzY1MzY@._V1_UY268_CR0,0,182,268_AL_.jpg\"\n}"
										},
										"url": {
											"raw": "{{teamsApiHost}}/v1/teams/{{teamId}}",
											"host": [
												"{{teamsApiHost}}"
											],
											"path": [
												"v1",
												"teams",
												"{{teamId}}"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Date",
											"value": "Thu, 06 Jun 2019 15:33:33 GMT"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "96"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "Access-Control-Allow-Methods",
											"value": "GET,PUT,POST,DELETE"
										},
										{
											"key": "Access-Control-Allow-Headers",
											"value": "Content-Type, Authorization, Accept, Cache-Control, X-Requested-With"
										},
										{
											"key": "X-Response-Time",
											"value": "46ms"
										}
									],
									"cookie": [],
									"body": "{\n    \"code\": \"UNAUTHORIZED\",\n    \"message\": \"Only the admin can update a team.\",\n    \"name\": \"UnauthorizedError\"\n}"
								},
								{
									"name": "Update Team Validation Error",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"category\": 1,\n\t\"avatar\": 2\n}"
										},
										"url": {
											"raw": "{{teamsApiHost}}/v1/teams/{{teamId}}",
											"host": [
												"{{teamsApiHost}}"
											],
											"path": [
												"v1",
												"teams",
												"{{teamId}}"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Date",
											"value": "Thu, 06 Jun 2019 15:15:51 GMT"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "223"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "Access-Control-Allow-Methods",
											"value": "GET,PUT,POST,DELETE"
										},
										{
											"key": "Access-Control-Allow-Headers",
											"value": "Content-Type, Authorization, Accept, Cache-Control, X-Requested-With"
										},
										{
											"key": "X-Response-Time",
											"value": "26ms"
										}
									],
									"cookie": [],
									"body": "{\n    \"code\": \"VALIDATION_ERROR\",\n    \"message\": \"2 errors occurred\",\n    \"name\": \"ValidationError\",\n    \"errors\": [\n        \"avatar must be a `string` type, but the final value was: `2`.\",\n        \"category must be a `string` type, but the final value was: `1`.\"\n    ]\n}"
								}
							]
						},
						{
							"name": "Delete Team",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "bad65e7d-74bb-43a6-a2c0-92bd5ddb7c2c",
										"exec": [
											"tests[\"Status code is 200\"] = responseCode.code === 200;",
											"var data = JSON.parse(responseBody);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{providerToken}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{teamsApiHost}}/v1/teams/{{teamId}}",
									"host": [
										"{{teamsApiHost}}"
									],
									"path": [
										"v1",
										"teams",
										"{{teamId}}"
									]
								},
								"description": "Get emojis config of a particular stream.\n\n| Permissions       | no token | anonymous token | provider token | admin token |\n| ----------------- | :------: | :-------------: | :------------: | :---------: |\n| Get Emojis Config | -        | x               | x              | x           |"
							},
							"response": [
								{
									"name": "Delete Team Only Admin Can Delete Error",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{teamsApiHost}}/v1/teams/{{teamId}}",
											"host": [
												"{{teamsApiHost}}"
											],
											"path": [
												"v1",
												"teams",
												"{{teamId}}"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Date",
											"value": "Thu, 06 Jun 2019 15:32:22 GMT"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "96"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "Access-Control-Allow-Methods",
											"value": "GET,PUT,POST,DELETE"
										},
										{
											"key": "Access-Control-Allow-Headers",
											"value": "Content-Type, Authorization, Accept, Cache-Control, X-Requested-With"
										},
										{
											"key": "X-Response-Time",
											"value": "53ms"
										}
									],
									"cookie": [],
									"body": "{\n    \"code\": \"UNAUTHORIZED\",\n    \"message\": \"Only the admin can delete a team.\",\n    \"name\": \"UnauthorizedError\"\n}"
								},
								{
									"name": "Delete Team Success",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{teamsApiHost}}/v1/teams/{{teamId}}",
											"host": [
												"{{teamsApiHost}}"
											],
											"path": [
												"v1",
												"teams",
												"{{teamId}}"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Date",
											"value": "Thu, 06 Jun 2019 15:31:29 GMT"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "2"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "Access-Control-Allow-Methods",
											"value": "GET,PUT,POST,DELETE"
										},
										{
											"key": "Access-Control-Allow-Headers",
											"value": "Content-Type, Authorization, Accept, Cache-Control, X-Requested-With"
										},
										{
											"key": "X-Response-Time",
											"value": "108ms"
										}
									],
									"cookie": [],
									"body": "{}"
								},
								{
									"name": "Delete Team Not Found Error",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{teamsApiHost}}/v1/teams/{{teamId}}",
											"host": [
												"{{teamsApiHost}}"
											],
											"path": [
												"v1",
												"teams",
												"{{teamId}}"
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Date",
											"value": "Thu, 06 Jun 2019 15:29:30 GMT"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "115"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "Access-Control-Allow-Methods",
											"value": "GET,PUT,POST,DELETE"
										},
										{
											"key": "Access-Control-Allow-Headers",
											"value": "Content-Type, Authorization, Accept, Cache-Control, X-Requested-With"
										},
										{
											"key": "X-Response-Time",
											"value": "44ms"
										}
									],
									"cookie": [],
									"body": "{\n    \"code\": \"NOT_FOUND\",\n    \"message\": \"No team found for id 'a853efc4-51f9-465b-b229-dd46d4ff1332'\",\n    \"name\": \"NotFoundError\"\n}"
								}
							]
						},
						{
							"name": "Join Team",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "d7e62359-20b2-4abb-8280-960f58b29080",
										"exec": [
											"tests[\"Status code is 200\"] = responseCode.code === 200;",
											"var data = JSON.parse(responseBody);",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{providerToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"teamCode\": \"{{teamCode}}\"\n}"
								},
								"url": {
									"raw": "{{teamsApiHost}}/v1/teams/join",
									"host": [
										"{{teamsApiHost}}"
									],
									"path": [
										"v1",
										"teams",
										"join"
									]
								}
							},
							"response": [
								{
									"name": "Join Team Maximum Capacity Error",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"teamCode\": \"{{teamCode}}\"\n}"
										},
										"url": {
											"raw": "{{teamsApiHost}}/v1/teams/join",
											"host": [
												"{{teamsApiHost}}"
											],
											"path": [
												"v1",
												"teams",
												"join"
											]
										}
									},
									"status": "Conflict",
									"code": 409,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Date",
											"value": "Thu, 06 Jun 2019 15:24:19 GMT"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "117"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "Access-Control-Allow-Methods",
											"value": "GET,PUT,POST,DELETE"
										},
										{
											"key": "Access-Control-Allow-Headers",
											"value": "Content-Type, Authorization, Accept, Cache-Control, X-Requested-With"
										},
										{
											"key": "X-Response-Time",
											"value": "44ms"
										}
									],
									"cookie": [],
									"body": "{\n    \"code\": \"CONFLICT\",\n    \"message\": \"You cannot join a team that is at maximum capacity (5).\",\n    \"name\": \"MaximumCapacityError\"\n}"
								},
								{
									"name": "Join Team Not Found",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"teamCode\": \"unknow\"\n}"
										},
										"url": {
											"raw": "{{teamsApiHost}}/v1/teams/join",
											"host": [
												"{{teamsApiHost}}"
											],
											"path": [
												"v1",
												"teams",
												"join"
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Date",
											"value": "Tue, 11 Jun 2019 14:06:40 GMT"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "88"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "Access-Control-Allow-Methods",
											"value": "GET,PUT,POST,DELETE"
										},
										{
											"key": "Access-Control-Allow-Headers",
											"value": "Content-Type, Authorization, Accept, Cache-Control, X-Requested-With"
										},
										{
											"key": "X-Response-Time",
											"value": "52ms"
										}
									],
									"cookie": [],
									"body": "{\n    \"code\": \"NOT_FOUND\",\n    \"message\": \"No team found with code 'unknow'\",\n    \"name\": \"NotFoundError\"\n}"
								},
								{
									"name": "Join Team Validation Error",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"teamCode\": \"1\"\n}"
										},
										"url": {
											"raw": "{{teamsApiHost}}/v1/teams/join",
											"host": [
												"{{teamsApiHost}}"
											],
											"path": [
												"v1",
												"teams",
												"join"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Date",
											"value": "Tue, 11 Jun 2019 14:16:01 GMT"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "198"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "Access-Control-Allow-Methods",
											"value": "GET,PUT,POST,DELETE"
										},
										{
											"key": "Access-Control-Allow-Headers",
											"value": "Content-Type, Authorization, Accept, Cache-Control, X-Requested-With"
										},
										{
											"key": "X-Response-Time",
											"value": "41ms"
										}
									],
									"cookie": [],
									"body": "{\n    \"code\": \"VALIDATION_ERROR\",\n    \"message\": \"teamCode must be at least 6 characters\",\n    \"name\": \"ValidationError\",\n    \"errors\": [\n        {\n            \"path\": \"teamCode\",\n            \"type\": \"min\",\n            \"message\": \"teamCode must be at least 6 characters\"\n        }\n    ]\n}"
								},
								{
									"name": "Join Team Already Joined Another Team",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"teamCode\": \"{{teamCode}}\"\n}"
										},
										"url": {
											"raw": "{{teamsApiHost}}/v1/teams/join",
											"host": [
												"{{teamsApiHost}}"
											],
											"path": [
												"v1",
												"teams",
												"join"
											]
										}
									},
									"status": "Conflict",
									"code": 409,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Date",
											"value": "Thu, 06 Jun 2019 15:17:51 GMT"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "93"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "Access-Control-Allow-Methods",
											"value": "GET,PUT,POST,DELETE"
										},
										{
											"key": "Access-Control-Allow-Headers",
											"value": "Content-Type, Authorization, Accept, Cache-Control, X-Requested-With"
										},
										{
											"key": "X-Response-Time",
											"value": "26ms"
										}
									],
									"cookie": [],
									"body": "{\n    \"code\": \"CONFLICT\",\n    \"message\": \"You can only be part of one team.\",\n    \"name\": \"MultipleTeamsError\"\n}"
								},
								{
									"name": "Join Team Success",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"teamCode\": \"{{teamCode}}\"\n}"
										},
										"url": {
											"raw": "{{teamsApiHost}}/v1/teams/join",
											"host": [
												"{{teamsApiHost}}"
											],
											"path": [
												"v1",
												"teams",
												"join"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Date",
											"value": "Thu, 06 Jun 2019 15:21:00 GMT"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "468"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "Access-Control-Allow-Methods",
											"value": "GET,PUT,POST,DELETE"
										},
										{
											"key": "Access-Control-Allow-Headers",
											"value": "Content-Type, Authorization, Accept, Cache-Control, X-Requested-With"
										},
										{
											"key": "X-Response-Time",
											"value": "66ms"
										}
									],
									"cookie": [],
									"body": "{\n    \"avatar\": \"https://m.media-amazon.com/images/M/MV5BNDVkYjU0MzctMWRmZi00NTkxLTgwZWEtOWVhYjZlYjllYmU4XkEyXkFqcGdeQXVyNTA4NzY1MzY@._V1_UY268_CR0,0,182,268_AL_.jpg\",\n    \"admin\": \"4d5e9a5f-de97-469d-bc09-0d2ad184e90a\",\n    \"updatedAt\": \"2019-06-06T15:21:00.183Z\",\n    \"members\": [\n        \"4d5e9a5f-de97-469d-bc09-0d2ad184e90a\",\n        \"b7add6bc-9f74-4248-938b-96d5e8d7a60b\"\n    ],\n    \"category\": \"Friends\",\n    \"createdAt\": \"2019-06-06T15:14:38.212Z\",\n    \"id\": \"a939c8ef-5a3d-461e-9abb-3e39f861e305\",\n    \"name\": \"Small Town Heroes\",\n    \"teamCode\": \"TEC0DE\"\n}"
								}
							]
						},
						{
							"name": "Leave Team",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "d7e62359-20b2-4abb-8280-960f58b29080",
										"exec": [
											"tests[\"Status code is 200\"] = responseCode.code === 200;",
											"var data = JSON.parse(responseBody);",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{providerToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{}"
								},
								"url": {
									"raw": "{{teamsApiHost}}/v1/teams/leave",
									"host": [
										"{{teamsApiHost}}"
									],
									"path": [
										"v1",
										"teams",
										"leave"
									]
								}
							},
							"response": [
								{
									"name": "Leave Team Success",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{}"
										},
										"url": {
											"raw": "{{teamsApiHost}}/v1/teams/leave",
											"host": [
												"{{teamsApiHost}}"
											],
											"path": [
												"v1",
												"teams",
												"leave"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Date",
											"value": "Thu, 06 Jun 2019 15:21:58 GMT"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "429"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "Access-Control-Allow-Methods",
											"value": "GET,PUT,POST,DELETE"
										},
										{
											"key": "Access-Control-Allow-Headers",
											"value": "Content-Type, Authorization, Accept, Cache-Control, X-Requested-With"
										},
										{
											"key": "X-Response-Time",
											"value": "77ms"
										}
									],
									"cookie": [],
									"body": "{\n    \"avatar\": \"https://m.media-amazon.com/images/M/MV5BNDVkYjU0MzctMWRmZi00NTkxLTgwZWEtOWVhYjZlYjllYmU4XkEyXkFqcGdeQXVyNTA4NzY1MzY@._V1_UY268_CR0,0,182,268_AL_.jpg\",\n    \"admin\": \"4d5e9a5f-de97-469d-bc09-0d2ad184e90a\",\n    \"updatedAt\": \"2019-06-06T15:21:58.734Z\",\n    \"members\": [\n        \"4d5e9a5f-de97-469d-bc09-0d2ad184e90a\"\n    ],\n    \"category\": \"Friends\",\n    \"createdAt\": \"2019-06-06T15:14:38.212Z\",\n    \"id\": \"a939c8ef-5a3d-461e-9abb-3e39f861e305\",\n    \"name\": \"Small Town Heroes\"\n}"
								}
							]
						},
						{
							"name": "Delegate Team",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "d7e62359-20b2-4abb-8280-960f58b29080",
										"exec": [
											"tests[\"Status code is 200\"] = responseCode.code === 200;",
											"var data = JSON.parse(responseBody);",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{providerToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"adminId\": \"{{adminId}}\"\n}"
								},
								"url": {
									"raw": "{{teamsApiHost}}/v1/teams/delegate",
									"host": [
										"{{teamsApiHost}}"
									],
									"path": [
										"v1",
										"teams",
										"delegate"
									]
								},
								"description": "Delegate the admin rights to another member of the team. This can only be performed by the current admin of the team and only to a current member of the admin's team."
							},
							"response": [
								{
									"name": "Delegate Team No Team Admin Error",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"adminId\": \"74b91201-9350-4af4-b04e-d2c2fcf37fe8\"\n}"
										},
										"url": {
											"raw": "{{teamsApiHost}}/v1/teams/delegate",
											"host": [
												"{{teamsApiHost}}"
											],
											"path": [
												"v1",
												"teams",
												"delegate"
											]
										}
									},
									"status": "Conflict",
									"code": 409,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Date",
											"value": "Thu, 13 Jun 2019 09:10:27 GMT"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "120"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "Access-Control-Allow-Methods",
											"value": "GET,PUT,POST,DELETE"
										},
										{
											"key": "Access-Control-Allow-Headers",
											"value": "Content-Type, Authorization, Accept, Cache-Control, X-Requested-With"
										},
										{
											"key": "X-Response-Time",
											"value": "55ms"
										}
									],
									"cookie": [],
									"body": "{\n    \"code\": \"CONFLICT\",\n    \"message\": \"You cannot delegate your admin rights if you are not an admin.\",\n    \"name\": \"NoTeamAdminError\"\n}"
								},
								{
									"name": "Delegate Team Success",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"adminId\": \"4fb7b6fa-6ae2-47b3-be63-3c6237eb08ac\"\n}"
										},
										"url": {
											"raw": "{{teamsApiHost}}/v1/teams/delegate",
											"host": [
												"{{teamsApiHost}}"
											],
											"path": [
												"v1",
												"teams",
												"delegate"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Date",
											"value": "Thu, 13 Jun 2019 09:12:32 GMT"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "811"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "Access-Control-Allow-Methods",
											"value": "GET,PUT,POST,DELETE"
										},
										{
											"key": "Access-Control-Allow-Headers",
											"value": "Content-Type, Authorization, Accept, Cache-Control, X-Requested-With"
										},
										{
											"key": "X-Response-Time",
											"value": "77ms"
										}
									],
									"cookie": [],
									"body": "{\n    \"avatar\": \"https://static1.squarespace.com/static/5955fc221b631b7dd41ede60/t/59563d7b6b4998649f330b42/1559119093821\",\n    \"teamCode\": \"8LP0K0\",\n    \"admin\": {\n        \"id\": \"4fb7b6fa-6ae2-47b3-be63-3c6237eb08ac\",\n        \"username\": \"user-device12\",\n        \"name\": \"user-device\",\n        \"avatar\": \"https://cdn.zender.tv/assets/zender/default-avatar2.png\"\n    },\n    \"updatedAt\": \"2019-06-13T09:12:32.338Z\",\n    \"members\": [\n        {\n            \"id\": \"2126711e-8ab1-48cc-9658-f56e3e58348f\",\n            \"username\": \"user-device19\",\n            \"name\": \"user-device\",\n            \"avatar\": \"https://cdn.zender.tv/assets/zender/default-avatar2.png\"\n        },\n        {\n            \"id\": \"4fb7b6fa-6ae2-47b3-be63-3c6237eb08ac\",\n            \"username\": \"user-device12\",\n            \"name\": \"user-device\",\n            \"avatar\": \"https://cdn.zender.tv/assets/zender/default-avatar2.png\"\n        }\n    ],\n    \"category\": \"Colleagues\",\n    \"createdAt\": \"2019-06-13T09:11:20.733Z\",\n    \"id\": \"02192059-568c-4e3d-ae1a-b2b5c82d8f6e\",\n    \"name\": \"Delegate Team 2\"\n}"
								},
								{
									"name": "Delegate Team Not Part Of A Team Error",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"adminId\": \"dfb7b6fa-6ae2-47b3-be63-3c6237eb08ac\"\n}"
										},
										"url": {
											"raw": "{{teamsApiHost}}/v1/teams/delegate",
											"host": [
												"{{teamsApiHost}}"
											],
											"path": [
												"v1",
												"teams",
												"delegate"
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Date",
											"value": "Thu, 13 Jun 2019 09:14:21 GMT"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "93"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "Access-Control-Allow-Methods",
											"value": "GET,PUT,POST,DELETE"
										},
										{
											"key": "Access-Control-Allow-Headers",
											"value": "Content-Type, Authorization, Accept, Cache-Control, X-Requested-With"
										},
										{
											"key": "X-Response-Time",
											"value": "45ms"
										}
									],
									"cookie": [],
									"body": "{\n    \"code\": \"NOT_FOUND\",\n    \"message\": \"You are currently not part of a team.\",\n    \"name\": \"NotFoundError\"\n}"
								},
								{
									"name": "Delegate Team Not A Member Error",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"adminId\": \"dfb7b6fa-6ae2-47b3-be63-3c6237eb08ac\"\n}"
										},
										"url": {
											"raw": "{{teamsApiHost}}/v1/teams/delegate",
											"host": [
												"{{teamsApiHost}}"
											],
											"path": [
												"v1",
												"teams",
												"delegate"
											]
										}
									},
									"status": "Conflict",
									"code": 409,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Date",
											"value": "Thu, 13 Jun 2019 09:13:19 GMT"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "138"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "Access-Control-Allow-Methods",
											"value": "GET,PUT,POST,DELETE"
										},
										{
											"key": "Access-Control-Allow-Headers",
											"value": "Content-Type, Authorization, Accept, Cache-Control, X-Requested-With"
										},
										{
											"key": "X-Response-Time",
											"value": "196ms"
										}
									],
									"cookie": [],
									"body": "{\n    \"code\": \"CONFLICT\",\n    \"message\": \"The user to which your admin rights will be delegated is not member of your team.\",\n    \"name\": \"NotAMemberError\"\n}"
								}
							]
						},
						{
							"name": "Remove Team Member",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "d7e62359-20b2-4abb-8280-960f58b29080",
										"exec": [
											"tests[\"Status code is 200\"] = responseCode.code === 200;",
											"var data = JSON.parse(responseBody);",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{providerToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n}"
								},
								"url": {
									"raw": "{{teamsApiHost}}/v1/teams/removeMember/{{memberId}}",
									"host": [
										"{{teamsApiHost}}"
									],
									"path": [
										"v1",
										"teams",
										"removeMember",
										"{{memberId}}"
									]
								},
								"description": "Delegate the admin rights to another member of the team. This can only be performed by the current admin of the team and only to a current member of the admin's team."
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				}
			],
			"description": "The player API contains the calls that are necessary to obtain the various domain elements (eg. target, channel, stream and interactions) to view and interact with a stream.\n\nA typical flow for starting the Zender Player goes as follows:\n\n\t- Get the target and select a channel\n\t- Get the channel and select a stream\n\t- Get the interaction configs (Media, Emojis, Shoutbox, Polls, Quiz)\n\t- Receive events and post data (send emojis or shouts, cast poll vote or answer a quiz question)"
		},
		{
			"name": "Admin",
			"item": [
				{
					"name": "Core",
					"item": [
						{
							"name": "Accounts",
							"item": [
								{
									"name": "Admin Token Login",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code is 200\"] = responseCode.code === 200;",
													"var data = JSON.parse(responseBody);",
													"tests[\"Response has token\"] = data.token !== null;",
													"postman.setEnvironmentVariable(\"adminToken\", data.token);",
													"postman.setEnvironmentVariable(\"adminUserId\", data.user.id);"
												]
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"userId\": \"{{adminUser}}\",\n  \"password\": \"{{adminPassword}}\"\n}"
										},
										"url": {
											"raw": "{{authApiHost}}/v1/auth/login",
											"host": [
												"{{authApiHost}}"
											],
											"path": [
												"v1",
												"auth",
												"login"
											]
										},
										"description": "Login by retrieving an admin bearer token.\n\nThe \"userId\" and \"password\" attributes in the request are mandatory.\n\nAll subsequent admin calls must send this bearer token in the \"Authorization\"-header."
									},
									"response": [
										{
											"name": "Admin Token Login (success)",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"userId\": \"{{adminUser}}\",\n  \"password\": \"{{adminPassword}}\"\n}"
												},
												"url": {
													"raw": "{{authApiHost}}/v1/auth/login",
													"host": [
														"{{authApiHost}}"
													],
													"path": [
														"v1",
														"auth",
														"login"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Headers",
													"value": "Content-Type, Authorization, Accept, Cache-Control, X-Requested-With",
													"name": "Access-Control-Allow-Headers",
													"description": "Used in response to a preflight request to indicate which HTTP headers can be used when making the actual request."
												},
												{
													"key": "Access-Control-Allow-Methods",
													"value": "GET,PUT,POST,DELETE",
													"name": "Access-Control-Allow-Methods",
													"description": "Specifies the method or methods allowed when accessing the resource. This is used in response to a preflight request."
												},
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*",
													"name": "Access-Control-Allow-Origin",
													"description": "Specifies a URI that may access the resource. For requests without credentials, the server may specify '*' as a wildcard, thereby allowing any origin to access the resource."
												},
												{
													"key": "Connection",
													"value": "keep-alive",
													"name": "Connection",
													"description": "Options that are desired for the connection"
												},
												{
													"key": "Content-Length",
													"value": "470",
													"name": "Content-Length",
													"description": "The length of the response body in octets (8-bit bytes)"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8",
													"name": "Content-Type",
													"description": "The mime type of this content"
												},
												{
													"key": "Date",
													"value": "Tue, 28 Nov 2017 13:53:54 GMT",
													"name": "Date",
													"description": "The date and time that the message was sent"
												},
												{
													"key": "X-Response-Time",
													"value": "137ms",
													"name": "X-Response-Time",
													"description": "Custom header"
												}
											],
											"cookie": [],
											"body": "{\"token\":\"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...\",\"user\":{\"authenticated\":true,\"createdAt\":\"2017-11-28T13:53:25.245Z\",\"lastLogin\":\"2017-11-28T13:53:54.473Z\",\"role\":\"admin\",\"targetId\":\"b8f99a0c-1383-4891-af7a-563b5903d390\",\"id\":\"zender-api\",\"updatedAt\":\"2017-11-28T13:53:54.473Z\"}}"
										},
										{
											"name": "Admin Token Login (user not found)",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json",
														"disabled": false
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"userId\": \"{{adminUser}}\",\n  \"password\": \"{{adminPassword}}\"\n}"
												},
												"url": {
													"raw": "{{authApiHost}}/v1/auth/login",
													"host": [
														"{{authApiHost}}"
													],
													"path": [
														"v1",
														"auth",
														"login"
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Credentials",
													"value": "true",
													"name": "Access-Control-Allow-Credentials",
													"description": "Indicates whether or not the response to the request can be exposed when the credentials flag is true. When used as part of a response to a preflight request, this indicates whether or not the actual request can be made using credentials."
												},
												{
													"key": "Access-Control-Allow-Headers",
													"value": "Content-Type, Authorization, Accept, Cache-Control, X-Requested-With, Origin",
													"name": "Access-Control-Allow-Headers",
													"description": "Used in response to a preflight request to indicate which HTTP headers can be used when making the actual request."
												},
												{
													"key": "Access-Control-Allow-Methods",
													"value": "GET,PUT,POST,DELETE",
													"name": "Access-Control-Allow-Methods",
													"description": "Specifies the method or methods allowed when accessing the resource. This is used in response to a preflight request."
												},
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*",
													"name": "Access-Control-Allow-Origin",
													"description": "Specifies a URI that may access the resource. For requests without credentials, the server may specify '*' as a wildcard, thereby allowing any origin to access the resource."
												},
												{
													"key": "Connection",
													"value": "keep-alive",
													"name": "Connection",
													"description": "Options that are desired for the connection"
												},
												{
													"key": "Content-Length",
													"value": "47",
													"name": "Content-Length",
													"description": "The length of the response body in octets (8-bit bytes)"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8",
													"name": "Content-Type",
													"description": "The mime type of this content"
												},
												{
													"key": "Date",
													"value": "Tue, 17 Apr 2018 14:56:55 GMT",
													"name": "Date",
													"description": "The date and time that the message was sent"
												},
												{
													"key": "X-Response-Time",
													"value": "19ms",
													"name": "X-Response-Time",
													"description": "Custom header"
												}
											],
											"cookie": [],
											"body": "{\"code\":\"NOT_FOUND\",\"message\":\"User not found\"}"
										}
									]
								},
								{
									"name": "Create VIP Users",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "1a5e1ab2-214d-4978-bec0-963b6ea40d79",
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code is 200\"] = responseCode.code === 200;",
													"var data = JSON.parse(responseBody);",
													"tests[\"Response has a user id\"] = data[0].id !== null;"
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{adminToken}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\n\t{\n\t\t\"name\": \"Very Important Person\",\n\t\t\"avatar\": \"https://www.example.com/vip.jpg\",\n\t\t\"streamId\": \"28d150e5-c720-4cb8-b028-944b960cc756\"\n\t}\n]"
										},
										"url": {
											"raw": "{{authApiHost}}/v1/auth/users/vip",
											"host": [
												"{{authApiHost}}"
											],
											"path": [
												"v1",
												"auth",
												"users",
												"vip"
											]
										},
										"description": "A VIP user is a user that is associated with a stream and can be used by an admin user to impersonate this VIP user while shouting a message. See the \"Send Shoutbox Message On Behalf Of\" example of the [Send Shoutbox User Message](#fff94289-ecdf-4ee3-97bd-775444f55430) on how to use a VIP user."
									},
									"response": [
										{
											"name": "Create VIP Users (validation error)",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json",
														"disabled": false
													}
												],
												"body": {
													"mode": "raw",
													"raw": "[\n\t{\n\t\t\"name\": \"Very Important Person\",\n\t\t\"avatar\": \"https://www.example.com/vip.jpg\",\n\t\t\"streamId\": \"28d150e5-c720-4cb8-b028-944b960cc756\"\n\t}\n]"
												},
												"url": {
													"raw": "{{authApiHost}}/v1/auth/users/vip",
													"host": [
														"{{authApiHost}}"
													],
													"path": [
														"v1",
														"auth",
														"users",
														"vip"
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Credentials",
													"value": "true",
													"name": "Access-Control-Allow-Credentials",
													"description": "Indicates whether or not the response to the request can be exposed when the credentials flag is true. When used as part of a response to a preflight request, this indicates whether or not the actual request can be made using credentials."
												},
												{
													"key": "Access-Control-Allow-Headers",
													"value": "Content-Type, Authorization, Accept, Cache-Control, X-Requested-With, Origin",
													"name": "Access-Control-Allow-Headers",
													"description": "Used in response to a preflight request to indicate which HTTP headers can be used when making the actual request."
												},
												{
													"key": "Access-Control-Allow-Methods",
													"value": "GET,PUT,POST,DELETE",
													"name": "Access-Control-Allow-Methods",
													"description": "Specifies the method or methods allowed when accessing the resource. This is used in response to a preflight request."
												},
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*",
													"name": "Access-Control-Allow-Origin",
													"description": "Specifies a URI that may access the resource. For requests without credentials, the server may specify '*' as a wildcard, thereby allowing any origin to access the resource."
												},
												{
													"key": "Connection",
													"value": "keep-alive",
													"name": "Connection",
													"description": "Options that are desired for the connection"
												},
												{
													"key": "Content-Length",
													"value": "192",
													"name": "Content-Length",
													"description": "The length of the response body in octets (8-bit bytes)"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8",
													"name": "Content-Type",
													"description": "The mime type of this content"
												},
												{
													"key": "Date",
													"value": "Tue, 17 Apr 2018 15:00:01 GMT",
													"name": "Date",
													"description": "The date and time that the message was sent"
												},
												{
													"key": "X-Response-Time",
													"value": "3ms",
													"name": "X-Response-Time",
													"description": "Custom header"
												}
											],
											"cookie": [],
											"body": "{\"code\":\"VALIDATION_ERROR\",\"message\":[{\"selector\":\"name\",\"tip\":\"name is mandatory.\"},{\"selector\":\"avatar\",\"tip\":\"avatar is mandatory.\"},{\"selector\":\"streamId\",\"tip\":\"streamId is mandatory.\"}]}"
										},
										{
											"name": "Create VIP Users (success)",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "[\n\t{\n\t\t\"name\": \"Very Important Person\",\n\t\t\"avatar\": \"https://www.example.com/vip.jpg\",\n\t\t\"streamId\": \"28d150e5-c720-4cb8-b028-944b960cc756\"\n\t}\n]"
												},
												"url": {
													"raw": "{{authApiHost}}/v1/auth/users/vip",
													"host": [
														"{{authApiHost}}"
													],
													"path": [
														"v1",
														"auth",
														"users",
														"vip"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Credentials",
													"value": "true",
													"name": "Access-Control-Allow-Credentials",
													"description": "Indicates whether or not the response to the request can be exposed when the credentials flag is true. When used as part of a response to a preflight request, this indicates whether or not the actual request can be made using credentials."
												},
												{
													"key": "Access-Control-Allow-Headers",
													"value": "Content-Type, Authorization, Accept, Cache-Control, X-Requested-With, Origin",
													"name": "Access-Control-Allow-Headers",
													"description": "Used in response to a preflight request to indicate which HTTP headers can be used when making the actual request."
												},
												{
													"key": "Access-Control-Allow-Methods",
													"value": "GET,PUT,POST,DELETE",
													"name": "Access-Control-Allow-Methods",
													"description": "Specifies the method or methods allowed when accessing the resource. This is used in response to a preflight request."
												},
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*",
													"name": "Access-Control-Allow-Origin",
													"description": "Specifies a URI that may access the resource. For requests without credentials, the server may specify '*' as a wildcard, thereby allowing any origin to access the resource."
												},
												{
													"key": "Connection",
													"value": "keep-alive",
													"name": "Connection",
													"description": "Options that are desired for the connection"
												},
												{
													"key": "Content-Length",
													"value": "296",
													"name": "Content-Length",
													"description": "The length of the response body in octets (8-bit bytes)"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8",
													"name": "Content-Type",
													"description": "The mime type of this content"
												},
												{
													"key": "Date",
													"value": "Mon, 12 Feb 2018 10:58:48 GMT",
													"name": "Date",
													"description": "The date and time that the message was sent"
												},
												{
													"key": "X-Response-Time",
													"value": "38ms",
													"name": "X-Response-Time",
													"description": "Custom header"
												}
											],
											"cookie": [],
											"body": "[{\"name\":\"Very Important Person\",\"avatar\":\"https://www.example.com/vip.jpg\",\"streamId\":\"28d150e5-c720-4cb8-b028-944b960cc756\",\"targetId\":\"413b6c52-90c4-436c-8641-691afd7085d9\",\"role\":\"admin\",\"authenticated\":true,\"id\":\"d82f3ba5-0385-4fc0-ac2d-c04527163889\",\"createdAt\":\"2018-02-12T10:58:48.159Z\"}]"
										}
									]
								},
								{
									"name": "Create API token",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "1a5e1ab2-214d-4978-bec0-963b6ea40d79",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{adminToken}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{}"
										},
										"url": {
											"raw": "{{authApiHost}}/v1/auth/apitokens",
											"host": [
												"{{authApiHost}}"
											],
											"path": [
												"v1",
												"auth",
												"apitokens"
											]
										},
										"description": "An api token has the same rights as an admin user, but is intended for api access. Each programmatic access should use its own api token."
									},
									"response": []
								},
								{
									"name": "Get list of API token users",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "1a5e1ab2-214d-4978-bec0-963b6ea40d79",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{adminToken}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{}"
										},
										"url": {
											"raw": "{{authApiHost}}/v1/auth/apitokens",
											"host": [
												"{{authApiHost}}"
											],
											"path": [
												"v1",
												"auth",
												"apitokens"
											]
										},
										"description": "An api token has the same rights as an admin user, but is intended for api access. Each programmatic access should use its own api token."
									},
									"response": []
								},
								{
									"name": "Disable an api token",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "1a5e1ab2-214d-4978-bec0-963b6ea40d79",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{adminToken}}",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"tokenId\": \"apiUser_d92780eb-05d1-47cc-8265-a9180bb21a4e\"\n}"
										},
										"url": {
											"raw": "{{authApiHost}}/v1/auth/apitokens",
											"host": [
												"{{authApiHost}}"
											],
											"path": [
												"v1",
												"auth",
												"apitokens"
											]
										},
										"description": "An api token has the same rights as an admin user, but is intended for api access. Each programmatic access should use its own api token."
									},
									"response": []
								},
								{
									"name": "Update Admin User",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code is 200\"] = responseCode.code === 200;",
													"var data = JSON.parse(responseBody);",
													"tests[\"Response has stream id\"] = data.id !== null;",
													"postman.setEnvironmentVariable(\"streamId\", data.id);"
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{adminToken}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"email\": \"someone@somewhereelse.com\"\n}"
										},
										"url": {
											"raw": "{{authApiHost}}/v1/auth/users/{{adminUserId}}",
											"host": [
												"{{authApiHost}}"
											],
											"path": [
												"v1",
												"auth",
												"users",
												"{{adminUserId}}"
											]
										},
										"description": "Updates an admin user with the provided attributes given in the request. There is no limit to which attributes you can provide."
									},
									"response": [
										{
											"name": "Update User (success)",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json",
														"disabled": false
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"email\": \"someone@somewhere.com\"\n}"
												},
												"url": {
													"raw": "{{authApiHost}}/v1/auth/users/{{externalUserId}}",
													"host": [
														"{{authApiHost}}"
													],
													"path": [
														"v1",
														"auth",
														"users",
														"{{externalUserId}}"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Headers",
													"value": "Content-Type, Authorization, Accept, Cache-Control, X-Requested-With",
													"name": "Access-Control-Allow-Headers",
													"description": ""
												},
												{
													"key": "Access-Control-Allow-Methods",
													"value": "GET,PUT,POST,DELETE",
													"name": "Access-Control-Allow-Methods",
													"description": ""
												},
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*",
													"name": "Access-Control-Allow-Origin",
													"description": ""
												},
												{
													"key": "Connection",
													"value": "keep-alive",
													"name": "Connection",
													"description": ""
												},
												{
													"key": "Content-Length",
													"value": "392",
													"name": "Content-Length",
													"description": ""
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8",
													"name": "Content-Type",
													"description": ""
												},
												{
													"key": "Date",
													"value": "Mon, 04 Dec 2017 09:20:56 GMT",
													"name": "Date",
													"description": ""
												},
												{
													"key": "X-Response-Time",
													"value": "15ms",
													"name": "X-Response-Time",
													"description": ""
												}
											],
											"cookie": [],
											"body": "{\"createdAt\":\"2017-12-04T09:20:28.722Z\",\"role\":\"user\",\"targetId\":\"57699178-7d3c-4954-9f6c-6df8e7a164f6\",\"provider\":{\"name\":\"facebook\",\"uid\":\"fb-uid-one\"},\"name\":\"one\",\"externalId\":\"57699178-7d3c-4954-9f6c-6df8e7a164f6_fb-uid-one\",\"avatar\":\"https://graph.fb.com/avatar/one.png\",\"id\":\"04049544-5b8b-4f1c-aa6b-fe96d999264b\",\"email\":\"someone@somewhere.com\",\"updatedAt\":\"2017-12-04T09:20:56.501Z\"}"
										}
									]
								},
								{
									"name": "Get Admin Avatar Image Upload Url",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code is 200\"] = responseCode.code === 200;",
													"var data = JSON.parse(responseBody);",
													"tests[\"Response has upload url\"] = data.uploadUrl !== null;",
													"tests[\"Response has get url\"] = data.getUrl !== null;",
													"postman.setEnvironmentVariable(\"adminAvatarImageUploadUrl\", data.uploadUrl);",
													"postman.setEnvironmentVariable(\"adminAvatarImageUrl\", data.resizedUrls.medium);"
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{adminToken}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"id\":\"{{$guid}}\",\n  \"filename\":\"{{channelName}}-avatar-image.png\"\n}"
										},
										"url": {
											"raw": "{{coreApiHost}}/v1/upload",
											"host": [
												"{{coreApiHost}}"
											],
											"path": [
												"v1",
												"upload"
											]
										}
									},
									"response": []
								},
								{
									"name": "Update Admin User Avatar",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code is 200\"] = responseCode.code === 200;",
													"var data = JSON.parse(responseBody);"
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{adminToken}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"avatar\": \"{{adminAvatarImageUrl}}\"\n}"
										},
										"url": {
											"raw": "{{authApiHost}}/v1/auth/users/{{adminUserId}}",
											"host": [
												"{{authApiHost}}"
											],
											"path": [
												"v1",
												"auth",
												"users",
												"{{adminUserId}}"
											]
										}
									},
									"response": [
										{
											"name": "Update User",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json",
														"disabled": false
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"email\": \"someone@somewhere.com\"\n}"
												},
												"url": {
													"raw": "{{authApiHost}}/v1/auth/users/{{externalUserId}}",
													"host": [
														"{{authApiHost}}"
													],
													"path": [
														"v1",
														"auth",
														"users",
														"{{externalUserId}}"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Headers",
													"value": "Content-Type, Authorization, Accept, Cache-Control, X-Requested-With",
													"name": "Access-Control-Allow-Headers",
													"description": ""
												},
												{
													"key": "Access-Control-Allow-Methods",
													"value": "GET,PUT,POST,DELETE",
													"name": "Access-Control-Allow-Methods",
													"description": ""
												},
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*",
													"name": "Access-Control-Allow-Origin",
													"description": ""
												},
												{
													"key": "Connection",
													"value": "keep-alive",
													"name": "Connection",
													"description": ""
												},
												{
													"key": "Content-Length",
													"value": "392",
													"name": "Content-Length",
													"description": ""
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8",
													"name": "Content-Type",
													"description": ""
												},
												{
													"key": "Date",
													"value": "Mon, 04 Dec 2017 09:20:56 GMT",
													"name": "Date",
													"description": ""
												},
												{
													"key": "X-Response-Time",
													"value": "15ms",
													"name": "X-Response-Time",
													"description": ""
												}
											],
											"cookie": [],
											"body": "{\"createdAt\":\"2017-12-04T09:20:28.722Z\",\"role\":\"user\",\"targetId\":\"57699178-7d3c-4954-9f6c-6df8e7a164f6\",\"provider\":{\"name\":\"facebook\",\"uid\":\"fb-uid-one\"},\"name\":\"one\",\"externalId\":\"57699178-7d3c-4954-9f6c-6df8e7a164f6_fb-uid-one\",\"avatar\":\"https://graph.fb.com/avatar/one.png\",\"id\":\"04049544-5b8b-4f1c-aa6b-fe96d999264b\",\"email\":\"someone@somewhere.com\",\"updatedAt\":\"2017-12-04T09:20:56.501Z\"}"
										}
									]
								},
								{
									"name": "Get VIP Users for Stream",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "265e928c-1f34-47f4-8689-219379d67435",
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code is 200\"] = responseCode.code === 200;",
													"var data = JSON.parse(responseBody);",
													"tests[\"Response has stream id\"] = data.id !== null;"
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{adminToken}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{authApiHost}}/v1/auth/users?streamId={{streamId}}",
											"host": [
												"{{authApiHost}}"
											],
											"path": [
												"v1",
												"auth",
												"users"
											],
											"query": [
												{
													"key": "streamId",
													"value": "{{streamId}}"
												}
											]
										}
									},
									"response": [
										{
											"name": "Get VIP Users for Stream (success)",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{authApiHost}}/v1/auth/users?streamId={{streamId}}",
													"host": [
														"{{authApiHost}}"
													],
													"path": [
														"v1",
														"auth",
														"users"
													],
													"query": [
														{
															"key": "streamId",
															"value": "{{streamId}}"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Credentials",
													"value": "true",
													"name": "Access-Control-Allow-Credentials",
													"description": "Indicates whether or not the response to the request can be exposed when the credentials flag is true. When used as part of a response to a preflight request, this indicates whether or not the actual request can be made using credentials."
												},
												{
													"key": "Access-Control-Allow-Headers",
													"value": "Content-Type, Authorization, Accept, Cache-Control, X-Requested-With, Origin",
													"name": "Access-Control-Allow-Headers",
													"description": "Used in response to a preflight request to indicate which HTTP headers can be used when making the actual request."
												},
												{
													"key": "Access-Control-Allow-Methods",
													"value": "GET,PUT,POST,DELETE",
													"name": "Access-Control-Allow-Methods",
													"description": "Specifies the method or methods allowed when accessing the resource. This is used in response to a preflight request."
												},
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*",
													"name": "Access-Control-Allow-Origin",
													"description": "Specifies a URI that may access the resource. For requests without credentials, the server may specify '*' as a wildcard, thereby allowing any origin to access the resource."
												},
												{
													"key": "Connection",
													"value": "keep-alive",
													"name": "Connection",
													"description": "Options that are desired for the connection"
												},
												{
													"key": "Content-Length",
													"value": "296",
													"name": "Content-Length",
													"description": "The length of the response body in octets (8-bit bytes)"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8",
													"name": "Content-Type",
													"description": "The mime type of this content"
												},
												{
													"key": "Date",
													"value": "Mon, 12 Feb 2018 10:57:07 GMT",
													"name": "Date",
													"description": "The date and time that the message was sent"
												},
												{
													"key": "X-Response-Time",
													"value": "42ms",
													"name": "X-Response-Time",
													"description": "Custom header"
												}
											],
											"cookie": [],
											"body": "[{\"targetId\":\"413b6c52-90c4-436c-8641-691afd7085d9\",\"authenticated\":true,\"avatar\":\"https://www.example.com/vip.jpg\",\"role\":\"admin\",\"createdAt\":\"2018-02-12T10:54:46.191Z\",\"id\":\"ae41120f-5cc7-4045-b11f-9c67819ef111\",\"name\":\"Very Important Person\",\"streamId\":\"28d150e5-c720-4cb8-b028-944b960cc756\"}]"
										}
									]
								}
							],
							"_postman_isSubFolder": true
						},
						{
							"name": "Assets",
							"item": [
								{
									"name": "Get Signed Upload Url",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code is 200\"] = responseCode.code === 200;",
													"var data = JSON.parse(responseBody);",
													"tests[\"Response has upload url\"] = data.uploadUrl !== null;",
													"tests[\"Response has get url\"] = data.getUrl !== null;",
													"postman.setEnvironmentVariable(\"uploadUrl\", data.uploadUrl);",
													"postman.setEnvironmentVariable(\"getUrl\", data.getUrl);"
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{adminToken}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"id\":1511863659392.595,\n  \"filename\":\"zender-logo.png\"\n}"
										},
										"url": {
											"raw": "{{coreApiHost}}/v1/upload",
											"host": [
												"{{coreApiHost}}"
											],
											"path": [
												"v1",
												"upload"
											]
										},
										"description": "Get a signed upload url to send/upload asset files to. The uploadUrl in the response is only available for a short period after which it won't be possible to upload files to."
									},
									"response": [
										{
											"name": "Get Signed Upload Image Url (success)",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"id\":1511863659392.595,\n\t\"filename\":\"zender-logo.png\"\n}"
												},
												"url": {
													"raw": "{{coreApiHost}}/v1/upload",
													"host": [
														"{{coreApiHost}}"
													],
													"path": [
														"v1",
														"upload"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [],
											"cookie": [],
											"body": "{\n    \"uploadId\": \"ac7a1d06-fb0f-410b-bdb0-3491ede17c01\",\n    \"uploadUrl\": \"http://localhost:14569/cdn.local.zender.tv/live/uploads/03013c55-9996-4735-bbff-e1405601346e/2017-11-28/ac7a1d06-fb0f-410b-bdb0-3491ede17c01.original.png?AWSAccessKeyId=dummy&Content-Type=image%2Fpng&Expires=1511876958&Signature=RxO8nW3wKBZJHKUVLdHoFzUcUQk%3D&x-amz-acl=public-read&x-amz-meta-filename=zender-logo.png&x-amz-meta-id=ac7a1d06-fb0f-410b-bdb0-3491ede17c01&x-amz-meta-targetid=03013c55-9996-4735-bbff-e1405601346e&x-amz-meta-userid=zender-api&x-amz-meta-userrole=admin&x-amz-tagging=targetId%3D03013c55-9996-4735-bbff-e1405601346e%26targetName%3Dzender-api\",\n    \"resizedUrls\": {\n        \"large\": \"http://localhost:14569/cdn.local.zender.tv/live/uploads/03013c55-9996-4735-bbff-e1405601346e/2017-11-28/ac7a1d06-fb0f-410b-bdb0-3491ede17c01.large.png\",\n        \"medium\": \"http://localhost:14569/cdn.local.zender.tv/live/uploads/03013c55-9996-4735-bbff-e1405601346e/2017-11-28/ac7a1d06-fb0f-410b-bdb0-3491ede17c01.medium.png\",\n        \"small\": \"http://localhost:14569/cdn.local.zender.tv/live/uploads/03013c55-9996-4735-bbff-e1405601346e/2017-11-28/ac7a1d06-fb0f-410b-bdb0-3491ede17c01.small.png\"\n    },\n    \"contentType\": \"image/png\",\n    \"getUrl\": \"http://localhost:14569/cdn.local.zender.tv/live/uploads/03013c55-9996-4735-bbff-e1405601346e/2017-11-28/ac7a1d06-fb0f-410b-bdb0-3491ede17c01.original.png\"\n}"
										},
										{
											"name": "Get Signed Upload Video Url (success)",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"id\":1511863659393.595,\n\t\"filename\":\"zender-logo.mp4\"\n}"
												},
												"url": {
													"raw": "{{coreApiHost}}/v1/upload",
													"host": [
														"{{coreApiHost}}"
													],
													"path": [
														"v1",
														"upload"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [],
											"cookie": [],
											"body": "{\n    \"uploadId\": \"ac7a1d06-fb0f-410b-bdb0-3491ede17c01\",\n    \"uploadUrl\": \"http://localhost:14569/cdn.local.zender.tv/live/uploads/03013c55-9996-4735-bbff-e1405601346e/2017-11-28/ac7a1d06-fb0f-410b-bdb0-3491ede17c01.original.png?AWSAccessKeyId=dummy&Content-Type=image%2Fpng&Expires=1511876958&Signature=RxO8nW3wKBZJHKUVLdHoFzUcUQk%3D&x-amz-acl=public-read&x-amz-meta-filename=zender-logo.png&x-amz-meta-id=ac7a1d06-fb0f-410b-bdb0-3491ede17c01&x-amz-meta-targetid=03013c55-9996-4735-bbff-e1405601346e&x-amz-meta-userid=zender-api&x-amz-meta-userrole=admin&x-amz-tagging=targetId%3D03013c55-9996-4735-bbff-e1405601346e%26targetName%3Dzender-api\",\n    \"resizedUrls\": {\n        \"large\": \"http://localhost:14569/cdn.local.zender.tv/live/uploads/03013c55-9996-4735-bbff-e1405601346e/2017-11-28/ac7a1d06-fb0f-410b-bdb0-3491ede17c01.large.png\",\n        \"medium\": \"http://localhost:14569/cdn.local.zender.tv/live/uploads/03013c55-9996-4735-bbff-e1405601346e/2017-11-28/ac7a1d06-fb0f-410b-bdb0-3491ede17c01.medium.png\",\n        \"small\": \"http://localhost:14569/cdn.local.zender.tv/live/uploads/03013c55-9996-4735-bbff-e1405601346e/2017-11-28/ac7a1d06-fb0f-410b-bdb0-3491ede17c01.small.png\"\n    },\n    \"contentType\": \"image/png\",\n    \"getUrl\": \"http://localhost:14569/cdn.local.zender.tv/live/uploads/03013c55-9996-4735-bbff-e1405601346e/2017-11-28/ac7a1d06-fb0f-410b-bdb0-3491ede17c01.original.png\"\n}"
										}
									]
								},
								{
									"name": "Upload Asset",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"/*tests[\"Status code is 200\"] = responseCode.code === 200;",
													"var data = JSON.parse(responseBody);",
													"tests[\"Response has upload url\"] = data.uploadUrl !== null;",
													"postman.setEnvironmentVariable(\"uploadUrl\", data.uploadUrl);*/"
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "image/png"
											}
										],
										"body": {
											"mode": "file",
											"file": {}
										},
										"url": {
											"raw": "{{uploadUrl}}",
											"host": [
												"{{uploadUrl}}"
											]
										},
										"description": "Upload an asset file to a uploadUrl obtained from the \"Get Signed Upload Url\" endpoint."
									},
									"response": [
										{
											"name": "Upload Video Asset",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "video/mp4"
													}
												],
												"body": {
													"mode": "file",
													"file": {
														"src": ""
													}
												},
												"url": {
													"raw": "{{uploadUrl}}",
													"host": [
														"{{uploadUrl}}"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "Text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Upload Image Asset",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "image/png"
													}
												],
												"body": {
													"mode": "file",
													"file": {
														"src": ""
													}
												},
												"url": {
													"raw": "{{uploadUrl}}",
													"host": [
														"{{uploadUrl}}"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "Text",
											"header": [],
											"cookie": [],
											"body": ""
										}
									]
								}
							],
							"_postman_isSubFolder": true
						},
						{
							"name": "Users",
							"item": [
								{
									"name": "Get Blocked Users",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"/*tests[\"Status code is 200\"] = responseCode.code === 200;",
													"var data = JSON.parse(responseBody);",
													"tests[\"Response has token url\"] = data.config.auth.getToken.url !== null;",
													"tests[\"Response has login url\"] = data.config.auth.login.ketnet.url !== null;",
													"tests[\"Response has streams\"] = data.streams.length > 0;",
													"postman.setEnvironmentVariable(\"loginEndpoint\", data.config.auth.login.url);",
													"postman.setEnvironmentVariable(\"streamId\", data.streams[0].id);*/"
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{adminToken}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{authApiHost}}/v1/auth/users?flag=blocked",
											"host": [
												"{{authApiHost}}"
											],
											"path": [
												"v1",
												"auth",
												"users"
											],
											"query": [
												{
													"key": "flag",
													"value": "blocked"
												}
											]
										},
										"description": "Get all users."
									},
									"response": [
										{
											"name": "Get Blocked Users",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{authApiHost}}/v1/auth/users?flag=blocked",
													"host": [
														"{{authApiHost}}"
													],
													"path": [
														"v1",
														"auth",
														"users"
													],
													"query": [
														{
															"key": "flag",
															"value": "blocked"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Headers",
													"value": "Content-Type, Authorization, Accept, Cache-Control, X-Requested-With",
													"name": "Access-Control-Allow-Headers",
													"description": "Used in response to a preflight request to indicate which HTTP headers can be used when making the actual request."
												},
												{
													"key": "Access-Control-Allow-Methods",
													"value": "GET,PUT,POST,DELETE",
													"name": "Access-Control-Allow-Methods",
													"description": "Specifies the method or methods allowed when accessing the resource. This is used in response to a preflight request."
												},
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*",
													"name": "Access-Control-Allow-Origin",
													"description": "Specifies a URI that may access the resource. For requests without credentials, the server may specify '*' as a wildcard, thereby allowing any origin to access the resource."
												},
												{
													"key": "Connection",
													"value": "keep-alive",
													"name": "Connection",
													"description": "Options that are desired for the connection"
												},
												{
													"key": "Content-Length",
													"value": "423",
													"name": "Content-Length",
													"description": "The length of the response body in octets (8-bit bytes)"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8",
													"name": "Content-Type",
													"description": "The mime type of this content"
												},
												{
													"key": "Date",
													"value": "Wed, 29 Nov 2017 10:25:56 GMT",
													"name": "Date",
													"description": "The date and time that the message was sent"
												},
												{
													"key": "X-Response-Time",
													"value": "15ms",
													"name": "X-Response-Time",
													"description": "Custom header"
												}
											],
											"cookie": [],
											"body": "[{\"authenticated\":true,\"createdAt\":\"2017-11-28T14:48:42.879Z\",\"flag\":\"blocked_2017-11-28T15:27:06.362Z\",\"role\":\"user\",\"targetId\":\"b8f99a0c-1383-4891-af7a-563b5903d390\",\"provider\":{\"name\":\"facebook\"},\"externalId\":\"b8f99a0c-1383-4891-af7a-563b5903d390_undefined\",\"avatar\":\"https://graph.facebook.com/undefined/picture?width=250&type=square\",\"id\":\"f468fca3-1287-4858-880f-7c099e0ba1d3\",\"updatedAt\":\"2017-11-28T15:27:06.362Z\"}]"
										}
									]
								},
								{
									"name": "Create External Users",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code is 200\"] = responseCode.code === 200;",
													"var data = JSON.parse(responseBody);",
													"tests[\"Response has a user id\"] = data[0].id !== null;",
													"postman.setEnvironmentVariable(\"externalUserId\", data[0].id);"
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{adminToken}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\n\t{\n\t\t\"provider\": {\n\t\t\t\"uid\": \"fb-uid-one\",\n\t\t\t\"name\": \"facebook\"\n\t\t},\n\t\t\"name\": \"one\",\n\t\t\"avatar\": \"https://graph.fb.com/avatar/one.png\"\n\t},\n\t{\n\t\t\"provider\": {\n\t\t\t\"uid\": \"fb-uid-two\",\n\t\t\t\"name\": \"facebook\"\n\t\t},\n\t\t\"name\": \"two\",\n\t\t\"avatar\": \"https://graph.fb.com/avatar/two.png\"\n\t},\n\t{\n\t\t\"provider\": {\n\t\t\t\"uid\": \"fb-uid-three\",\n\t\t\t\"name\": \"facebook\"\n\t\t},\n\t\t\"name\": \"three\",\n\t\t\"avatar\": \"https://graph.fb.com/avatar/three.png\"\n\t}\n]"
										},
										"url": {
											"raw": "{{authApiHost}}/v1/auth/users",
											"host": [
												"{{authApiHost}}"
											],
											"path": [
												"v1",
												"auth",
												"users"
											]
										},
										"description": "Create multiple external users that can be used to shout on behalf of: see \"Send Shoutbox Message On Behalf Of\" example."
									},
									"response": [
										{
											"name": "Create External Users",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "[\n\t{\n\t\t\"provider\": {\n\t\t\t\"uid\": \"fb-uid-one\",\n\t\t\t\"name\": \"facebook\"\n\t\t},\n\t\t\"name\": \"one\",\n\t\t\"avatar\": \"https://graph.fb.com/avatar/one.png\"\n\t},\n\t{\n\t\t\"provider\": {\n\t\t\t\"uid\": \"fb-uid-two\",\n\t\t\t\"name\": \"facebook\"\n\t\t},\n\t\t\"name\": \"two\",\n\t\t\"avatar\": \"https://graph.fb.com/avatar/two.png\"\n\t}\n]"
												},
												"url": {
													"raw": "{{authApiHost}}/v1/auth/users",
													"host": [
														"{{authApiHost}}"
													],
													"path": [
														"v1",
														"auth",
														"users"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Headers",
													"value": "Content-Type, Authorization, Accept, Cache-Control, X-Requested-With",
													"name": "Access-Control-Allow-Headers",
													"description": ""
												},
												{
													"key": "Access-Control-Allow-Methods",
													"value": "GET,PUT,POST,DELETE",
													"name": "Access-Control-Allow-Methods",
													"description": ""
												},
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*",
													"name": "Access-Control-Allow-Origin",
													"description": ""
												},
												{
													"key": "Connection",
													"value": "keep-alive",
													"name": "Connection",
													"description": ""
												},
												{
													"key": "Content-Length",
													"value": "645",
													"name": "Content-Length",
													"description": ""
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8",
													"name": "Content-Type",
													"description": ""
												},
												{
													"key": "Date",
													"value": "Fri, 01 Dec 2017 09:14:45 GMT",
													"name": "Date",
													"description": ""
												},
												{
													"key": "X-Response-Time",
													"value": "191ms",
													"name": "X-Response-Time",
													"description": ""
												}
											],
											"cookie": [],
											"body": "[{\"provider\":{\"uid\":\"fb-uid-one\",\"name\":\"facebook\"},\"name\":\"one\",\"avatar\":\"https://graph.fb.com/avatar/one.png\",\"targetId\":\"04573ba9-3efb-402f-b956-9a0f1cfeb285\",\"externalId\":\"04573ba9-3efb-402f-b956-9a0f1cfeb285_fb-uid-one\",\"id\":\"9f7ae72e-0781-404c-baaa-160f91045504\",\"createdAt\":\"2017-12-01T09:14:45.129Z\",\"role\":\"user\"},{\"provider\":{\"uid\":\"fb-uid-two\",\"name\":\"facebook\"},\"name\":\"two\",\"avatar\":\"https://graph.fb.com/avatar/two.png\",\"targetId\":\"04573ba9-3efb-402f-b956-9a0f1cfeb285\",\"externalId\":\"04573ba9-3efb-402f-b956-9a0f1cfeb285_fb-uid-two\",\"id\":\"eba4ae9c-354d-4220-9986-ffeda100d319\",\"createdAt\":\"2017-12-01T09:14:45.137Z\",\"role\":\"user\"}]"
										}
									]
								},
								{
									"name": "Update User",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code is 200\"] = responseCode.code === 200;",
													"var data = JSON.parse(responseBody);",
													"tests[\"Response has stream id\"] = data.id !== null;",
													"postman.setEnvironmentVariable(\"streamId\", data.id);"
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{adminToken}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"email\": \"someone@somewhere.com\"\n}"
										},
										"url": {
											"raw": "{{authApiHost}}/v1/auth/users/{{externalUserId}}",
											"host": [
												"{{authApiHost}}"
											],
											"path": [
												"v1",
												"auth",
												"users",
												"{{externalUserId}}"
											]
										},
										"description": "Create multiple external users that can be used to shout on behalf of: see \"Send Shoutbox Message On Behalf Of\" example."
									},
									"response": [
										{
											"name": "Update User",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json",
														"disabled": false
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"email\": \"someone@somewhere.com\"\n}"
												},
												"url": {
													"raw": "{{authApiHost}}/v1/auth/users/{{externalUserId}}",
													"host": [
														"{{authApiHost}}"
													],
													"path": [
														"v1",
														"auth",
														"users",
														"{{externalUserId}}"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Headers",
													"value": "Content-Type, Authorization, Accept, Cache-Control, X-Requested-With",
													"name": "Access-Control-Allow-Headers",
													"description": ""
												},
												{
													"key": "Access-Control-Allow-Methods",
													"value": "GET,PUT,POST,DELETE",
													"name": "Access-Control-Allow-Methods",
													"description": ""
												},
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*",
													"name": "Access-Control-Allow-Origin",
													"description": ""
												},
												{
													"key": "Connection",
													"value": "keep-alive",
													"name": "Connection",
													"description": ""
												},
												{
													"key": "Content-Length",
													"value": "392",
													"name": "Content-Length",
													"description": ""
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8",
													"name": "Content-Type",
													"description": ""
												},
												{
													"key": "Date",
													"value": "Mon, 04 Dec 2017 09:20:56 GMT",
													"name": "Date",
													"description": ""
												},
												{
													"key": "X-Response-Time",
													"value": "15ms",
													"name": "X-Response-Time",
													"description": ""
												}
											],
											"cookie": [],
											"body": "{\"createdAt\":\"2017-12-04T09:20:28.722Z\",\"role\":\"user\",\"targetId\":\"57699178-7d3c-4954-9f6c-6df8e7a164f6\",\"provider\":{\"name\":\"facebook\",\"uid\":\"fb-uid-one\"},\"name\":\"one\",\"externalId\":\"57699178-7d3c-4954-9f6c-6df8e7a164f6_fb-uid-one\",\"avatar\":\"https://graph.fb.com/avatar/one.png\",\"id\":\"04049544-5b8b-4f1c-aa6b-fe96d999264b\",\"email\":\"someone@somewhere.com\",\"updatedAt\":\"2017-12-04T09:20:56.501Z\"}"
										}
									]
								},
                                {
                                  "name": "Update Username",
                                  "event": [
                                    {
                                      "listen": "test",
                                      "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                          "tests[\"Status code is 200\"] = responseCode.code === 200;",
                                          "var data = JSON.parse(responseBody);",
                                          "tests[\"Response has stream id\"] = data.id !== null;",
                                          "postman.setEnvironmentVariable(\"streamId\", data.id);"
                                        ]
                                      }
                                    }
                                  ],
                                  "request": {
                                    "auth": {
                                      "type": "bearer",
                                      "bearer": [
                                        {
                                          "key": "token",
                                          "value": "{{adminToken}}",
                                          "type": "string"
                                        }
                                      ]
                                    },
                                    "method": "PUT",
                                    "header": [
                                      {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                      }
                                    ],
                                    "body": {
                                      "mode": "raw",
                                      "raw": "{\n\t\"username\": \"abcde\"\n}"
                                    },
                                    "url": {
                                      "raw": "{{authApiHost}}/v1/auth/users/{{externalUserId}}/username",
                                      "host": [
                                        "{{authApiHost}}"
                                      ],
                                      "path": [
                                        "v1",
                                        "auth",
                                        "users",
                                        "{{externalUserId}}"
                                      ]
                                    },
                                    "description": "Update the username of the specified User"
                                  },
                                  "response": [
                                    {
                                      "name": "Update Username",
                                      "originalRequest": {
                                        "method": "PUT",
                                        "header": [
                                          {
                                            "key": "Content-Type",
                                            "value": "application/json",
                                            "disabled": false
                                          }
                                        ],
                                        "body": {
                                          "mode": "raw",
                                          "raw": "{\n\t\"username\": \"abcde\"\n}"
                                        },
                                        "url": {
                                          "raw": "{{authApiHost}}/v1/auth/users/{{externalUserId}}",
                                          "host": [
                                            "{{authApiHost}}"
                                          ],
                                          "path": [
                                            "v1",
                                            "auth",
                                            "users",
                                            "{{externalUserId}}"
                                          ]
                                        }
                                      },
                                      "status": "OK",
                                      "code": 200,
                                      "_postman_previewlanguage": "json",
                                      "header": [
                                        {
                                          "key": "Access-Control-Allow-Headers",
                                          "value": "Content-Type, Authorization, Accept, Cache-Control, X-Requested-With",
                                          "name": "Access-Control-Allow-Headers",
                                          "description": ""
                                        },
                                        {
                                          "key": "Access-Control-Allow-Methods",
                                          "value": "GET,PUT,POST,DELETE",
                                          "name": "Access-Control-Allow-Methods",
                                          "description": ""
                                        },
                                        {
                                          "key": "Access-Control-Allow-Origin",
                                          "value": "*",
                                          "name": "Access-Control-Allow-Origin",
                                          "description": ""
                                        },
                                        {
                                          "key": "Connection",
                                          "value": "keep-alive",
                                          "name": "Connection",
                                          "description": ""
                                        },
                                        {
                                          "key": "Content-Length",
                                          "value": "392",
                                          "name": "Content-Length",
                                          "description": ""
                                        },
                                        {
                                          "key": "Content-Type",
                                          "value": "application/json; charset=utf-8",
                                          "name": "Content-Type",
                                          "description": ""
                                        },
                                        {
                                          "key": "Date",
                                          "value": "Mon, 04 Dec 2017 09:20:56 GMT",
                                          "name": "Date",
                                          "description": ""
                                        },
                                        {
                                          "key": "X-Response-Time",
                                          "value": "15ms",
                                          "name": "X-Response-Time",
                                          "description": ""
                                        }
                                      ],
                                      "cookie": [],
                                      "body": "{\"createdAt\":\"2017-12-04T09:20:28.722Z\",\"role\":\"user\",\"targetId\":\"57699178-7d3c-4954-9f6c-6df8e7a164f6\",\"provider\":{\"name\":\"facebook\",\"uid\":\"fb-uid-one\"},\"name\":\"one\",\"externalId\":\"57699178-7d3c-4954-9f6c-6df8e7a164f6_fb-uid-one\",\"avatar\":\"https://graph.fb.com/avatar/one.png\",\"id\":\"04049544-5b8b-4f1c-aa6b-fe96d999264b\",\"email\":\"someone@somewhere.com\",\"updatedAt\":\"2017-12-04T09:20:56.501Z\", \"username\":\"abcde\"}"
                                    }
                                  ]
                                },
								{
									"name": "Block User",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code is 200\"] = responseCode.code === 200;",
													""
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{adminToken}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"flag\": \"blocked\"\n}"
										},
										"url": {
											"raw": "{{authApiHost}}/v1/auth/users/{{userId}}",
											"host": [
												"{{authApiHost}}"
											],
											"path": [
												"v1",
												"auth",
												"users",
												"{{userId}}"
											]
										},
										"description": "Blocks a user."
									},
									"response": [
										{
											"name": "Unblock User",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"flag\": \"unblocked\"\n}"
												},
												"url": {
													"raw": "{{authApiHost}}/v1/auth/users/{{userId}}",
													"host": [
														"{{authApiHost}}"
													],
													"path": [
														"v1",
														"auth",
														"users",
														"{{userId}}"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Headers",
													"value": "Content-Type, Authorization, Accept, Cache-Control, X-Requested-With",
													"name": "Access-Control-Allow-Headers",
													"description": "Used in response to a preflight request to indicate which HTTP headers can be used when making the actual request."
												},
												{
													"key": "Access-Control-Allow-Methods",
													"value": "GET,PUT,POST,DELETE",
													"name": "Access-Control-Allow-Methods",
													"description": "Specifies the method or methods allowed when accessing the resource. This is used in response to a preflight request."
												},
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*",
													"name": "Access-Control-Allow-Origin",
													"description": "Specifies a URI that may access the resource. For requests without credentials, the server may specify '*' as a wildcard, thereby allowing any origin to access the resource."
												},
												{
													"key": "Connection",
													"value": "keep-alive",
													"name": "Connection",
													"description": "Options that are desired for the connection"
												},
												{
													"key": "Content-Length",
													"value": "484",
													"name": "Content-Length",
													"description": "The length of the response body in octets (8-bit bytes)"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8",
													"name": "Content-Type",
													"description": "The mime type of this content"
												},
												{
													"key": "Date",
													"value": "Wed, 29 Nov 2017 08:38:26 GMT",
													"name": "Date",
													"description": "The date and time that the message was sent"
												},
												{
													"key": "X-Response-Time",
													"value": "15ms",
													"name": "X-Response-Time",
													"description": "Custom header"
												}
											],
											"cookie": [],
											"body": "{\n    \"authenticated\": true,\n    \"createdAt\": \"2017-11-29T08:33:42.090Z\",\n    \"flag\": \"unblocked_2017-11-29T08:38:57.865Z\",\n    \"role\": \"user\",\n    \"targetId\": \"b8f99a0c-1383-4891-af7a-563b5903d390\",\n    \"provider\": {\n        \"name\": \"facebook\",\n        \"uid\": \"1459394774070695\"\n    },\n    \"name\": \"Benoit Shapiro\",\n    \"externalId\": \"b8f99a0c-1383-4891-af7a-563b5903d390_1459394774070695\",\n    \"avatar\": \"https://graph.facebook.com/1459394774070695/picture?width=250&type=square\",\n    \"id\": \"8184fbdc-6861-4fc5-9944-e7860b95f4df\",\n    \"updatedAt\": \"2017-11-29T08:38:26.907Z\"\n}"
										},
										{
											"name": "Block User",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"flag\": \"blocked\"\n}"
												},
												"url": {
													"raw": "{{authApiHost}}/v1/auth/users/{{userId}}",
													"host": [
														"{{authApiHost}}"
													],
													"path": [
														"v1",
														"auth",
														"users",
														"{{userId}}"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Headers",
													"value": "Content-Type, Authorization, Accept, Cache-Control, X-Requested-With",
													"name": "Access-Control-Allow-Headers",
													"description": "Used in response to a preflight request to indicate which HTTP headers can be used when making the actual request."
												},
												{
													"key": "Access-Control-Allow-Methods",
													"value": "GET,PUT,POST,DELETE",
													"name": "Access-Control-Allow-Methods",
													"description": "Specifies the method or methods allowed when accessing the resource. This is used in response to a preflight request."
												},
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*",
													"name": "Access-Control-Allow-Origin",
													"description": "Specifies a URI that may access the resource. For requests without credentials, the server may specify '*' as a wildcard, thereby allowing any origin to access the resource."
												},
												{
													"key": "Connection",
													"value": "keep-alive",
													"name": "Connection",
													"description": "Options that are desired for the connection"
												},
												{
													"key": "Content-Length",
													"value": "484",
													"name": "Content-Length",
													"description": "The length of the response body in octets (8-bit bytes)"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8",
													"name": "Content-Type",
													"description": "The mime type of this content"
												},
												{
													"key": "Date",
													"value": "Wed, 29 Nov 2017 08:38:06 GMT",
													"name": "Date",
													"description": "The date and time that the message was sent"
												},
												{
													"key": "X-Response-Time",
													"value": "16ms",
													"name": "X-Response-Time",
													"description": "Custom header"
												}
											],
											"cookie": [],
											"body": "{\"authenticated\":true,\"createdAt\":\"2017-11-29T08:33:42.090Z\",\"flag\":\"blocked_2017-11-29T08:38:06.761Z\",\"role\":\"user\",\"targetId\":\"b8f99a0c-1383-4891-af7a-563b5903d390\",\"provider\":{\"name\":\"facebook\",\"uid\":\"1459394774070695\"},\"name\":\"Benoit Shapiro\",\"externalId\":\"b8f99a0c-1383-4891-af7a-563b5903d390_1459394774070695\",\"avatar\":\"https://graph.facebook.com/1459394774070695/picture?width=250&type=square\",\"id\":\"8184fbdc-6861-4fc5-9944-e7860b95f4df\",\"updatedAt\":\"2017-11-29T08:38:06.761Z\"}"
										},
										{
											"name": "Temporary Block User",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"flag\": \"tmpblocked\"\n}"
												},
												"url": {
													"raw": "{{authApiHost}}/v1/auth/users/{{userId}}",
													"host": [
														"{{authApiHost}}"
													],
													"path": [
														"v1",
														"auth",
														"users",
														"{{userId}}"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Headers",
													"value": "Content-Type, Authorization, Accept, Cache-Control, X-Requested-With",
													"name": "Access-Control-Allow-Headers",
													"description": "Used in response to a preflight request to indicate which HTTP headers can be used when making the actual request."
												},
												{
													"key": "Access-Control-Allow-Methods",
													"value": "GET,PUT,POST,DELETE",
													"name": "Access-Control-Allow-Methods",
													"description": "Specifies the method or methods allowed when accessing the resource. This is used in response to a preflight request."
												},
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*",
													"name": "Access-Control-Allow-Origin",
													"description": "Specifies a URI that may access the resource. For requests without credentials, the server may specify '*' as a wildcard, thereby allowing any origin to access the resource."
												},
												{
													"key": "Connection",
													"value": "keep-alive",
													"name": "Connection",
													"description": "Options that are desired for the connection"
												},
												{
													"key": "Content-Length",
													"value": "487",
													"name": "Content-Length",
													"description": "The length of the response body in octets (8-bit bytes)"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8",
													"name": "Content-Type",
													"description": "The mime type of this content"
												},
												{
													"key": "Date",
													"value": "Wed, 29 Nov 2017 10:12:05 GMT",
													"name": "Date",
													"description": "The date and time that the message was sent"
												},
												{
													"key": "X-Response-Time",
													"value": "11ms",
													"name": "X-Response-Time",
													"description": "Custom header"
												}
											],
											"cookie": [],
											"body": "{\"authenticated\":true,\"createdAt\":\"2017-11-29T08:33:42.090Z\",\"flag\":\"tmpblocked_2017-11-29T10:12:05.879Z\",\"role\":\"user\",\"targetId\":\"b8f99a0c-1383-4891-af7a-563b5903d390\",\"provider\":{\"name\":\"facebook\",\"uid\":\"1459394774070695\"},\"name\":\"Benoit Shapiro\",\"externalId\":\"b8f99a0c-1383-4891-af7a-563b5903d390_1459394774070695\",\"avatar\":\"https://graph.facebook.com/1459394774070695/picture?width=250&type=square\",\"id\":\"8184fbdc-6861-4fc5-9944-e7860b95f4df\",\"updatedAt\":\"2017-11-29T10:12:05.879Z\"}"
										}
									]
								},
								{
									"name": "Unblock User",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code is 200\"] = responseCode.code === 200;",
													""
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{adminToken}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"flag\": \"unblocked\"\n}"
										},
										"url": {
											"raw": "{{authApiHost}}/v1/auth/users/{{userId}}",
											"host": [
												"{{authApiHost}}"
											],
											"path": [
												"v1",
												"auth",
												"users",
												"{{userId}}"
											]
										},
										"description": "Blocks a user."
									},
									"response": [
										{
											"name": "Block User",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"flag\": \"blocked\"\n}"
												},
												"url": {
													"raw": "{{authApiHost}}/v1/auth/users/{{userId}}",
													"host": [
														"{{authApiHost}}"
													],
													"path": [
														"v1",
														"auth",
														"users",
														"{{userId}}"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Headers",
													"value": "Content-Type, Authorization, Accept, Cache-Control, X-Requested-With",
													"name": "Access-Control-Allow-Headers",
													"description": "Used in response to a preflight request to indicate which HTTP headers can be used when making the actual request."
												},
												{
													"key": "Access-Control-Allow-Methods",
													"value": "GET,PUT,POST,DELETE",
													"name": "Access-Control-Allow-Methods",
													"description": "Specifies the method or methods allowed when accessing the resource. This is used in response to a preflight request."
												},
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*",
													"name": "Access-Control-Allow-Origin",
													"description": "Specifies a URI that may access the resource. For requests without credentials, the server may specify '*' as a wildcard, thereby allowing any origin to access the resource."
												},
												{
													"key": "Connection",
													"value": "keep-alive",
													"name": "Connection",
													"description": "Options that are desired for the connection"
												},
												{
													"key": "Content-Length",
													"value": "484",
													"name": "Content-Length",
													"description": "The length of the response body in octets (8-bit bytes)"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8",
													"name": "Content-Type",
													"description": "The mime type of this content"
												},
												{
													"key": "Date",
													"value": "Wed, 29 Nov 2017 08:38:06 GMT",
													"name": "Date",
													"description": "The date and time that the message was sent"
												},
												{
													"key": "X-Response-Time",
													"value": "16ms",
													"name": "X-Response-Time",
													"description": "Custom header"
												}
											],
											"cookie": [],
											"body": "{\"authenticated\":true,\"createdAt\":\"2017-11-29T08:33:42.090Z\",\"flag\":\"blocked_2017-11-29T08:38:06.761Z\",\"role\":\"user\",\"targetId\":\"b8f99a0c-1383-4891-af7a-563b5903d390\",\"provider\":{\"name\":\"facebook\",\"uid\":\"1459394774070695\"},\"name\":\"Benoit Shapiro\",\"externalId\":\"b8f99a0c-1383-4891-af7a-563b5903d390_1459394774070695\",\"avatar\":\"https://graph.facebook.com/1459394774070695/picture?width=250&type=square\",\"id\":\"8184fbdc-6861-4fc5-9944-e7860b95f4df\",\"updatedAt\":\"2017-11-29T08:38:06.761Z\"}"
										},
										{
											"name": "Temporary Block User",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"flag\": \"tmpblocked\"\n}"
												},
												"url": {
													"raw": "{{authApiHost}}/v1/auth/users/{{userId}}",
													"host": [
														"{{authApiHost}}"
													],
													"path": [
														"v1",
														"auth",
														"users",
														"{{userId}}"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Headers",
													"value": "Content-Type, Authorization, Accept, Cache-Control, X-Requested-With",
													"name": "Access-Control-Allow-Headers",
													"description": "Used in response to a preflight request to indicate which HTTP headers can be used when making the actual request."
												},
												{
													"key": "Access-Control-Allow-Methods",
													"value": "GET,PUT,POST,DELETE",
													"name": "Access-Control-Allow-Methods",
													"description": "Specifies the method or methods allowed when accessing the resource. This is used in response to a preflight request."
												},
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*",
													"name": "Access-Control-Allow-Origin",
													"description": "Specifies a URI that may access the resource. For requests without credentials, the server may specify '*' as a wildcard, thereby allowing any origin to access the resource."
												},
												{
													"key": "Connection",
													"value": "keep-alive",
													"name": "Connection",
													"description": "Options that are desired for the connection"
												},
												{
													"key": "Content-Length",
													"value": "487",
													"name": "Content-Length",
													"description": "The length of the response body in octets (8-bit bytes)"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8",
													"name": "Content-Type",
													"description": "The mime type of this content"
												},
												{
													"key": "Date",
													"value": "Wed, 29 Nov 2017 10:12:05 GMT",
													"name": "Date",
													"description": "The date and time that the message was sent"
												},
												{
													"key": "X-Response-Time",
													"value": "11ms",
													"name": "X-Response-Time",
													"description": "Custom header"
												}
											],
											"cookie": [],
											"body": "{\"authenticated\":true,\"createdAt\":\"2017-11-29T08:33:42.090Z\",\"flag\":\"tmpblocked_2017-11-29T10:12:05.879Z\",\"role\":\"user\",\"targetId\":\"b8f99a0c-1383-4891-af7a-563b5903d390\",\"provider\":{\"name\":\"facebook\",\"uid\":\"1459394774070695\"},\"name\":\"Benoit Shapiro\",\"externalId\":\"b8f99a0c-1383-4891-af7a-563b5903d390_1459394774070695\",\"avatar\":\"https://graph.facebook.com/1459394774070695/picture?width=250&type=square\",\"id\":\"8184fbdc-6861-4fc5-9944-e7860b95f4df\",\"updatedAt\":\"2017-11-29T10:12:05.879Z\"}"
										},
										{
											"name": "Unblock User",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"flag\": \"unblocked\"\n}"
												},
												"url": {
													"raw": "{{authApiHost}}/v1/auth/users/{{userId}}",
													"host": [
														"{{authApiHost}}"
													],
													"path": [
														"v1",
														"auth",
														"users",
														"{{userId}}"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Headers",
													"value": "Content-Type, Authorization, Accept, Cache-Control, X-Requested-With",
													"name": "Access-Control-Allow-Headers",
													"description": "Used in response to a preflight request to indicate which HTTP headers can be used when making the actual request."
												},
												{
													"key": "Access-Control-Allow-Methods",
													"value": "GET,PUT,POST,DELETE",
													"name": "Access-Control-Allow-Methods",
													"description": "Specifies the method or methods allowed when accessing the resource. This is used in response to a preflight request."
												},
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*",
													"name": "Access-Control-Allow-Origin",
													"description": "Specifies a URI that may access the resource. For requests without credentials, the server may specify '*' as a wildcard, thereby allowing any origin to access the resource."
												},
												{
													"key": "Connection",
													"value": "keep-alive",
													"name": "Connection",
													"description": "Options that are desired for the connection"
												},
												{
													"key": "Content-Length",
													"value": "484",
													"name": "Content-Length",
													"description": "The length of the response body in octets (8-bit bytes)"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8",
													"name": "Content-Type",
													"description": "The mime type of this content"
												},
												{
													"key": "Date",
													"value": "Wed, 29 Nov 2017 08:38:26 GMT",
													"name": "Date",
													"description": "The date and time that the message was sent"
												},
												{
													"key": "X-Response-Time",
													"value": "15ms",
													"name": "X-Response-Time",
													"description": "Custom header"
												}
											],
											"cookie": [],
											"body": "{\n    \"authenticated\": true,\n    \"createdAt\": \"2017-11-29T08:33:42.090Z\",\n    \"flag\": \"unblocked_2017-11-29T08:38:57.865Z\",\n    \"role\": \"user\",\n    \"targetId\": \"b8f99a0c-1383-4891-af7a-563b5903d390\",\n    \"provider\": {\n        \"name\": \"facebook\",\n        \"uid\": \"1459394774070695\"\n    },\n    \"name\": \"Benoit Shapiro\",\n    \"externalId\": \"b8f99a0c-1383-4891-af7a-563b5903d390_1459394774070695\",\n    \"avatar\": \"https://graph.facebook.com/1459394774070695/picture?width=250&type=square\",\n    \"id\": \"8184fbdc-6861-4fc5-9944-e7860b95f4df\",\n    \"updatedAt\": \"2017-11-29T08:38:26.907Z\"\n}"
										}
									]
								},
								{
									"name": "TempBlock User",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code is 200\"] = responseCode.code === 200;",
													""
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{adminToken}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"flag\": \"tmpblocked\"\n}"
										},
										"url": {
											"raw": "{{authApiHost}}/v1/auth/users/{{userId}}",
											"host": [
												"{{authApiHost}}"
											],
											"path": [
												"v1",
												"auth",
												"users",
												"{{userId}}"
											]
										},
										"description": "Blocks a user."
									},
									"response": [
										{
											"name": "Temporary Block User",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"flag\": \"tmpblocked\"\n}"
												},
												"url": {
													"raw": "{{authApiHost}}/v1/auth/users/{{userId}}",
													"host": [
														"{{authApiHost}}"
													],
													"path": [
														"v1",
														"auth",
														"users",
														"{{userId}}"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Headers",
													"value": "Content-Type, Authorization, Accept, Cache-Control, X-Requested-With",
													"name": "Access-Control-Allow-Headers",
													"description": "Used in response to a preflight request to indicate which HTTP headers can be used when making the actual request."
												},
												{
													"key": "Access-Control-Allow-Methods",
													"value": "GET,PUT,POST,DELETE",
													"name": "Access-Control-Allow-Methods",
													"description": "Specifies the method or methods allowed when accessing the resource. This is used in response to a preflight request."
												},
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*",
													"name": "Access-Control-Allow-Origin",
													"description": "Specifies a URI that may access the resource. For requests without credentials, the server may specify '*' as a wildcard, thereby allowing any origin to access the resource."
												},
												{
													"key": "Connection",
													"value": "keep-alive",
													"name": "Connection",
													"description": "Options that are desired for the connection"
												},
												{
													"key": "Content-Length",
													"value": "487",
													"name": "Content-Length",
													"description": "The length of the response body in octets (8-bit bytes)"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8",
													"name": "Content-Type",
													"description": "The mime type of this content"
												},
												{
													"key": "Date",
													"value": "Wed, 29 Nov 2017 10:12:05 GMT",
													"name": "Date",
													"description": "The date and time that the message was sent"
												},
												{
													"key": "X-Response-Time",
													"value": "11ms",
													"name": "X-Response-Time",
													"description": "Custom header"
												}
											],
											"cookie": [],
											"body": "{\"authenticated\":true,\"createdAt\":\"2017-11-29T08:33:42.090Z\",\"flag\":\"tmpblocked_2017-11-29T10:12:05.879Z\",\"role\":\"user\",\"targetId\":\"b8f99a0c-1383-4891-af7a-563b5903d390\",\"provider\":{\"name\":\"facebook\",\"uid\":\"1459394774070695\"},\"name\":\"Benoit Shapiro\",\"externalId\":\"b8f99a0c-1383-4891-af7a-563b5903d390_1459394774070695\",\"avatar\":\"https://graph.facebook.com/1459394774070695/picture?width=250&type=square\",\"id\":\"8184fbdc-6861-4fc5-9944-e7860b95f4df\",\"updatedAt\":\"2017-11-29T10:12:05.879Z\"}"
										},
										{
											"name": "Unblock User",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"flag\": \"unblocked\"\n}"
												},
												"url": {
													"raw": "{{authApiHost}}/v1/auth/users/{{userId}}",
													"host": [
														"{{authApiHost}}"
													],
													"path": [
														"v1",
														"auth",
														"users",
														"{{userId}}"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Headers",
													"value": "Content-Type, Authorization, Accept, Cache-Control, X-Requested-With",
													"name": "Access-Control-Allow-Headers",
													"description": "Used in response to a preflight request to indicate which HTTP headers can be used when making the actual request."
												},
												{
													"key": "Access-Control-Allow-Methods",
													"value": "GET,PUT,POST,DELETE",
													"name": "Access-Control-Allow-Methods",
													"description": "Specifies the method or methods allowed when accessing the resource. This is used in response to a preflight request."
												},
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*",
													"name": "Access-Control-Allow-Origin",
													"description": "Specifies a URI that may access the resource. For requests without credentials, the server may specify '*' as a wildcard, thereby allowing any origin to access the resource."
												},
												{
													"key": "Connection",
													"value": "keep-alive",
													"name": "Connection",
													"description": "Options that are desired for the connection"
												},
												{
													"key": "Content-Length",
													"value": "484",
													"name": "Content-Length",
													"description": "The length of the response body in octets (8-bit bytes)"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8",
													"name": "Content-Type",
													"description": "The mime type of this content"
												},
												{
													"key": "Date",
													"value": "Wed, 29 Nov 2017 08:38:26 GMT",
													"name": "Date",
													"description": "The date and time that the message was sent"
												},
												{
													"key": "X-Response-Time",
													"value": "15ms",
													"name": "X-Response-Time",
													"description": "Custom header"
												}
											],
											"cookie": [],
											"body": "{\n    \"authenticated\": true,\n    \"createdAt\": \"2017-11-29T08:33:42.090Z\",\n    \"flag\": \"unblocked_2017-11-29T08:38:57.865Z\",\n    \"role\": \"user\",\n    \"targetId\": \"b8f99a0c-1383-4891-af7a-563b5903d390\",\n    \"provider\": {\n        \"name\": \"facebook\",\n        \"uid\": \"1459394774070695\"\n    },\n    \"name\": \"Benoit Shapiro\",\n    \"externalId\": \"b8f99a0c-1383-4891-af7a-563b5903d390_1459394774070695\",\n    \"avatar\": \"https://graph.facebook.com/1459394774070695/picture?width=250&type=square\",\n    \"id\": \"8184fbdc-6861-4fc5-9944-e7860b95f4df\",\n    \"updatedAt\": \"2017-11-29T08:38:26.907Z\"\n}"
										},
										{
											"name": "Block User",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"flag\": \"blocked\"\n}"
												},
												"url": {
													"raw": "{{authApiHost}}/v1/auth/users/{{userId}}",
													"host": [
														"{{authApiHost}}"
													],
													"path": [
														"v1",
														"auth",
														"users",
														"{{userId}}"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Headers",
													"value": "Content-Type, Authorization, Accept, Cache-Control, X-Requested-With",
													"name": "Access-Control-Allow-Headers",
													"description": "Used in response to a preflight request to indicate which HTTP headers can be used when making the actual request."
												},
												{
													"key": "Access-Control-Allow-Methods",
													"value": "GET,PUT,POST,DELETE",
													"name": "Access-Control-Allow-Methods",
													"description": "Specifies the method or methods allowed when accessing the resource. This is used in response to a preflight request."
												},
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*",
													"name": "Access-Control-Allow-Origin",
													"description": "Specifies a URI that may access the resource. For requests without credentials, the server may specify '*' as a wildcard, thereby allowing any origin to access the resource."
												},
												{
													"key": "Connection",
													"value": "keep-alive",
													"name": "Connection",
													"description": "Options that are desired for the connection"
												},
												{
													"key": "Content-Length",
													"value": "484",
													"name": "Content-Length",
													"description": "The length of the response body in octets (8-bit bytes)"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8",
													"name": "Content-Type",
													"description": "The mime type of this content"
												},
												{
													"key": "Date",
													"value": "Wed, 29 Nov 2017 08:38:06 GMT",
													"name": "Date",
													"description": "The date and time that the message was sent"
												},
												{
													"key": "X-Response-Time",
													"value": "16ms",
													"name": "X-Response-Time",
													"description": "Custom header"
												}
											],
											"cookie": [],
											"body": "{\"authenticated\":true,\"createdAt\":\"2017-11-29T08:33:42.090Z\",\"flag\":\"blocked_2017-11-29T08:38:06.761Z\",\"role\":\"user\",\"targetId\":\"b8f99a0c-1383-4891-af7a-563b5903d390\",\"provider\":{\"name\":\"facebook\",\"uid\":\"1459394774070695\"},\"name\":\"Benoit Shapiro\",\"externalId\":\"b8f99a0c-1383-4891-af7a-563b5903d390_1459394774070695\",\"avatar\":\"https://graph.facebook.com/1459394774070695/picture?width=250&type=square\",\"id\":\"8184fbdc-6861-4fc5-9944-e7860b95f4df\",\"updatedAt\":\"2017-11-29T08:38:06.761Z\"}"
										}
									]
								}
							],
							"_postman_isSubFolder": true
						},
						{
							"name": "Channels",
							"item": [
								{
									"name": "Get Channels",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code is 200\"] = responseCode.code === 200;",
													"var data = JSON.parse(responseBody);",
													"tests[\"Response has channel id\"] = data.id !== null;",
													"postman.setEnvironmentVariable(\"channelId\", data[0].id);"
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{adminToken}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{coreApiHost}}/v1/channels/",
											"host": [
												"{{coreApiHost}}"
											],
											"path": [
												"v1",
												"channels",
												""
											]
										},
										"description": "Get a channel."
									},
									"response": [
										{
											"name": "Get Channel",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{coreApiHost}}/v1/channels/{{channelId}}",
													"host": [
														"{{coreApiHost}}"
													],
													"path": [
														"v1",
														"channels",
														"{{channelId}}"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Headers",
													"value": "Content-Type, Authorization, Accept, Cache-Control, X-Requested-With",
													"name": "Access-Control-Allow-Headers",
													"description": "Used in response to a preflight request to indicate which HTTP headers can be used when making the actual request."
												},
												{
													"key": "Access-Control-Allow-Methods",
													"value": "GET,PUT,POST,DELETE",
													"name": "Access-Control-Allow-Methods",
													"description": "Specifies the method or methods allowed when accessing the resource. This is used in response to a preflight request."
												},
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*",
													"name": "Access-Control-Allow-Origin",
													"description": "Specifies a URI that may access the resource. For requests without credentials, the server may specify '*' as a wildcard, thereby allowing any origin to access the resource."
												},
												{
													"key": "Cache-Control",
													"value": "public, max-age=5",
													"name": "Cache-Control",
													"description": "Tells all caching mechanisms from server to client whether they may cache this object. It is measured in seconds"
												},
												{
													"key": "Connection",
													"value": "keep-alive",
													"name": "Connection",
													"description": "Options that are desired for the connection"
												},
												{
													"key": "Content-Length",
													"value": "1514",
													"name": "Content-Length",
													"description": "The length of the response body in octets (8-bit bytes)"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8",
													"name": "Content-Type",
													"description": "The mime type of this content"
												},
												{
													"key": "Date",
													"value": "Tue, 28 Nov 2017 13:55:08 GMT",
													"name": "Date",
													"description": "The date and time that the message was sent"
												},
												{
													"key": "X-Response-Time",
													"value": "116ms",
													"name": "X-Response-Time",
													"description": "Custom header"
												},
												{
													"key": "x-server-time",
													"value": "2017-11-28T13:55:08.289Z",
													"name": "x-server-time",
													"description": "Custom header"
												}
											],
											"cookie": [],
											"body": "{\"stories\":[],\"preview\":{\"width\":579,\"type\":\"image\",\"url\":\"http://localhost:14569/cdn.local.zender.tv/live/uploads/b8f99a0c-1383-4891-af7a-563b5903d390/2017-11-28/aa807b08-311a-45a1-9a43-fd8ac9a19616.original.png\",\"height\":580},\"headerColor\":\"#B93D87\",\"createdAt\":\"2017-11-28T13:54:56.714Z\",\"targetId\":\"b8f99a0c-1383-4891-af7a-563b5903d390\",\"headerImage\":\"http://localhost:14569/cdn.local.zender.tv/live/uploads/b8f99a0c-1383-4891-af7a-563b5903d390/2017-11-28/aa807b08-311a-45a1-9a43-fd8ac9a19616.original.png\",\"name\":\"Zender Api Channel\",\"icon\":\"http://localhost:14569/cdn.local.zender.tv/live/uploads/b8f99a0c-1383-4891-af7a-563b5903d390/2017-11-28/aa807b08-311a-45a1-9a43-fd8ac9a19616.original.png\",\"iconColor\":\"#B93D87\",\"id\":\"67b5528a-baf4-41bc-b558-b36613ee14a4\",\"type\":\"streams\",\"streams\":[],\"config\":{\"auth\":{\"login\":{\"url\":\"http://localhost:3002/v1/auth/login\"},\"providers\":{\"youtube\":{\"clientId\":\"721563578034-8h5gt7grfb857fsisbom90ln2k1n747h.apps.googleusercontent.com\"},\"google\":{\"clientId\":\"721563578034-8h5gt7grfb857fsisbom90ln2k1n747h.apps.googleusercontent.com\"},\"facebook\":{\"enabled\":true,\"appId\":690051904495300,\"tokenUrl\":\"https://graph.facebook.com/me\"}}},\"pusher\":{\"config\":{\"encrypted\":true,\"cluster\":\"eu\",\"authEndpoint\":\"http://localhost:3002/v1/pusher\"},\"key\":\"968089f2292502112add\"},\"streams\":{\"url\":\"http://localhost:3001/v1/channels/67b5528a-baf4-41bc-b558-b36613ee14a4/streams\"},\"stories\":{\"url\":\"http://localhost:3007/v1/stories/channels/67b5528a-baf4-41bc-b558-b36613ee14a4/stories\"}}}"
										}
									]
								},
								{
									"name": "Get Channel Preview Image Upload Url",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code is 200\"] = responseCode.code === 200;",
													"var data = JSON.parse(responseBody);",
													"tests[\"Response has upload url\"] = data.uploadUrl !== null;",
													"tests[\"Response has get url\"] = data.getUrl !== null;",
													"postman.setEnvironmentVariable(\"channelPreviewImageUploadUrl\", data.uploadUrl);",
													"postman.setEnvironmentVariable(\"channelPreviewImageUrl\", data.resizedUrls.medium);"
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{adminToken}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"id\":\"{{$guid}}\",\n  \"filename\":\"{{channelName}}-preview-image.png\"\n}"
										},
										"url": {
											"raw": "{{coreApiHost}}/v1/upload",
											"host": [
												"{{coreApiHost}}"
											],
											"path": [
												"v1",
												"upload"
											]
										}
									},
									"response": []
								},
								{
									"name": "Upload Channel Preview Image",
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "image/png"
											}
										],
										"body": {
											"mode": "file",
											"file": {}
										},
										"url": {
											"raw": "{{channelPreviewImageUploadUrl}}",
											"host": [
												"{{channelPreviewImageUploadUrl}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Get Channel Icon Upload Url",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code is 200\"] = responseCode.code === 200;",
													"var data = JSON.parse(responseBody);",
													"tests[\"Response has upload url\"] = data.uploadUrl !== null;",
													"tests[\"Response has get url\"] = data.getUrl !== null;",
													"postman.setEnvironmentVariable(\"channelIconImageUploadUrl\", data.uploadUrl);",
													"postman.setEnvironmentVariable(\"channelIconImageUrl\", data.resizedUrls.medium);"
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{adminToken}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"id\":\"{{$guid}}\",\n  \"filename\":\"{{channelName}}-icon-image.png\"\n}"
										},
										"url": {
											"raw": "{{coreApiHost}}/v1/upload",
											"host": [
												"{{coreApiHost}}"
											],
											"path": [
												"v1",
												"upload"
											]
										}
									},
									"response": []
								},
								{
									"name": "Upload Channel Icon Image",
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "image/png"
											}
										],
										"body": {
											"mode": "file",
											"file": {}
										},
										"url": {
											"raw": "{{channelIconImageUploadUrl}}",
											"host": [
												"{{channelIconImageUploadUrl}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Get Channel Header Image Upload Url",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code is 200\"] = responseCode.code === 200;",
													"var data = JSON.parse(responseBody);",
													"tests[\"Response has upload url\"] = data.uploadUrl !== null;",
													"tests[\"Response has get url\"] = data.getUrl !== null;",
													"postman.setEnvironmentVariable(\"channelHeaderImageUploadUrl\", data.uploadUrl);",
													"postman.setEnvironmentVariable(\"channelHeaderImageUrl\", data.resizedUrls.medium);"
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{adminToken}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"id\":\"{{$guid}}\",\n  \"filename\":\"{{channelName}}-header-image.png\"\n}"
										},
										"url": {
											"raw": "{{coreApiHost}}/v1/upload",
											"host": [
												"{{coreApiHost}}"
											],
											"path": [
												"v1",
												"upload"
											]
										}
									},
									"response": []
								},
								{
									"name": "Upload Channel Header Image",
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "image/png"
											}
										],
										"body": {
											"mode": "file",
											"file": {}
										},
										"url": {
											"raw": "{{channelHeaderImageUploadUrl}}",
											"host": [
												"{{channelHeaderImageUploadUrl}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create Channel",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code is 200\"] = responseCode.code === 200;",
													"var data = JSON.parse(responseBody);",
													"tests[\"Response has channel id\"] = data.id !== null;",
													"postman.setEnvironmentVariable(\"channelId\", data.id);"
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{adminToken}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\":\"{{channelName}}\",\n  \"type\":\"streams\",\n  \"preview\": {\n    \"width\":579,\n    \"height\":580,\n    \"type\":\"image\",\n    \"url\":\"{{channelPreviewImageUrl}}\"\n    \n  },\n  \"headerImage\":\"{{channelHeaderImageUrl}}\",\n  \"headerColor\":\"#000000\",\n  \"icon\":\"{{channelIconImageUrl}}\",\n  \"iconColor\":\"#000000\"\n}"
										},
										"url": {
											"raw": "{{coreApiHost}}/v1/channels",
											"host": [
												"{{coreApiHost}}"
											],
											"path": [
												"v1",
												"channels"
											]
										},
										"description": "Create a new channel."
									},
									"response": [
										{
											"name": "Create Channel",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"name\":\"Zender Api Channel\",\n\t\"type\":\"streams\",\n\t\"preview\": {\n\t\t\"width\":579,\n\t\t\"height\":580,\n\t\t\"type\":\"image\",\n\t\t\"url\":\"{{getUrl}}\"\n\t\t\n\t},\n\t\"headerImage\":\"{{getUrl}}\",\n\t\"headerColor\":\"#B93D87\",\n\t\"icon\":\"{{getUrl}}\",\n\t\"iconColor\":\"#B93D87\"\n}"
												},
												"url": {
													"raw": "{{coreApiHost}}/v1/channels",
													"host": [
														"{{coreApiHost}}"
													],
													"path": [
														"v1",
														"channels"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Headers",
													"value": "Content-Type, Authorization, Accept, Cache-Control, X-Requested-With",
													"name": "Access-Control-Allow-Headers",
													"description": "Used in response to a preflight request to indicate which HTTP headers can be used when making the actual request."
												},
												{
													"key": "Access-Control-Allow-Methods",
													"value": "GET,PUT,POST,DELETE",
													"name": "Access-Control-Allow-Methods",
													"description": "Specifies the method or methods allowed when accessing the resource. This is used in response to a preflight request."
												},
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*",
													"name": "Access-Control-Allow-Origin",
													"description": "Specifies a URI that may access the resource. For requests without credentials, the server may specify '*' as a wildcard, thereby allowing any origin to access the resource."
												},
												{
													"key": "Connection",
													"value": "keep-alive",
													"name": "Connection",
													"description": "Options that are desired for the connection"
												},
												{
													"key": "Content-Length",
													"value": "1514",
													"name": "Content-Length",
													"description": "The length of the response body in octets (8-bit bytes)"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8",
													"name": "Content-Type",
													"description": "The mime type of this content"
												},
												{
													"key": "Date",
													"value": "Tue, 28 Nov 2017 13:54:56 GMT",
													"name": "Date",
													"description": "The date and time that the message was sent"
												},
												{
													"key": "X-Response-Time",
													"value": "122ms",
													"name": "X-Response-Time",
													"description": "Custom header"
												},
												{
													"key": "x-server-time",
													"value": "2017-11-28T13:54:56.681Z",
													"name": "x-server-time",
													"description": "Custom header"
												}
											],
											"cookie": [],
											"body": "{\"stories\":[],\"preview\":{\"width\":579,\"type\":\"image\",\"url\":\"http://localhost:14569/cdn.local.zender.tv/live/uploads/b8f99a0c-1383-4891-af7a-563b5903d390/2017-11-28/aa807b08-311a-45a1-9a43-fd8ac9a19616.original.png\",\"height\":580},\"headerColor\":\"#B93D87\",\"createdAt\":\"2017-11-28T13:54:56.714Z\",\"targetId\":\"b8f99a0c-1383-4891-af7a-563b5903d390\",\"headerImage\":\"http://localhost:14569/cdn.local.zender.tv/live/uploads/b8f99a0c-1383-4891-af7a-563b5903d390/2017-11-28/aa807b08-311a-45a1-9a43-fd8ac9a19616.original.png\",\"name\":\"Zender Api Channel\",\"icon\":\"http://localhost:14569/cdn.local.zender.tv/live/uploads/b8f99a0c-1383-4891-af7a-563b5903d390/2017-11-28/aa807b08-311a-45a1-9a43-fd8ac9a19616.original.png\",\"iconColor\":\"#B93D87\",\"id\":\"67b5528a-baf4-41bc-b558-b36613ee14a4\",\"type\":\"streams\",\"streams\":[],\"config\":{\"auth\":{\"login\":{\"url\":\"http://localhost:3002/v1/auth/login\"},\"providers\":{\"youtube\":{\"clientId\":\"721563578034-8h5gt7grfb857fsisbom90ln2k1n747h.apps.googleusercontent.com\"},\"google\":{\"clientId\":\"721563578034-8h5gt7grfb857fsisbom90ln2k1n747h.apps.googleusercontent.com\"},\"facebook\":{\"enabled\":true,\"appId\":690051904495300,\"tokenUrl\":\"https://graph.facebook.com/me\"}}},\"pusher\":{\"config\":{\"encrypted\":true,\"cluster\":\"eu\",\"authEndpoint\":\"http://localhost:3002/v1/pusher\"},\"key\":\"968089f2292502112add\"},\"streams\":{\"url\":\"http://localhost:3001/v1/channels/67b5528a-baf4-41bc-b558-b36613ee14a4/streams\"},\"stories\":{\"url\":\"http://localhost:3007/v1/stories/channels/67b5528a-baf4-41bc-b558-b36613ee14a4/stories\"}}}"
										}
									]
								},
								{
									"name": "Get Channel",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code is 200\"] = responseCode.code === 200;",
													"var data = JSON.parse(responseBody);",
													"tests[\"Response has channel id\"] = data.id !== null;",
													"postman.setEnvironmentVariable(\"channelId\", data.id);"
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{adminToken}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{coreApiHost}}/v1/channels/{{channelId}}",
											"host": [
												"{{coreApiHost}}"
											],
											"path": [
												"v1",
												"channels",
												"{{channelId}}"
											]
										},
										"description": "Get a channel."
									},
									"response": [
										{
											"name": "Get Channel",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{coreApiHost}}/v1/channels/{{channelId}}",
													"host": [
														"{{coreApiHost}}"
													],
													"path": [
														"v1",
														"channels",
														"{{channelId}}"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Headers",
													"value": "Content-Type, Authorization, Accept, Cache-Control, X-Requested-With",
													"name": "Access-Control-Allow-Headers",
													"description": "Used in response to a preflight request to indicate which HTTP headers can be used when making the actual request."
												},
												{
													"key": "Access-Control-Allow-Methods",
													"value": "GET,PUT,POST,DELETE",
													"name": "Access-Control-Allow-Methods",
													"description": "Specifies the method or methods allowed when accessing the resource. This is used in response to a preflight request."
												},
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*",
													"name": "Access-Control-Allow-Origin",
													"description": "Specifies a URI that may access the resource. For requests without credentials, the server may specify '*' as a wildcard, thereby allowing any origin to access the resource."
												},
												{
													"key": "Cache-Control",
													"value": "public, max-age=5",
													"name": "Cache-Control",
													"description": "Tells all caching mechanisms from server to client whether they may cache this object. It is measured in seconds"
												},
												{
													"key": "Connection",
													"value": "keep-alive",
													"name": "Connection",
													"description": "Options that are desired for the connection"
												},
												{
													"key": "Content-Length",
													"value": "1514",
													"name": "Content-Length",
													"description": "The length of the response body in octets (8-bit bytes)"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8",
													"name": "Content-Type",
													"description": "The mime type of this content"
												},
												{
													"key": "Date",
													"value": "Tue, 28 Nov 2017 13:55:08 GMT",
													"name": "Date",
													"description": "The date and time that the message was sent"
												},
												{
													"key": "X-Response-Time",
													"value": "116ms",
													"name": "X-Response-Time",
													"description": "Custom header"
												},
												{
													"key": "x-server-time",
													"value": "2017-11-28T13:55:08.289Z",
													"name": "x-server-time",
													"description": "Custom header"
												}
											],
											"cookie": [],
											"body": "{\"stories\":[],\"preview\":{\"width\":579,\"type\":\"image\",\"url\":\"http://localhost:14569/cdn.local.zender.tv/live/uploads/b8f99a0c-1383-4891-af7a-563b5903d390/2017-11-28/aa807b08-311a-45a1-9a43-fd8ac9a19616.original.png\",\"height\":580},\"headerColor\":\"#B93D87\",\"createdAt\":\"2017-11-28T13:54:56.714Z\",\"targetId\":\"b8f99a0c-1383-4891-af7a-563b5903d390\",\"headerImage\":\"http://localhost:14569/cdn.local.zender.tv/live/uploads/b8f99a0c-1383-4891-af7a-563b5903d390/2017-11-28/aa807b08-311a-45a1-9a43-fd8ac9a19616.original.png\",\"name\":\"Zender Api Channel\",\"icon\":\"http://localhost:14569/cdn.local.zender.tv/live/uploads/b8f99a0c-1383-4891-af7a-563b5903d390/2017-11-28/aa807b08-311a-45a1-9a43-fd8ac9a19616.original.png\",\"iconColor\":\"#B93D87\",\"id\":\"67b5528a-baf4-41bc-b558-b36613ee14a4\",\"type\":\"streams\",\"streams\":[],\"config\":{\"auth\":{\"login\":{\"url\":\"http://localhost:3002/v1/auth/login\"},\"providers\":{\"youtube\":{\"clientId\":\"721563578034-8h5gt7grfb857fsisbom90ln2k1n747h.apps.googleusercontent.com\"},\"google\":{\"clientId\":\"721563578034-8h5gt7grfb857fsisbom90ln2k1n747h.apps.googleusercontent.com\"},\"facebook\":{\"enabled\":true,\"appId\":690051904495300,\"tokenUrl\":\"https://graph.facebook.com/me\"}}},\"pusher\":{\"config\":{\"encrypted\":true,\"cluster\":\"eu\",\"authEndpoint\":\"http://localhost:3002/v1/pusher\"},\"key\":\"968089f2292502112add\"},\"streams\":{\"url\":\"http://localhost:3001/v1/channels/67b5528a-baf4-41bc-b558-b36613ee14a4/streams\"},\"stories\":{\"url\":\"http://localhost:3007/v1/stories/channels/67b5528a-baf4-41bc-b558-b36613ee14a4/stories\"}}}"
										}
									]
								},
								{
									"name": "Update Channel",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code is 200\"] = responseCode.code === 200;",
													""
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{adminToken}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\":\"{{channelName}}\",\n  \"type\":\"streams\",\n  \"preview\": {\n    \"width\":579,\n    \"height\":580,\n    \"type\":\"image\",\n    \"url\":\"{{channelPreviewImageUrl}}\"\n    \n  },\n  \"headerImage\":\"{{channelHeaderImageUrl}}\",\n  \"headerColor\":\"#000000\",\n  \"icon\":\"{{channelIconUrl}}\",\n  \"iconColor\":\"#000000\"\n}"
										},
										"url": {
											"raw": "{{coreApiHost}}/v1/channels/{{channelId}}",
											"host": [
												"{{coreApiHost}}"
											],
											"path": [
												"v1",
												"channels",
												"{{channelId}}"
											]
										},
										"description": "Update a channel."
									},
									"response": [
										{
											"name": "Update Channel",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"name\":\"Zender Api Channel Update\",\n\t\"type\":\"streams\",\n\t\"preview\": {\n\t\t\"width\":579,\n\t\t\"height\":580,\n\t\t\"type\":\"image\",\n\t\t\"url\":\"{{getUrl}}\"\n\t\t\n\t},\n\t\"headerImage\":\"{{getUrl}}\",\n\t\"headerColor\":\"#000000\",\n\t\"icon\":\"{{getUrl}}\",\n\t\"iconColor\":\"#000000\"\n}"
												},
												"url": {
													"raw": "{{coreApiHost}}/v1/channels/{{channelId}}",
													"host": [
														"{{coreApiHost}}"
													],
													"path": [
														"v1",
														"channels",
														"{{channelId}}"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Headers",
													"value": "Content-Type, Authorization, Accept, Cache-Control, X-Requested-With",
													"name": "Access-Control-Allow-Headers",
													"description": "Used in response to a preflight request to indicate which HTTP headers can be used when making the actual request."
												},
												{
													"key": "Access-Control-Allow-Methods",
													"value": "GET,PUT,POST,DELETE",
													"name": "Access-Control-Allow-Methods",
													"description": "Specifies the method or methods allowed when accessing the resource. This is used in response to a preflight request."
												},
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*",
													"name": "Access-Control-Allow-Origin",
													"description": "Specifies a URI that may access the resource. For requests without credentials, the server may specify '*' as a wildcard, thereby allowing any origin to access the resource."
												},
												{
													"key": "Connection",
													"value": "keep-alive",
													"name": "Connection",
													"description": "Options that are desired for the connection"
												},
												{
													"key": "Content-Length",
													"value": "1560",
													"name": "Content-Length",
													"description": "The length of the response body in octets (8-bit bytes)"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8",
													"name": "Content-Type",
													"description": "The mime type of this content"
												},
												{
													"key": "Date",
													"value": "Tue, 28 Nov 2017 13:55:16 GMT",
													"name": "Date",
													"description": "The date and time that the message was sent"
												},
												{
													"key": "X-Response-Time",
													"value": "362ms",
													"name": "X-Response-Time",
													"description": "Custom header"
												},
												{
													"key": "x-server-time",
													"value": "2017-11-28T13:55:16.178Z",
													"name": "x-server-time",
													"description": "Custom header"
												}
											],
											"cookie": [],
											"body": "{\"stories\":[],\"preview\":{\"width\":579,\"type\":\"image\",\"url\":\"http://localhost:14569/cdn.local.zender.tv/live/uploads/b8f99a0c-1383-4891-af7a-563b5903d390/2017-11-28/aa807b08-311a-45a1-9a43-fd8ac9a19616.original.png\",\"height\":580},\"createdAt\":\"2017-11-28T13:54:56.714Z\",\"headerColor\":\"#000000\",\"targetId\":\"b8f99a0c-1383-4891-af7a-563b5903d390\",\"headerImage\":\"http://localhost:14569/cdn.local.zender.tv/live/uploads/b8f99a0c-1383-4891-af7a-563b5903d390/2017-11-28/aa807b08-311a-45a1-9a43-fd8ac9a19616.original.png\",\"icon\":\"http://localhost:14569/cdn.local.zender.tv/live/uploads/b8f99a0c-1383-4891-af7a-563b5903d390/2017-11-28/aa807b08-311a-45a1-9a43-fd8ac9a19616.original.png\",\"iconColor\":\"#000000\",\"name\":\"Zender Api Channel Update\",\"id\":\"67b5528a-baf4-41bc-b558-b36613ee14a4\",\"type\":\"streams\",\"updatedAt\":\"2017-11-28T13:55:16.192Z\",\"streams\":[],\"config\":{\"auth\":{\"login\":{\"url\":\"http://localhost:3002/v1/auth/login\"},\"providers\":{\"youtube\":{\"clientId\":\"721563578034-8h5gt7grfb857fsisbom90ln2k1n747h.apps.googleusercontent.com\"},\"google\":{\"clientId\":\"721563578034-8h5gt7grfb857fsisbom90ln2k1n747h.apps.googleusercontent.com\"},\"facebook\":{\"enabled\":true,\"appId\":690051904495300,\"tokenUrl\":\"https://graph.facebook.com/me\"}}},\"pusher\":{\"config\":{\"encrypted\":true,\"cluster\":\"eu\",\"authEndpoint\":\"http://localhost:3002/v1/pusher\"},\"key\":\"968089f2292502112add\"},\"streams\":{\"url\":\"http://localhost:3001/v1/channels/67b5528a-baf4-41bc-b558-b36613ee14a4/streams\"},\"stories\":{\"url\":\"http://localhost:3007/v1/stories/channels/67b5528a-baf4-41bc-b558-b36613ee14a4/stories\"}}}"
										}
									]
								},
								{
									"name": "Delete Channel",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code is 200\"] = responseCode.code === 204;"
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{adminToken}}",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{coreApiHost}}/v1/channels/{{channelId}}",
											"host": [
												"{{coreApiHost}}"
											],
											"path": [
												"v1",
												"channels",
												"{{channelId}}"
											]
										},
										"description": "Delete a channel."
									},
									"response": []
								}
							],
							"_postman_isSubFolder": true
						},
						{
							"name": "Streams",
							"item": [
								{
									"name": "Get Streams",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code is 200\"] = responseCode.code === 200;",
													"var data = JSON.parse(responseBody);",
													"tests[\"Response has stream id\"] = data.id !== null;",
													"postman.setEnvironmentVariable(\"streamId\", data[0].id);"
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{adminToken}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{coreApiHost}}/v1/channels/{{channelId}}/streams/",
											"host": [
												"{{coreApiHost}}"
											],
											"path": [
												"v1",
												"channels",
												"{{channelId}}",
												"streams",
												""
											]
										},
										"description": "Update a stream."
									},
									"response": []
								},
								{
									"name": "Get Listed Streams",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "cb07a1b0-dbcb-4386-8402-f77539548bc5",
												"exec": [
													"tests[\"Status code is 200\"] = responseCode.code === 200;",
													"var data = JSON.parse(responseBody);",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{anonymousToken}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{coreApiHost}}/v1/channels/{{channelId}}/streams/listed?from=2010-06-25T08:21:55.505Z",
											"host": [
												"{{coreApiHost}}"
											],
											"path": [
												"v1",
												"channels",
												"{{channelId}}",
												"streams",
												"listed"
											],
											"query": [
												{
													"key": "from",
													"value": "2010-06-25T08:21:55.505Z"
												}
											]
										},
										"description": "Get all the listed streams with an airdate that lies in the future. Lobby streams will not be returned from this endpoint, neither streams that were marked as \"listed: false\". The id's of the streams will not be returned unless you call this endpoint with admin priviliges. You can also filter the streams by its status ('before', 'live' or 'after'). When the \"from\" param is not provided in the request only streams with future airdates will be returned."
									},
									"response": [
										{
											"name": "Get Listed Streams Success",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{coreApiHost}}/v1/channels/{{channelId}}/streams/listed?from=2010-06-25T08:21:55.505Z",
													"host": [
														"{{coreApiHost}}"
													],
													"path": [
														"v1",
														"channels",
														"{{channelId}}",
														"streams",
														"listed"
													],
													"query": [
														{
															"key": "from",
															"value": "2010-06-25T08:21:55.505Z"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Date",
													"value": "Tue, 25 Jun 2019 08:36:26 GMT"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "326"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "Access-Control-Allow-Methods",
													"value": "GET,PUT,POST,DELETE"
												},
												{
													"key": "Access-Control-Allow-Credentials",
													"value": "true"
												},
												{
													"key": "Access-Control-Allow-Headers",
													"value": "Content-Type, Authorization, Accept, Cache-Control, X-Requested-With, Origin"
												},
												{
													"key": "Access-Control-Expose-Headers",
													"value": "X-Server-Time, X-Response-Time"
												},
												{
													"key": "Vary",
													"value": "Accept-Encoding"
												},
												{
													"key": "X-Response-Time",
													"value": "53ms"
												},
												{
													"key": "x-server-time",
													"value": "2019-06-25T08:36:26.722Z"
												}
											],
											"cookie": [],
											"body": "[\n    {\n        \"preview\": {\n            \"type\": \"image\",\n            \"url\": \"https://s3-eu-west-1.amazonaws.com/cdn.staging.zender.tv/live/uploads/2808b5c6-76a1-4d18-93f5-23ea9f6246da/2018-06-25/792ccdff-e4e8-47cd-bb73-ded58a8f582a.original.png\"\n        },\n        \"airdate\": \"2018-06-25T12:41:00.000Z\",\n        \"published\": false,\n        \"state\": \"live\",\n        \"title\": \"Test Phenix\",\n        \"description\": \"Test Phenix\"\n    }\n]"
										},
										{
											"name": "Get Listed Streams Channel Not Found",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{coreApiHost}}/v1/channels/dsd/streams/listed?from=2010-06-25T08:21:55.505Z",
													"host": [
														"{{coreApiHost}}"
													],
													"path": [
														"v1",
														"channels",
														"dsd",
														"streams",
														"listed"
													],
													"query": [
														{
															"key": "from",
															"value": "2010-06-25T08:21:55.505Z"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Date",
													"value": "Tue, 25 Jun 2019 08:39:18 GMT"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "73"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "Access-Control-Allow-Methods",
													"value": "GET,PUT,POST,DELETE"
												},
												{
													"key": "Access-Control-Allow-Credentials",
													"value": "true"
												},
												{
													"key": "Access-Control-Allow-Headers",
													"value": "Content-Type, Authorization, Accept, Cache-Control, X-Requested-With, Origin"
												},
												{
													"key": "Access-Control-Expose-Headers",
													"value": "X-Server-Time, X-Response-Time"
												},
												{
													"key": "Vary",
													"value": "Accept-Encoding"
												},
												{
													"key": "X-Response-Time",
													"value": "43ms"
												},
												{
													"key": "x-server-time",
													"value": "2019-06-25T08:39:18.500Z"
												}
											],
											"cookie": [],
											"body": "{\n    \"code\": \"NOT_FOUND\",\n    \"message\": \"Could not find targetId for channel: <channel-id>\"\n}"
										}
									]
								},
								{
									"name": "Get Channel Preview Image Upload Url copy",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code is 200\"] = responseCode.code === 200;",
													"var data = JSON.parse(responseBody);",
													"tests[\"Response has upload url\"] = data.uploadUrl !== null;",
													"tests[\"Response has get url\"] = data.getUrl !== null;",
													"postman.setEnvironmentVariable(\"streamPreviewImageUploadUrl\", data.uploadUrl);",
													"postman.setEnvironmentVariable(\"streamPreviewImageUrl\", data.resizedUrls.medium);"
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{adminToken}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"id\":\"{{$guid}}\",\n  \"filename\":\"{{channelName}}-preview-image.png\"\n}"
										},
										"url": {
											"raw": "{{coreApiHost}}/v1/upload",
											"host": [
												"{{coreApiHost}}"
											],
											"path": [
												"v1",
												"upload"
											]
										}
									},
									"response": []
								},
								{
									"name": "Upload Channel Preview Image copy",
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "image/png"
											}
										],
										"body": {
											"mode": "file",
											"file": {}
										},
										"url": {
											"raw": "{{streamPreviewImageUploadUrl}}",
											"host": [
												"{{streamPreviewImageUploadUrl}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create Stream",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "7d77c0e8-3dfc-4610-82db-0daf8b6182bc",
												"exec": [
													"tests[\"Status code is 200\"] = responseCode.code === 200;",
													"var data = JSON.parse(responseBody);",
													"tests[\"Response has stream id\"] = data.id !== null;",
													"postman.setEnvironmentVariable(\"streamId\", data.id);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{adminToken}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"title\":\"{{channelName}}\",\n  \"custom\":{\n    \"splash_enabled\":false,\n    \"splash_loginrequired\":true,\n    \"splash_url\":\"http://zender.tv\"\n  },\n  \"description\":\"{{channelName}} Stream\",\n  \"preview\": {\n    \"type\":\"image\",\n    \"url\":\"{{streamPreviewImageUrl}}\"\n  },\n  \"airdate\":\"2017-11-27T10:30:00.000Z\",\n  \"state\":\"before\",\n  \"interactions\":[\"media\",\"shoutbox\",\"emojis\",\"polls\"],\n  \"lobby\": false,\n  \"listed\": true\n}"
										},
										"url": {
											"raw": "{{coreApiHost}}/v1/channels/{{channelId}}/streams",
											"host": [
												"{{coreApiHost}}"
											],
											"path": [
												"v1",
												"channels",
												"{{channelId}}",
												"streams"
											]
										},
										"description": "Create a stream for a channel."
									},
									"response": [
										{
											"name": "Create Stream",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"title\":\"Zender API Stream\",\n\t\"custom\":{\n\t\t\"splash_enabled\":true,\n\t\t\"splash_loginrequired\":true,\n\t\t\"splash_url\":\"http://zender.tv\"\n\t},\n\t\"description\":\"Zender API Stream\",\n\t\"preview\": {\n\t\t\"type\":\"image\",\n\t\t\"url\":\"{{getUrl}}\"\n\t},\n\t\"airdate\":\"2017-11-27T10:30:00.000Z\",\n\t\"state\":\"before\",\n\t\"interactions\":[\"media\",\"shoutbox\",\"emojis\",\"polls\"],\n\t\"lobby\": false,\n\t\"listed\": true\n}"
												},
												"url": {
													"raw": "{{coreApiHost}}/v1/channels/{{channelId}}/streams",
													"host": [
														"{{coreApiHost}}"
													],
													"path": [
														"v1",
														"channels",
														"{{channelId}}",
														"streams"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Headers",
													"value": "Content-Type, Authorization, Accept, Cache-Control, X-Requested-With",
													"name": "Access-Control-Allow-Headers",
													"description": "Used in response to a preflight request to indicate which HTTP headers can be used when making the actual request."
												},
												{
													"key": "Access-Control-Allow-Methods",
													"value": "GET,PUT,POST,DELETE",
													"name": "Access-Control-Allow-Methods",
													"description": "Specifies the method or methods allowed when accessing the resource. This is used in response to a preflight request."
												},
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*",
													"name": "Access-Control-Allow-Origin",
													"description": "Specifies a URI that may access the resource. For requests without credentials, the server may specify '*' as a wildcard, thereby allowing any origin to access the resource."
												},
												{
													"key": "Connection",
													"value": "keep-alive",
													"name": "Connection",
													"description": "Options that are desired for the connection"
												},
												{
													"key": "Content-Length",
													"value": "1450",
													"name": "Content-Length",
													"description": "The length of the response body in octets (8-bit bytes)"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8",
													"name": "Content-Type",
													"description": "The mime type of this content"
												},
												{
													"key": "Date",
													"value": "Tue, 28 Nov 2017 13:55:31 GMT",
													"name": "Date",
													"description": "The date and time that the message was sent"
												},
												{
													"key": "X-Response-Time",
													"value": "232ms",
													"name": "X-Response-Time",
													"description": "Custom header"
												},
												{
													"key": "x-server-time",
													"value": "2017-11-28T13:55:31.526Z",
													"name": "x-server-time",
													"description": "Custom header"
												}
											],
											"cookie": [],
											"body": "{\"title\":\"Zender API Stream\",\"custom\":{\"splash_enabled\":true,\"splash_loginrequired\":true,\"splash_url\":\"http://zender.tv\"},\"description\":\"Zender API Stream\",\"preview\":{\"type\":\"image\",\"url\":\"http://localhost:14569/cdn.local.zender.tv/live/uploads/b8f99a0c-1383-4891-af7a-563b5903d390/2017-11-28/aa807b08-311a-45a1-9a43-fd8ac9a19616.original.png\"},\"airdate\":\"2017-11-27T10:30:00.000Z\",\"state\":\"before\",\"interactions\":{\"media\":{\"pusher\":{\"channel\":\"stream-a2993350-cb51-437d-bf39-41e110a71f5a-media\"},\"endpoint\":\"http://192.168.0.169:3003/v1/channels/67b5528a-baf4-41bc-b558-b36613ee14a4/streams/a2993350-cb51-437d-bf39-41e110a71f5a/media\"},\"shoutbox\":{\"pusher\":{\"channel\":\"stream-a2993350-cb51-437d-bf39-41e110a71f5a-shoutbox\"},\"endpoint\":\"http://192.168.0.169:3004/v1/channels/67b5528a-baf4-41bc-b558-b36613ee14a4/streams/a2993350-cb51-437d-bf39-41e110a71f5a/shoutbox\"},\"emojis\":{\"pusher\":{\"channel\":\"stream-a2993350-cb51-437d-bf39-41e110a71f5a-emojis\"},\"endpoint\":\"http://192.168.0.169:3005/v1/channels/67b5528a-baf4-41bc-b558-b36613ee14a4/streams/a2993350-cb51-437d-bf39-41e110a71f5a/emojis\"},\"polls\":{\"pusher\":{\"channel\":\"stream-a2993350-cb51-437d-bf39-41e110a71f5a-polls\"},\"endpoint\":\"http://192.168.0.169:3006/v1/channels/67b5528a-baf4-41bc-b558-b36613ee14a4/streams/a2993350-cb51-437d-bf39-41e110a71f5a/polls\"}},\"channelId\":\"67b5528a-baf4-41bc-b558-b36613ee14a4\",\"id\":\"a2993350-cb51-437d-bf39-41e110a71f5a\",\"createdAt\":\"2017-11-28T13:55:31.569Z\",\"lobby\": false,\"listed\": true}"
										}
									]
								},
								{
									"name": "Update Stream",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code is 200\"] = responseCode.code === 200;",
													""
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{adminToken}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"title\":\"Zender API Stream Update\",\n\t\"custom\":{\n\t\t\"splash_enabled\": true,\n\t\t\"splash_loginrequired\": false,\n\t\t\"splash_url\": \"http://zender.tv\"\n\t},\n\t\"description\":\"Zender API Stream Update\",\n\t\"preview\": {\n\t\t\"type\": \"image\",\n\t\t\"url\": \"{{getUrl}}\"\n\t},\n\t\"airdate\": \"2017-11-27T10:30:00.000Z\",\n\t\"state\": \"live\",\n\t\"published\": true,\n\t\"lobby\": true\n}"
										},
										"url": {
											"raw": "{{coreApiHost}}/v1/channels/{{channelId}}/streams/{{streamId}}",
											"host": [
												"{{coreApiHost}}"
											],
											"path": [
												"v1",
												"channels",
												"{{channelId}}",
												"streams",
												"{{streamId}}"
											]
										},
										"description": "Update a stream."
									},
									"response": []
								},
								{
									"name": "Unpublish Stream",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code is 200\"] = responseCode.code === 200;",
													""
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{adminToken}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"published\": false\n}"
										},
										"url": {
											"raw": "{{coreApiHost}}/v1/channels/{{channelId}}/streams/{{streamId}}",
											"host": [
												"{{coreApiHost}}"
											],
											"path": [
												"v1",
												"channels",
												"{{channelId}}",
												"streams",
												"{{streamId}}"
											]
										},
										"description": "Update a stream."
									},
									"response": [
										{
											"name": "Update Stream",
											"originalRequest": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{adminToken}}",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"title\":\"Zender API Stream Update\",\n\t\"custom\":{\n\t\t\"splash_enabled\": true,\n\t\t\"splash_loginrequired\": false,\n\t\t\"splash_url\": \"http://zender.tv\"\n\t},\n\t\"description\":\"Zender API Stream Update\",\n\t\"preview\": {\n\t\t\"type\": \"image\",\n\t\t\"url\": \"{{getUrl}}\"\n\t},\n\t\"airdate\": \"2017-11-27T10:30:00.000Z\",\n\t\"state\": \"live\",\n\t\"published\": true\n}"
												},
												"url": {
													"raw": "{{coreApiHost}}/v1/channels/{{channelId}}/streams/{{streamId}}",
													"host": [
														"{{coreApiHost}}"
													],
													"path": [
														"v1",
														"channels",
														"{{channelId}}",
														"streams",
														"{{streamId}}"
													]
												},
												"description": "Update a stream."
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Headers",
													"value": "Content-Type, Authorization, Accept, Cache-Control, X-Requested-With",
													"name": "Access-Control-Allow-Headers",
													"description": "Used in response to a preflight request to indicate which HTTP headers can be used when making the actual request."
												},
												{
													"key": "Access-Control-Allow-Methods",
													"value": "GET,PUT,POST,DELETE",
													"name": "Access-Control-Allow-Methods",
													"description": "Specifies the method or methods allowed when accessing the resource. This is used in response to a preflight request."
												},
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*",
													"name": "Access-Control-Allow-Origin",
													"description": "Specifies a URI that may access the resource. For requests without credentials, the server may specify '*' as a wildcard, thereby allowing any origin to access the resource."
												},
												{
													"key": "Connection",
													"value": "keep-alive",
													"name": "Connection",
													"description": "Options that are desired for the connection"
												},
												{
													"key": "Content-Length",
													"value": "1520",
													"name": "Content-Length",
													"description": "The length of the response body in octets (8-bit bytes)"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8",
													"name": "Content-Type",
													"description": "The mime type of this content"
												},
												{
													"key": "Date",
													"value": "Tue, 28 Nov 2017 10:41:21 GMT",
													"name": "Date",
													"description": "The date and time that the message was sent"
												},
												{
													"key": "X-Response-Time",
													"value": "295ms",
													"name": "X-Response-Time",
													"description": "Custom header"
												},
												{
													"key": "x-server-time",
													"value": "2017-11-28T10:41:20.726Z",
													"name": "x-server-time",
													"description": "Custom header"
												}
											],
											"cookie": [],
											"body": "{\"preview\":{\"type\":\"image\",\"url\":\"http://localhost:14569/cdn.local.zender.tv/live/uploads/e1cc9d4b-2969-4d50-a74f-cb39ac5f5f68/2017-11-28/6543fcdc-b272-4569-bba0-dd609a65fb29.original.png\"},\"createdAt\":\"2017-11-28T10:38:44.210Z\",\"airdate\":\"2017-11-27T10:30:00.000Z\",\"custom\":{\"splash_enabled\":true,\"splash_url\":\"http://zender.tv\",\"splash_loginrequired\":false},\"description\":\"Zender API Stream Update\",\"published\":false,\"id\":\"f4a89037-58ba-41f1-82fa-3e5e83cfdf6e\",\"state\":\"live\",\"title\":\"Zender API Stream Update\",\"channelId\":\"94a22170-712c-4c6f-b31e-febe86aeafc2\",\"interactions\":{\"media\":{\"pusher\":{\"channel\":\"stream-f4a89037-58ba-41f1-82fa-3e5e83cfdf6e-media\"},\"endpoint\":\"http://192.168.0.169:3003/v1/channels/94a22170-712c-4c6f-b31e-febe86aeafc2/streams/f4a89037-58ba-41f1-82fa-3e5e83cfdf6e/media\"},\"shoutbox\":{\"pusher\":{\"channel\":\"stream-f4a89037-58ba-41f1-82fa-3e5e83cfdf6e-shoutbox\"},\"endpoint\":\"http://192.168.0.169:3004/v1/channels/94a22170-712c-4c6f-b31e-febe86aeafc2/streams/f4a89037-58ba-41f1-82fa-3e5e83cfdf6e/shoutbox\"},\"emojis\":{\"pusher\":{\"channel\":\"stream-f4a89037-58ba-41f1-82fa-3e5e83cfdf6e-emojis\"},\"endpoint\":\"http://192.168.0.169:3005/v1/channels/94a22170-712c-4c6f-b31e-febe86aeafc2/streams/f4a89037-58ba-41f1-82fa-3e5e83cfdf6e/emojis\"},\"polls\":{\"pusher\":{\"channel\":\"stream-f4a89037-58ba-41f1-82fa-3e5e83cfdf6e-polls\"},\"endpoint\":\"http://192.168.0.169:3006/v1/channels/94a22170-712c-4c6f-b31e-febe86aeafc2/streams/f4a89037-58ba-41f1-82fa-3e5e83cfdf6e/polls\"}},\"updatedAt\":\"2017-11-28T10:41:20.753Z\"}"
										},
										{
											"name": "Publish Stream",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{coreApiHost}}/v1/channels/{{channelId}}/streams/{{streamId}}",
													"host": [
														"{{coreApiHost}}"
													],
													"path": [
														"v1",
														"channels",
														"{{channelId}}",
														"streams",
														"{{streamId}}"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Headers",
													"value": "Content-Type, Authorization, Accept, Cache-Control, X-Requested-With",
													"name": "Access-Control-Allow-Headers",
													"description": "Used in response to a preflight request to indicate which HTTP headers can be used when making the actual request."
												},
												{
													"key": "Access-Control-Allow-Methods",
													"value": "GET,PUT,POST,DELETE",
													"name": "Access-Control-Allow-Methods",
													"description": "Specifies the method or methods allowed when accessing the resource. This is used in response to a preflight request."
												},
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*",
													"name": "Access-Control-Allow-Origin",
													"description": "Specifies a URI that may access the resource. For requests without credentials, the server may specify '*' as a wildcard, thereby allowing any origin to access the resource."
												},
												{
													"key": "Connection",
													"value": "keep-alive",
													"name": "Connection",
													"description": "Options that are desired for the connection"
												},
												{
													"key": "Content-Length",
													"value": "1520",
													"name": "Content-Length",
													"description": "The length of the response body in octets (8-bit bytes)"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8",
													"name": "Content-Type",
													"description": "The mime type of this content"
												},
												{
													"key": "Date",
													"value": "Tue, 28 Nov 2017 10:41:21 GMT",
													"name": "Date",
													"description": "The date and time that the message was sent"
												},
												{
													"key": "X-Response-Time",
													"value": "295ms",
													"name": "X-Response-Time",
													"description": "Custom header"
												},
												{
													"key": "x-server-time",
													"value": "2017-11-28T10:41:20.726Z",
													"name": "x-server-time",
													"description": "Custom header"
												}
											],
											"cookie": [],
											"body": "{\n    \"published\": true\n}"
										},
										{
											"name": "Unpublish Stream",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"published\": true\n}"
												},
												"url": {
													"raw": "{{coreApiHost}}/v1/channels/{{channelId}}/streams/{{streamId}}",
													"host": [
														"{{coreApiHost}}"
													],
													"path": [
														"v1",
														"channels",
														"{{channelId}}",
														"streams",
														"{{streamId}}"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Headers",
													"value": "Content-Type, Authorization, Accept, Cache-Control, X-Requested-With",
													"name": "Access-Control-Allow-Headers",
													"description": "Used in response to a preflight request to indicate which HTTP headers can be used when making the actual request."
												},
												{
													"key": "Access-Control-Allow-Methods",
													"value": "GET,PUT,POST,DELETE",
													"name": "Access-Control-Allow-Methods",
													"description": "Specifies the method or methods allowed when accessing the resource. This is used in response to a preflight request."
												},
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*",
													"name": "Access-Control-Allow-Origin",
													"description": "Specifies a URI that may access the resource. For requests without credentials, the server may specify '*' as a wildcard, thereby allowing any origin to access the resource."
												},
												{
													"key": "Connection",
													"value": "keep-alive",
													"name": "Connection",
													"description": "Options that are desired for the connection"
												},
												{
													"key": "Content-Length",
													"value": "1520",
													"name": "Content-Length",
													"description": "The length of the response body in octets (8-bit bytes)"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8",
													"name": "Content-Type",
													"description": "The mime type of this content"
												},
												{
													"key": "Date",
													"value": "Tue, 28 Nov 2017 10:41:21 GMT",
													"name": "Date",
													"description": "The date and time that the message was sent"
												},
												{
													"key": "X-Response-Time",
													"value": "295ms",
													"name": "X-Response-Time",
													"description": "Custom header"
												},
												{
													"key": "x-server-time",
													"value": "2017-11-28T10:41:20.726Z",
													"name": "x-server-time",
													"description": "Custom header"
												}
											],
											"cookie": [],
											"body": "{\n    \"published\": false,\n}"
										}
									]
								},
								{
									"name": "Publish Stream",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code is 200\"] = responseCode.code === 200;",
													""
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{adminToken}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"published\": true\n}"
										},
										"url": {
											"raw": "{{coreApiHost}}/v1/channels/{{channelId}}/streams/{{streamId}}",
											"host": [
												"{{coreApiHost}}"
											],
											"path": [
												"v1",
												"channels",
												"{{channelId}}",
												"streams",
												"{{streamId}}"
											]
										},
										"description": "Update a stream."
									},
									"response": [
										{
											"name": "Update Stream",
											"originalRequest": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{adminToken}}",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"title\":\"Zender API Stream Update\",\n\t\"custom\":{\n\t\t\"splash_enabled\": true,\n\t\t\"splash_loginrequired\": false,\n\t\t\"splash_url\": \"http://zender.tv\"\n\t},\n\t\"description\":\"Zender API Stream Update\",\n\t\"preview\": {\n\t\t\"type\": \"image\",\n\t\t\"url\": \"{{getUrl}}\"\n\t},\n\t\"airdate\": \"2017-11-27T10:30:00.000Z\",\n\t\"state\": \"live\",\n\t\"published\": true\n}"
												},
												"url": {
													"raw": "{{coreApiHost}}/v1/channels/{{channelId}}/streams/{{streamId}}",
													"host": [
														"{{coreApiHost}}"
													],
													"path": [
														"v1",
														"channels",
														"{{channelId}}",
														"streams",
														"{{streamId}}"
													]
												},
												"description": "Update a stream."
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Headers",
													"value": "Content-Type, Authorization, Accept, Cache-Control, X-Requested-With",
													"name": "Access-Control-Allow-Headers",
													"description": "Used in response to a preflight request to indicate which HTTP headers can be used when making the actual request."
												},
												{
													"key": "Access-Control-Allow-Methods",
													"value": "GET,PUT,POST,DELETE",
													"name": "Access-Control-Allow-Methods",
													"description": "Specifies the method or methods allowed when accessing the resource. This is used in response to a preflight request."
												},
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*",
													"name": "Access-Control-Allow-Origin",
													"description": "Specifies a URI that may access the resource. For requests without credentials, the server may specify '*' as a wildcard, thereby allowing any origin to access the resource."
												},
												{
													"key": "Connection",
													"value": "keep-alive",
													"name": "Connection",
													"description": "Options that are desired for the connection"
												},
												{
													"key": "Content-Length",
													"value": "1520",
													"name": "Content-Length",
													"description": "The length of the response body in octets (8-bit bytes)"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8",
													"name": "Content-Type",
													"description": "The mime type of this content"
												},
												{
													"key": "Date",
													"value": "Tue, 28 Nov 2017 10:41:21 GMT",
													"name": "Date",
													"description": "The date and time that the message was sent"
												},
												{
													"key": "X-Response-Time",
													"value": "295ms",
													"name": "X-Response-Time",
													"description": "Custom header"
												},
												{
													"key": "x-server-time",
													"value": "2017-11-28T10:41:20.726Z",
													"name": "x-server-time",
													"description": "Custom header"
												}
											],
											"cookie": [],
											"body": "{\"preview\":{\"type\":\"image\",\"url\":\"http://localhost:14569/cdn.local.zender.tv/live/uploads/e1cc9d4b-2969-4d50-a74f-cb39ac5f5f68/2017-11-28/6543fcdc-b272-4569-bba0-dd609a65fb29.original.png\"},\"createdAt\":\"2017-11-28T10:38:44.210Z\",\"airdate\":\"2017-11-27T10:30:00.000Z\",\"custom\":{\"splash_enabled\":true,\"splash_url\":\"http://zender.tv\",\"splash_loginrequired\":false},\"description\":\"Zender API Stream Update\",\"published\":false,\"id\":\"f4a89037-58ba-41f1-82fa-3e5e83cfdf6e\",\"state\":\"live\",\"title\":\"Zender API Stream Update\",\"channelId\":\"94a22170-712c-4c6f-b31e-febe86aeafc2\",\"interactions\":{\"media\":{\"pusher\":{\"channel\":\"stream-f4a89037-58ba-41f1-82fa-3e5e83cfdf6e-media\"},\"endpoint\":\"http://192.168.0.169:3003/v1/channels/94a22170-712c-4c6f-b31e-febe86aeafc2/streams/f4a89037-58ba-41f1-82fa-3e5e83cfdf6e/media\"},\"shoutbox\":{\"pusher\":{\"channel\":\"stream-f4a89037-58ba-41f1-82fa-3e5e83cfdf6e-shoutbox\"},\"endpoint\":\"http://192.168.0.169:3004/v1/channels/94a22170-712c-4c6f-b31e-febe86aeafc2/streams/f4a89037-58ba-41f1-82fa-3e5e83cfdf6e/shoutbox\"},\"emojis\":{\"pusher\":{\"channel\":\"stream-f4a89037-58ba-41f1-82fa-3e5e83cfdf6e-emojis\"},\"endpoint\":\"http://192.168.0.169:3005/v1/channels/94a22170-712c-4c6f-b31e-febe86aeafc2/streams/f4a89037-58ba-41f1-82fa-3e5e83cfdf6e/emojis\"},\"polls\":{\"pusher\":{\"channel\":\"stream-f4a89037-58ba-41f1-82fa-3e5e83cfdf6e-polls\"},\"endpoint\":\"http://192.168.0.169:3006/v1/channels/94a22170-712c-4c6f-b31e-febe86aeafc2/streams/f4a89037-58ba-41f1-82fa-3e5e83cfdf6e/polls\"}},\"updatedAt\":\"2017-11-28T10:41:20.753Z\"}"
										},
										{
											"name": "Publish Stream",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{coreApiHost}}/v1/channels/{{channelId}}/streams/{{streamId}}",
													"host": [
														"{{coreApiHost}}"
													],
													"path": [
														"v1",
														"channels",
														"{{channelId}}",
														"streams",
														"{{streamId}}"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Headers",
													"value": "Content-Type, Authorization, Accept, Cache-Control, X-Requested-With",
													"name": "Access-Control-Allow-Headers",
													"description": "Used in response to a preflight request to indicate which HTTP headers can be used when making the actual request."
												},
												{
													"key": "Access-Control-Allow-Methods",
													"value": "GET,PUT,POST,DELETE",
													"name": "Access-Control-Allow-Methods",
													"description": "Specifies the method or methods allowed when accessing the resource. This is used in response to a preflight request."
												},
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*",
													"name": "Access-Control-Allow-Origin",
													"description": "Specifies a URI that may access the resource. For requests without credentials, the server may specify '*' as a wildcard, thereby allowing any origin to access the resource."
												},
												{
													"key": "Connection",
													"value": "keep-alive",
													"name": "Connection",
													"description": "Options that are desired for the connection"
												},
												{
													"key": "Content-Length",
													"value": "1520",
													"name": "Content-Length",
													"description": "The length of the response body in octets (8-bit bytes)"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8",
													"name": "Content-Type",
													"description": "The mime type of this content"
												},
												{
													"key": "Date",
													"value": "Tue, 28 Nov 2017 10:41:21 GMT",
													"name": "Date",
													"description": "The date and time that the message was sent"
												},
												{
													"key": "X-Response-Time",
													"value": "295ms",
													"name": "X-Response-Time",
													"description": "Custom header"
												},
												{
													"key": "x-server-time",
													"value": "2017-11-28T10:41:20.726Z",
													"name": "x-server-time",
													"description": "Custom header"
												}
											],
											"cookie": [],
											"body": "{\n    \"published\": true\n}"
										},
										{
											"name": "Unpublish Stream",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"published\": true\n}"
												},
												"url": {
													"raw": "{{coreApiHost}}/v1/channels/{{channelId}}/streams/{{streamId}}",
													"host": [
														"{{coreApiHost}}"
													],
													"path": [
														"v1",
														"channels",
														"{{channelId}}",
														"streams",
														"{{streamId}}"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Headers",
													"value": "Content-Type, Authorization, Accept, Cache-Control, X-Requested-With",
													"name": "Access-Control-Allow-Headers",
													"description": "Used in response to a preflight request to indicate which HTTP headers can be used when making the actual request."
												},
												{
													"key": "Access-Control-Allow-Methods",
													"value": "GET,PUT,POST,DELETE",
													"name": "Access-Control-Allow-Methods",
													"description": "Specifies the method or methods allowed when accessing the resource. This is used in response to a preflight request."
												},
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*",
													"name": "Access-Control-Allow-Origin",
													"description": "Specifies a URI that may access the resource. For requests without credentials, the server may specify '*' as a wildcard, thereby allowing any origin to access the resource."
												},
												{
													"key": "Connection",
													"value": "keep-alive",
													"name": "Connection",
													"description": "Options that are desired for the connection"
												},
												{
													"key": "Content-Length",
													"value": "1520",
													"name": "Content-Length",
													"description": "The length of the response body in octets (8-bit bytes)"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8",
													"name": "Content-Type",
													"description": "The mime type of this content"
												},
												{
													"key": "Date",
													"value": "Tue, 28 Nov 2017 10:41:21 GMT",
													"name": "Date",
													"description": "The date and time that the message was sent"
												},
												{
													"key": "X-Response-Time",
													"value": "295ms",
													"name": "X-Response-Time",
													"description": "Custom header"
												},
												{
													"key": "x-server-time",
													"value": "2017-11-28T10:41:20.726Z",
													"name": "x-server-time",
													"description": "Custom header"
												}
											],
											"cookie": [],
											"body": "{\n    \"published\": false,\n}"
										}
									]
								},
								{
									"name": "Delete Stream",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code is 200\"] = responseCode.code === 204;"
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{adminToken}}",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{coreApiHost}}/v1/channels/{{channelId}}/streams/{{streamId}}",
											"host": [
												"{{coreApiHost}}"
											],
											"path": [
												"v1",
												"channels",
												"{{channelId}}",
												"streams",
												"{{streamId}}"
											]
										},
										"description": "Delete a stream."
									},
									"response": []
								},
								{
									"name": "SetState Stream",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code is 200\"] = responseCode.code === 200;",
													""
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{adminToken}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"state\": \"live\"\n}"
										},
										"url": {
											"raw": "{{coreApiHost}}/v1/channels/{{channelId}}/streams/{{streamId}}",
											"host": [
												"{{coreApiHost}}"
											],
											"path": [
												"v1",
												"channels",
												"{{channelId}}",
												"streams",
												"{{streamId}}"
											]
										},
										"description": "Update a stream.\n\n- `before`:\n- `live`:\n- `after`:"
									},
									"response": [
										{
											"name": "Unpublish Stream",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"published\": true\n}"
												},
												"url": {
													"raw": "{{coreApiHost}}/v1/channels/{{channelId}}/streams/{{streamId}}",
													"host": [
														"{{coreApiHost}}"
													],
													"path": [
														"v1",
														"channels",
														"{{channelId}}",
														"streams",
														"{{streamId}}"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Headers",
													"value": "Content-Type, Authorization, Accept, Cache-Control, X-Requested-With",
													"name": "Access-Control-Allow-Headers",
													"description": "Used in response to a preflight request to indicate which HTTP headers can be used when making the actual request."
												},
												{
													"key": "Access-Control-Allow-Methods",
													"value": "GET,PUT,POST,DELETE",
													"name": "Access-Control-Allow-Methods",
													"description": "Specifies the method or methods allowed when accessing the resource. This is used in response to a preflight request."
												},
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*",
													"name": "Access-Control-Allow-Origin",
													"description": "Specifies a URI that may access the resource. For requests without credentials, the server may specify '*' as a wildcard, thereby allowing any origin to access the resource."
												},
												{
													"key": "Connection",
													"value": "keep-alive",
													"name": "Connection",
													"description": "Options that are desired for the connection"
												},
												{
													"key": "Content-Length",
													"value": "1520",
													"name": "Content-Length",
													"description": "The length of the response body in octets (8-bit bytes)"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8",
													"name": "Content-Type",
													"description": "The mime type of this content"
												},
												{
													"key": "Date",
													"value": "Tue, 28 Nov 2017 10:41:21 GMT",
													"name": "Date",
													"description": "The date and time that the message was sent"
												},
												{
													"key": "X-Response-Time",
													"value": "295ms",
													"name": "X-Response-Time",
													"description": "Custom header"
												},
												{
													"key": "x-server-time",
													"value": "2017-11-28T10:41:20.726Z",
													"name": "x-server-time",
													"description": "Custom header"
												}
											],
											"cookie": [],
											"body": "{\n    \"published\": false,\n}"
										},
										{
											"name": "Update Stream",
											"originalRequest": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{adminToken}}",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"title\":\"Zender API Stream Update\",\n\t\"custom\":{\n\t\t\"splash_enabled\": true,\n\t\t\"splash_loginrequired\": false,\n\t\t\"splash_url\": \"http://zender.tv\"\n\t},\n\t\"description\":\"Zender API Stream Update\",\n\t\"preview\": {\n\t\t\"type\": \"image\",\n\t\t\"url\": \"{{getUrl}}\"\n\t},\n\t\"airdate\": \"2017-11-27T10:30:00.000Z\",\n\t\"state\": \"live\",\n\t\"published\": true\n}"
												},
												"url": {
													"raw": "{{coreApiHost}}/v1/channels/{{channelId}}/streams/{{streamId}}",
													"host": [
														"{{coreApiHost}}"
													],
													"path": [
														"v1",
														"channels",
														"{{channelId}}",
														"streams",
														"{{streamId}}"
													]
												},
												"description": "Update a stream."
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Headers",
													"value": "Content-Type, Authorization, Accept, Cache-Control, X-Requested-With",
													"name": "Access-Control-Allow-Headers",
													"description": "Used in response to a preflight request to indicate which HTTP headers can be used when making the actual request."
												},
												{
													"key": "Access-Control-Allow-Methods",
													"value": "GET,PUT,POST,DELETE",
													"name": "Access-Control-Allow-Methods",
													"description": "Specifies the method or methods allowed when accessing the resource. This is used in response to a preflight request."
												},
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*",
													"name": "Access-Control-Allow-Origin",
													"description": "Specifies a URI that may access the resource. For requests without credentials, the server may specify '*' as a wildcard, thereby allowing any origin to access the resource."
												},
												{
													"key": "Connection",
													"value": "keep-alive",
													"name": "Connection",
													"description": "Options that are desired for the connection"
												},
												{
													"key": "Content-Length",
													"value": "1520",
													"name": "Content-Length",
													"description": "The length of the response body in octets (8-bit bytes)"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8",
													"name": "Content-Type",
													"description": "The mime type of this content"
												},
												{
													"key": "Date",
													"value": "Tue, 28 Nov 2017 10:41:21 GMT",
													"name": "Date",
													"description": "The date and time that the message was sent"
												},
												{
													"key": "X-Response-Time",
													"value": "295ms",
													"name": "X-Response-Time",
													"description": "Custom header"
												},
												{
													"key": "x-server-time",
													"value": "2017-11-28T10:41:20.726Z",
													"name": "x-server-time",
													"description": "Custom header"
												}
											],
											"cookie": [],
											"body": "{\"preview\":{\"type\":\"image\",\"url\":\"http://localhost:14569/cdn.local.zender.tv/live/uploads/e1cc9d4b-2969-4d50-a74f-cb39ac5f5f68/2017-11-28/6543fcdc-b272-4569-bba0-dd609a65fb29.original.png\"},\"createdAt\":\"2017-11-28T10:38:44.210Z\",\"airdate\":\"2017-11-27T10:30:00.000Z\",\"custom\":{\"splash_enabled\":true,\"splash_url\":\"http://zender.tv\",\"splash_loginrequired\":false},\"description\":\"Zender API Stream Update\",\"published\":false,\"id\":\"f4a89037-58ba-41f1-82fa-3e5e83cfdf6e\",\"state\":\"live\",\"title\":\"Zender API Stream Update\",\"channelId\":\"94a22170-712c-4c6f-b31e-febe86aeafc2\",\"interactions\":{\"media\":{\"pusher\":{\"channel\":\"stream-f4a89037-58ba-41f1-82fa-3e5e83cfdf6e-media\"},\"endpoint\":\"http://192.168.0.169:3003/v1/channels/94a22170-712c-4c6f-b31e-febe86aeafc2/streams/f4a89037-58ba-41f1-82fa-3e5e83cfdf6e/media\"},\"shoutbox\":{\"pusher\":{\"channel\":\"stream-f4a89037-58ba-41f1-82fa-3e5e83cfdf6e-shoutbox\"},\"endpoint\":\"http://192.168.0.169:3004/v1/channels/94a22170-712c-4c6f-b31e-febe86aeafc2/streams/f4a89037-58ba-41f1-82fa-3e5e83cfdf6e/shoutbox\"},\"emojis\":{\"pusher\":{\"channel\":\"stream-f4a89037-58ba-41f1-82fa-3e5e83cfdf6e-emojis\"},\"endpoint\":\"http://192.168.0.169:3005/v1/channels/94a22170-712c-4c6f-b31e-febe86aeafc2/streams/f4a89037-58ba-41f1-82fa-3e5e83cfdf6e/emojis\"},\"polls\":{\"pusher\":{\"channel\":\"stream-f4a89037-58ba-41f1-82fa-3e5e83cfdf6e-polls\"},\"endpoint\":\"http://192.168.0.169:3006/v1/channels/94a22170-712c-4c6f-b31e-febe86aeafc2/streams/f4a89037-58ba-41f1-82fa-3e5e83cfdf6e/polls\"}},\"updatedAt\":\"2017-11-28T10:41:20.753Z\"}"
										},
										{
											"name": "Publish Stream",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{coreApiHost}}/v1/channels/{{channelId}}/streams/{{streamId}}",
													"host": [
														"{{coreApiHost}}"
													],
													"path": [
														"v1",
														"channels",
														"{{channelId}}",
														"streams",
														"{{streamId}}"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Headers",
													"value": "Content-Type, Authorization, Accept, Cache-Control, X-Requested-With",
													"name": "Access-Control-Allow-Headers",
													"description": "Used in response to a preflight request to indicate which HTTP headers can be used when making the actual request."
												},
												{
													"key": "Access-Control-Allow-Methods",
													"value": "GET,PUT,POST,DELETE",
													"name": "Access-Control-Allow-Methods",
													"description": "Specifies the method or methods allowed when accessing the resource. This is used in response to a preflight request."
												},
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*",
													"name": "Access-Control-Allow-Origin",
													"description": "Specifies a URI that may access the resource. For requests without credentials, the server may specify '*' as a wildcard, thereby allowing any origin to access the resource."
												},
												{
													"key": "Connection",
													"value": "keep-alive",
													"name": "Connection",
													"description": "Options that are desired for the connection"
												},
												{
													"key": "Content-Length",
													"value": "1520",
													"name": "Content-Length",
													"description": "The length of the response body in octets (8-bit bytes)"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8",
													"name": "Content-Type",
													"description": "The mime type of this content"
												},
												{
													"key": "Date",
													"value": "Tue, 28 Nov 2017 10:41:21 GMT",
													"name": "Date",
													"description": "The date and time that the message was sent"
												},
												{
													"key": "X-Response-Time",
													"value": "295ms",
													"name": "X-Response-Time",
													"description": "Custom header"
												},
												{
													"key": "x-server-time",
													"value": "2017-11-28T10:41:20.726Z",
													"name": "x-server-time",
													"description": "Custom header"
												}
											],
											"cookie": [],
											"body": "{\n    \"published\": true\n}"
										}
									]
								},
								{
									"name": "Get Stream Demo URL",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code is 200\"] = responseCode.code === 200;",
													""
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{adminToken}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{coreApiHost}}/v1/channels/{{channelId}}/streams/{{streamId}}/demo",
											"host": [
												"{{coreApiHost}}"
											],
											"path": [
												"v1",
												"channels",
												"{{channelId}}",
												"streams",
												"{{streamId}}",
												"demo"
											]
										},
										"description": "Update a stream.\n\n- `before`:\n- `live`:\n- `after`:"
									},
									"response": [
										{
											"name": "Publish Stream",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{coreApiHost}}/v1/channels/{{channelId}}/streams/{{streamId}}",
													"host": [
														"{{coreApiHost}}"
													],
													"path": [
														"v1",
														"channels",
														"{{channelId}}",
														"streams",
														"{{streamId}}"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Headers",
													"value": "Content-Type, Authorization, Accept, Cache-Control, X-Requested-With",
													"name": "Access-Control-Allow-Headers",
													"description": "Used in response to a preflight request to indicate which HTTP headers can be used when making the actual request."
												},
												{
													"key": "Access-Control-Allow-Methods",
													"value": "GET,PUT,POST,DELETE",
													"name": "Access-Control-Allow-Methods",
													"description": "Specifies the method or methods allowed when accessing the resource. This is used in response to a preflight request."
												},
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*",
													"name": "Access-Control-Allow-Origin",
													"description": "Specifies a URI that may access the resource. For requests without credentials, the server may specify '*' as a wildcard, thereby allowing any origin to access the resource."
												},
												{
													"key": "Connection",
													"value": "keep-alive",
													"name": "Connection",
													"description": "Options that are desired for the connection"
												},
												{
													"key": "Content-Length",
													"value": "1520",
													"name": "Content-Length",
													"description": "The length of the response body in octets (8-bit bytes)"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8",
													"name": "Content-Type",
													"description": "The mime type of this content"
												},
												{
													"key": "Date",
													"value": "Tue, 28 Nov 2017 10:41:21 GMT",
													"name": "Date",
													"description": "The date and time that the message was sent"
												},
												{
													"key": "X-Response-Time",
													"value": "295ms",
													"name": "X-Response-Time",
													"description": "Custom header"
												},
												{
													"key": "x-server-time",
													"value": "2017-11-28T10:41:20.726Z",
													"name": "x-server-time",
													"description": "Custom header"
												}
											],
											"cookie": [],
											"body": "{\n    \"published\": true\n}"
										},
										{
											"name": "Unpublish Stream",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"published\": true\n}"
												},
												"url": {
													"raw": "{{coreApiHost}}/v1/channels/{{channelId}}/streams/{{streamId}}",
													"host": [
														"{{coreApiHost}}"
													],
													"path": [
														"v1",
														"channels",
														"{{channelId}}",
														"streams",
														"{{streamId}}"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Headers",
													"value": "Content-Type, Authorization, Accept, Cache-Control, X-Requested-With",
													"name": "Access-Control-Allow-Headers",
													"description": "Used in response to a preflight request to indicate which HTTP headers can be used when making the actual request."
												},
												{
													"key": "Access-Control-Allow-Methods",
													"value": "GET,PUT,POST,DELETE",
													"name": "Access-Control-Allow-Methods",
													"description": "Specifies the method or methods allowed when accessing the resource. This is used in response to a preflight request."
												},
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*",
													"name": "Access-Control-Allow-Origin",
													"description": "Specifies a URI that may access the resource. For requests without credentials, the server may specify '*' as a wildcard, thereby allowing any origin to access the resource."
												},
												{
													"key": "Connection",
													"value": "keep-alive",
													"name": "Connection",
													"description": "Options that are desired for the connection"
												},
												{
													"key": "Content-Length",
													"value": "1520",
													"name": "Content-Length",
													"description": "The length of the response body in octets (8-bit bytes)"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8",
													"name": "Content-Type",
													"description": "The mime type of this content"
												},
												{
													"key": "Date",
													"value": "Tue, 28 Nov 2017 10:41:21 GMT",
													"name": "Date",
													"description": "The date and time that the message was sent"
												},
												{
													"key": "X-Response-Time",
													"value": "295ms",
													"name": "X-Response-Time",
													"description": "Custom header"
												},
												{
													"key": "x-server-time",
													"value": "2017-11-28T10:41:20.726Z",
													"name": "x-server-time",
													"description": "Custom header"
												}
											],
											"cookie": [],
											"body": "{\n    \"published\": false,\n}"
										},
										{
											"name": "Update Stream",
											"originalRequest": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{adminToken}}",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"title\":\"Zender API Stream Update\",\n\t\"custom\":{\n\t\t\"splash_enabled\": true,\n\t\t\"splash_loginrequired\": false,\n\t\t\"splash_url\": \"http://zender.tv\"\n\t},\n\t\"description\":\"Zender API Stream Update\",\n\t\"preview\": {\n\t\t\"type\": \"image\",\n\t\t\"url\": \"{{getUrl}}\"\n\t},\n\t\"airdate\": \"2017-11-27T10:30:00.000Z\",\n\t\"state\": \"live\",\n\t\"published\": true\n}"
												},
												"url": {
													"raw": "{{coreApiHost}}/v1/channels/{{channelId}}/streams/{{streamId}}",
													"host": [
														"{{coreApiHost}}"
													],
													"path": [
														"v1",
														"channels",
														"{{channelId}}",
														"streams",
														"{{streamId}}"
													]
												},
												"description": "Update a stream."
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Headers",
													"value": "Content-Type, Authorization, Accept, Cache-Control, X-Requested-With",
													"name": "Access-Control-Allow-Headers",
													"description": "Used in response to a preflight request to indicate which HTTP headers can be used when making the actual request."
												},
												{
													"key": "Access-Control-Allow-Methods",
													"value": "GET,PUT,POST,DELETE",
													"name": "Access-Control-Allow-Methods",
													"description": "Specifies the method or methods allowed when accessing the resource. This is used in response to a preflight request."
												},
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*",
													"name": "Access-Control-Allow-Origin",
													"description": "Specifies a URI that may access the resource. For requests without credentials, the server may specify '*' as a wildcard, thereby allowing any origin to access the resource."
												},
												{
													"key": "Connection",
													"value": "keep-alive",
													"name": "Connection",
													"description": "Options that are desired for the connection"
												},
												{
													"key": "Content-Length",
													"value": "1520",
													"name": "Content-Length",
													"description": "The length of the response body in octets (8-bit bytes)"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8",
													"name": "Content-Type",
													"description": "The mime type of this content"
												},
												{
													"key": "Date",
													"value": "Tue, 28 Nov 2017 10:41:21 GMT",
													"name": "Date",
													"description": "The date and time that the message was sent"
												},
												{
													"key": "X-Response-Time",
													"value": "295ms",
													"name": "X-Response-Time",
													"description": "Custom header"
												},
												{
													"key": "x-server-time",
													"value": "2017-11-28T10:41:20.726Z",
													"name": "x-server-time",
													"description": "Custom header"
												}
											],
											"cookie": [],
											"body": "{\"preview\":{\"type\":\"image\",\"url\":\"http://localhost:14569/cdn.local.zender.tv/live/uploads/e1cc9d4b-2969-4d50-a74f-cb39ac5f5f68/2017-11-28/6543fcdc-b272-4569-bba0-dd609a65fb29.original.png\"},\"createdAt\":\"2017-11-28T10:38:44.210Z\",\"airdate\":\"2017-11-27T10:30:00.000Z\",\"custom\":{\"splash_enabled\":true,\"splash_url\":\"http://zender.tv\",\"splash_loginrequired\":false},\"description\":\"Zender API Stream Update\",\"published\":false,\"id\":\"f4a89037-58ba-41f1-82fa-3e5e83cfdf6e\",\"state\":\"live\",\"title\":\"Zender API Stream Update\",\"channelId\":\"94a22170-712c-4c6f-b31e-febe86aeafc2\",\"interactions\":{\"media\":{\"pusher\":{\"channel\":\"stream-f4a89037-58ba-41f1-82fa-3e5e83cfdf6e-media\"},\"endpoint\":\"http://192.168.0.169:3003/v1/channels/94a22170-712c-4c6f-b31e-febe86aeafc2/streams/f4a89037-58ba-41f1-82fa-3e5e83cfdf6e/media\"},\"shoutbox\":{\"pusher\":{\"channel\":\"stream-f4a89037-58ba-41f1-82fa-3e5e83cfdf6e-shoutbox\"},\"endpoint\":\"http://192.168.0.169:3004/v1/channels/94a22170-712c-4c6f-b31e-febe86aeafc2/streams/f4a89037-58ba-41f1-82fa-3e5e83cfdf6e/shoutbox\"},\"emojis\":{\"pusher\":{\"channel\":\"stream-f4a89037-58ba-41f1-82fa-3e5e83cfdf6e-emojis\"},\"endpoint\":\"http://192.168.0.169:3005/v1/channels/94a22170-712c-4c6f-b31e-febe86aeafc2/streams/f4a89037-58ba-41f1-82fa-3e5e83cfdf6e/emojis\"},\"polls\":{\"pusher\":{\"channel\":\"stream-f4a89037-58ba-41f1-82fa-3e5e83cfdf6e-polls\"},\"endpoint\":\"http://192.168.0.169:3006/v1/channels/94a22170-712c-4c6f-b31e-febe86aeafc2/streams/f4a89037-58ba-41f1-82fa-3e5e83cfdf6e/polls\"}},\"updatedAt\":\"2017-11-28T10:41:20.753Z\"}"
										}
									]
								}
							],
							"_postman_isSubFolder": true
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "Media",
					"item": [
						{
							"name": "Get Media Content",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code is 200\"] = responseCode.code === 200;",
											"var data = JSON.parse(responseBody);",
											"tests[\"Response has content id\"] = data.id !== null;",
											"postman.setEnvironmentVariable(\"contentId\", data.id);"
										]
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{adminToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{mediaApiHost}}/v1/channels/{{channelId}}/streams/{{streamId}}/media/",
									"host": [
										"{{mediaApiHost}}"
									],
									"path": [
										"v1",
										"channels",
										"{{channelId}}",
										"streams",
										"{{streamId}}",
										"media",
										""
									]
								},
								"description": "Update the media config of a stream. When creating a stream it will automatically create a media config."
							},
							"response": [
								{
									"name": "Update Media Config",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \n}"
										},
										"url": {
											"raw": "{{mediaApiHost}}/v1/channels/{{channelId}}/streams/{{streamId}}/media/config",
											"host": [
												"{{mediaApiHost}}"
											],
											"path": [
												"v1",
												"channels",
												"{{channelId}}",
												"streams",
												"{{streamId}}",
												"media",
												"config"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Access-Control-Allow-Headers",
											"value": "Content-Type, Authorization, Accept, Cache-Control, X-Requested-With",
											"name": "Access-Control-Allow-Headers",
											"description": "Used in response to a preflight request to indicate which HTTP headers can be used when making the actual request."
										},
										{
											"key": "Access-Control-Allow-Methods",
											"value": "GET,PUT,POST,DELETE",
											"name": "Access-Control-Allow-Methods",
											"description": "Specifies the method or methods allowed when accessing the resource. This is used in response to a preflight request."
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*",
											"name": "Access-Control-Allow-Origin",
											"description": "Specifies a URI that may access the resource. For requests without credentials, the server may specify '*' as a wildcard, thereby allowing any origin to access the resource."
										},
										{
											"key": "Connection",
											"value": "keep-alive",
											"name": "Connection",
											"description": "Options that are desired for the connection"
										},
										{
											"key": "Content-Length",
											"value": "188",
											"name": "Content-Length",
											"description": "The length of the response body in octets (8-bit bytes)"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8",
											"name": "Content-Type",
											"description": "The mime type of this content"
										},
										{
											"key": "Date",
											"value": "Tue, 28 Nov 2017 13:57:21 GMT",
											"name": "Date",
											"description": "The date and time that the message was sent"
										},
										{
											"key": "X-Response-Time",
											"value": "34ms",
											"name": "X-Response-Time",
											"description": "Custom header"
										}
									],
									"cookie": [],
									"body": "{\"createdAt\":\"2017-11-28T13:55:31.739Z\",\"id\":\"a2993350-cb51-437d-bf39-41e110a71f5a\",\"streamId\":\"a2993350-cb51-437d-bf39-41e110a71f5a\",\"enabled\":true,\"updatedAt\":\"2017-11-28T13:57:21.427Z\"}"
								}
							]
						},
						{
							"name": "Create Media Content",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "45aa5980-7787-4cf7-bb25-8383662f45ee",
										"exec": [
											"tests[\"Status code is 200\"] = responseCode.code === 200;",
											"var data = JSON.parse(responseBody);",
											"tests[\"Response has an id\"] = data.id !== null;",
											"postman.setEnvironmentVariable(\"mediaContentId\", data.id);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{adminToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"routing\": \"player\",\n  \"title\": \"Zender API Media Pancarte\",\n  \"description\": \"Zender API Media Pancarte\",\n  \"view\": {\n    \"image\": {\n      \"url\": \"http://localhost:14569/cdn.local.zender.tv/live/uploads/03013c55-9996-4735-bbff-e1405601346e/2017-11-28/4fd6327e-6189-4c68-a5fc-dacca6013ab8.original.png\"\n    },\n    \"video\": {\n      \"loop\": true,\n      \"url\": \"http://localhost:14569/cdn.local.zender.tv/live/uploads/03013c55-9996-4735-bbff-e1405601346e/2017-11-28/567153ca-482c-476f-a289-6317b9360574.original.mp4\",\n      \"alternativeUrls\": [\n      \t\"http://localhost:14569/cdn.local.zender.tv/live/uploads/03013c55-9996-4735-bbff-e1405601346e/2017-11-28/567153ca-482c-476f-a289-6317b9360574.alternative.mp4\"\n      ],\n      \"allowedRegions\": \"BE\"\n    }\n  }\n}"
								},
								"url": {
									"raw": "{{mediaApiHost}}/v1/channels/{{channelId}}/streams/{{streamId}}/media",
									"host": [
										"{{mediaApiHost}}"
									],
									"path": [
										"v1",
										"channels",
										"{{channelId}}",
										"streams",
										"{{streamId}}",
										"media"
									]
								},
								"description": "Create a new media content item."
							},
							"response": [
								{
									"name": "Create Image Media for Studio",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"routing\": \"studio\",\n  \"title\": \"Zender API Media Pancarte\",\n  \"description\": \"Zender API Media Pancarte\",\n  \"view\": {\n    \"image\": {\n      \"url\": \"http://localhost:14569/cdn.local.zender.tv/live/uploads/03013c55-9996-4735-bbff-e1405601346e/2017-11-28/4fd6327e-6189-4c68-a5fc-dacca6013ab8.original.png\"\n    }\n  }\n}"
										},
										"url": {
											"raw": "{{mediaApiHost}}/v1/channels/{{channelId}}/streams/{{streamId}}/media",
											"host": [
												"{{mediaApiHost}}"
											],
											"path": [
												"v1",
												"channels",
												"{{channelId}}",
												"streams",
												"{{streamId}}",
												"media"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "Text",
									"header": [],
									"cookie": [],
									"body": "{\n    \"routing\": \"studio\",\n    \"title\": \"Zender API Media Pancarte\",\n    \"description\": \"Zender API Media Pancarte\",\n    \"view\": {\n        \"image\": {\n            \"url\": \"http://localhost:14569/cdn.local.zender.tv/live/uploads/03013c55-9996-4735-bbff-e1405601346e/2017-11-28/4fd6327e-6189-4c68-a5fc-dacca6013ab8.original.png\"\n        }\n    },\n    \"id\": \"80f0fe65-ae45-43d9-a1f5-5ad7fbd7fbf7\",\n    \"streamId\": \"a2993350-cb51-437d-bf39-41e110a71f5a\",\n    \"createdAt\": \"2017-11-28T13:58:08.400Z\"\n}"
								},
								{
									"name": "Create Geoblocked Video Media for Player",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"routing\": \"player\",\n  \"title\": \"Zender API Media Pancarte\",\n  \"description\": \"Zender API Media Pancarte\",\n  \"view\": {\n    \"image\": {\n      \"url\": \"http://localhost:14569/cdn.local.zender.tv/live/uploads/03013c55-9996-4735-bbff-e1405601346e/2017-11-28/4fd6327e-6189-4c68-a5fc-dacca6013ab8.original.png\"\n    },\n    \"video\": {\n      \"loop\": true,\n      \"url\": \"http://localhost:14569/cdn.local.zender.tv/live/uploads/03013c55-9996-4735-bbff-e1405601346e/2017-11-28/567153ca-482c-476f-a289-6317b9360574.original.mp4\",\n      \"allowedRegions\": \"BE\"\n    }\n  }\n}"
										},
										"url": {
											"raw": "{{mediaApiHost}}/v1/channels/{{channelId}}/streams/{{streamId}}/media",
											"host": [
												"{{mediaApiHost}}"
											],
											"path": [
												"v1",
												"channels",
												"{{channelId}}",
												"streams",
												"{{streamId}}",
												"media"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "Text",
									"header": [],
									"cookie": [],
									"body": "{\n    \"routing\": \"player\",\n    \"title\": \"Zender API Media Pancarte\",\n    \"description\": \"Zender API Media Pancarte\",\n    \"view\": {\n        \"image\": {\n            \"url\": \"http://localhost:14569/cdn.local.zender.tv/live/uploads/03013c55-9996-4735-bbff-e1405601346e/2017-11-28/4fd6327e-6189-4c68-a5fc-dacca6013ab8.original.png\"\n        },\n        \"video\": {\n            \"autoplay\": true,\n            \"aspectRatio\": \"16:9\",\n            \"loop\": true,\n            \"url\": \"http://localhost:14569/cdn.local.zender.tv/live/uploads/03013c55-9996-4735-bbff-e1405601346e/2017-11-28/567153ca-482c-476f-a289-6317b9360574.original.mp4\",\n            \"allowedRegions\": \"BE\"\n        }\n    },\n    \"id\": \"49a2328f-3759-44bf-8499-f0e2601efee7\",\n    \"streamId\": \"a2993350-cb51-437d-bf39-41e110a71f5a\",\n    \"createdAt\": \"2017-11-28T13:57:42.399Z\"\n}"
								}
							]
						},
						{
							"name": "Update Media Content",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code is 200\"] = responseCode.code === 200;",
											"var data = JSON.parse(responseBody);",
											"tests[\"Response has an id\"] = data.id !== null;",
											"postman.setEnvironmentVariable(\"mediaContentId\", data.id);"
										]
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{adminToken}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"routing\": \"studio\",\n  \"view\": {\n    \"image\": {\n      \"url\": \"{{getUrl}}\"\n    },\n    \"video\": {\n      \"autoplay\": true,\n      \"aspectRatio\": \"16:9\",\n      \"loop\": false,\n      \"url\": \"http://localhost:14569/cdn.local.zender.tv/live/uploads/03013c55-9996-4735-bbff-e1405601346e/2017-11-28/567153ca-482c-476f-a289-6317b9360574.original.mp4\"\n    }\n  },\n  \"description\": \"Zender API Media Pancarte Update\",\n  \"title\": \"Zender API Media Pancarte Update\"\n}"
								},
								"url": {
									"raw": "{{mediaApiHost}}/v1/channels/{{channelId}}/streams/{{streamId}}/media/{{mediaContentId}}",
									"host": [
										"{{mediaApiHost}}"
									],
									"path": [
										"v1",
										"channels",
										"{{channelId}}",
										"streams",
										"{{streamId}}",
										"media",
										"{{mediaContentId}}"
									]
								},
								"description": "Update a media content item."
							},
							"response": []
						},
						{
							"name": "Trigger Media Content",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code is 200\"] = responseCode.code === 200;"
										]
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{adminToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{}"
								},
								"url": {
									"raw": "{{mediaApiHost}}/v1/channels/{{channelId}}/streams/{{streamId}}/media/{{mediaContentId}}/trigger",
									"host": [
										"{{mediaApiHost}}"
									],
									"path": [
										"v1",
										"channels",
										"{{channelId}}",
										"streams",
										"{{streamId}}",
										"media",
										"{{mediaContentId}}",
										"trigger"
									]
								},
								"description": "Trigger a media content item to either the public player or the studio visualization (the \"routing\" attribute on the media content item decides where the item will be triggered)."
							},
							"response": []
						},
						{
							"name": "Delete Media Content",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code is 200\"] = responseCode.code === 204;"
										]
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{adminToken}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{mediaApiHost}}/v1/channels/{{channelId}}/streams/{{streamId}}/media/{{mediaContentId}}",
									"host": [
										"{{mediaApiHost}}"
									],
									"path": [
										"v1",
										"channels",
										"{{channelId}}",
										"streams",
										"{{streamId}}",
										"media",
										"{{mediaContentId}}"
									]
								},
								"description": "Delete a media content item."
							},
							"response": []
						},
						{
							"name": "Get Media Config",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code is 200\"] = responseCode.code === 200;",
											"var data = JSON.parse(responseBody);",
											"tests[\"Response has content id\"] = data.id !== null;",
											"postman.setEnvironmentVariable(\"contentId\", data.id);"
										]
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{adminToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{mediaApiHost}}/v1/channels/{{channelId}}/streams/{{streamId}}/media/config",
									"host": [
										"{{mediaApiHost}}"
									],
									"path": [
										"v1",
										"channels",
										"{{channelId}}",
										"streams",
										"{{streamId}}",
										"media",
										"config"
									]
								},
								"description": "Update the media config of a stream. When creating a stream it will automatically create a media config."
							},
							"response": [
								{
									"name": "Update Media Config",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \n}"
										},
										"url": {
											"raw": "{{mediaApiHost}}/v1/channels/{{channelId}}/streams/{{streamId}}/media/config",
											"host": [
												"{{mediaApiHost}}"
											],
											"path": [
												"v1",
												"channels",
												"{{channelId}}",
												"streams",
												"{{streamId}}",
												"media",
												"config"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Access-Control-Allow-Headers",
											"value": "Content-Type, Authorization, Accept, Cache-Control, X-Requested-With",
											"name": "Access-Control-Allow-Headers",
											"description": "Used in response to a preflight request to indicate which HTTP headers can be used when making the actual request."
										},
										{
											"key": "Access-Control-Allow-Methods",
											"value": "GET,PUT,POST,DELETE",
											"name": "Access-Control-Allow-Methods",
											"description": "Specifies the method or methods allowed when accessing the resource. This is used in response to a preflight request."
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*",
											"name": "Access-Control-Allow-Origin",
											"description": "Specifies a URI that may access the resource. For requests without credentials, the server may specify '*' as a wildcard, thereby allowing any origin to access the resource."
										},
										{
											"key": "Connection",
											"value": "keep-alive",
											"name": "Connection",
											"description": "Options that are desired for the connection"
										},
										{
											"key": "Content-Length",
											"value": "188",
											"name": "Content-Length",
											"description": "The length of the response body in octets (8-bit bytes)"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8",
											"name": "Content-Type",
											"description": "The mime type of this content"
										},
										{
											"key": "Date",
											"value": "Tue, 28 Nov 2017 13:57:21 GMT",
											"name": "Date",
											"description": "The date and time that the message was sent"
										},
										{
											"key": "X-Response-Time",
											"value": "34ms",
											"name": "X-Response-Time",
											"description": "Custom header"
										}
									],
									"cookie": [],
									"body": "{\"createdAt\":\"2017-11-28T13:55:31.739Z\",\"id\":\"a2993350-cb51-437d-bf39-41e110a71f5a\",\"streamId\":\"a2993350-cb51-437d-bf39-41e110a71f5a\",\"enabled\":true,\"updatedAt\":\"2017-11-28T13:57:21.427Z\"}"
								}
							]
						},
						{
							"name": "Update Media Config",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code is 200\"] = responseCode.code === 200;",
											"var data = JSON.parse(responseBody);",
											"tests[\"Response has content id\"] = data.id !== null;",
											"postman.setEnvironmentVariable(\"contentId\", data.id);"
										]
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{adminToken}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \n}"
								},
								"url": {
									"raw": "{{mediaApiHost}}/v1/channels/{{channelId}}/streams/{{streamId}}/media/config",
									"host": [
										"{{mediaApiHost}}"
									],
									"path": [
										"v1",
										"channels",
										"{{channelId}}",
										"streams",
										"{{streamId}}",
										"media",
										"config"
									]
								},
								"description": "Update the media config of a stream. When creating a stream it will automatically create a media config."
							},
							"response": [
								{
									"name": "Update Media Config",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \n}"
										},
										"url": {
											"raw": "{{mediaApiHost}}/v1/channels/{{channelId}}/streams/{{streamId}}/media/config",
											"host": [
												"{{mediaApiHost}}"
											],
											"path": [
												"v1",
												"channels",
												"{{channelId}}",
												"streams",
												"{{streamId}}",
												"media",
												"config"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Access-Control-Allow-Headers",
											"value": "Content-Type, Authorization, Accept, Cache-Control, X-Requested-With",
											"name": "Access-Control-Allow-Headers",
											"description": "Used in response to a preflight request to indicate which HTTP headers can be used when making the actual request."
										},
										{
											"key": "Access-Control-Allow-Methods",
											"value": "GET,PUT,POST,DELETE",
											"name": "Access-Control-Allow-Methods",
											"description": "Specifies the method or methods allowed when accessing the resource. This is used in response to a preflight request."
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*",
											"name": "Access-Control-Allow-Origin",
											"description": "Specifies a URI that may access the resource. For requests without credentials, the server may specify '*' as a wildcard, thereby allowing any origin to access the resource."
										},
										{
											"key": "Connection",
											"value": "keep-alive",
											"name": "Connection",
											"description": "Options that are desired for the connection"
										},
										{
											"key": "Content-Length",
											"value": "188",
											"name": "Content-Length",
											"description": "The length of the response body in octets (8-bit bytes)"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8",
											"name": "Content-Type",
											"description": "The mime type of this content"
										},
										{
											"key": "Date",
											"value": "Tue, 28 Nov 2017 13:57:21 GMT",
											"name": "Date",
											"description": "The date and time that the message was sent"
										},
										{
											"key": "X-Response-Time",
											"value": "34ms",
											"name": "X-Response-Time",
											"description": "Custom header"
										}
									],
									"cookie": [],
									"body": "{\"createdAt\":\"2017-11-28T13:55:31.739Z\",\"id\":\"a2993350-cb51-437d-bf39-41e110a71f5a\",\"streamId\":\"a2993350-cb51-437d-bf39-41e110a71f5a\",\"enabled\":true,\"updatedAt\":\"2017-11-28T13:57:21.427Z\"}"
								}
							]
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "Emojis",
					"item": [
						{
							"name": "Update Emojis Config",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code is 200\"] = responseCode.code === 200;",
											"var data = JSON.parse(responseBody);",
											"tests[\"Response has content id\"] = data.id !== null;",
											"postman.setEnvironmentVariable(\"contentId\", data.id);"
										]
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{adminToken}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"enabled\": true,\n  \"sortedSets\": [\n    {\n      \"title\": \"Zender API Emoji Set\",\n      \"emojis\": [\n        {\n          \"id\": \"73ebf11e-ad24-4dcb-878f-3e9b06db280e.original.png\",\n          \"title\": \"73ebf11e-ad24-4dcb-878f-3e9b06db280e.original.png\",\n          \"url\": \"http://localhost:14569/cdn.local.zender.tv/live/uploads/e1cc9d4b-2969-4d50-a74f-cb39ac5f5f68/2017-11-28/73ebf11e-ad24-4dcb-878f-3e9b06db280e.original.png\"\n        },\n        {\n          \"id\": \"560527f8-4319-4021-a522-9b4ad0aecad5.original.png\",\n          \"title\": \"560527f8-4319-4021-a522-9b4ad0aecad5.original.png\",\n          \"url\": \"http://localhost:14569/cdn.local.zender.tv/live/uploads/e1cc9d4b-2969-4d50-a74f-cb39ac5f5f68/2017-11-28/560527f8-4319-4021-a522-9b4ad0aecad5.original.png\"\n        },\n        {\n          \"id\": \"26b9db64-ec8d-47fe-92c9-d4e104213ab9.original.png\",\n          \"title\": \"26b9db64-ec8d-47fe-92c9-d4e104213ab9.original.png\",\n          \"url\": \"http://localhost:14569/cdn.local.zender.tv/live/uploads/e1cc9d4b-2969-4d50-a74f-cb39ac5f5f68/2017-11-28/26b9db64-ec8d-47fe-92c9-d4e104213ab9.original.png\"\n        }\n      ],\n      \"icon\": {\n        \"url\": \"http://localhost:14569/cdn.local.zender.tv/live/uploads/e1cc9d4b-2969-4d50-a74f-cb39ac5f5f68/2017-11-28/73ebf11e-ad24-4dcb-878f-3e9b06db280e.original.png\"\n      },\n      \"type\": \"custom\",\n      \"enabled\": true\n    },\n    {\n      \"emojis\": [\n        {\n          \"title\": \"000-gezichten__smile01\",\n          \"url\": \"http://localhost:14569/cdn.local.zender.tv/live/uploads/e1cc9d4b-2969-4d50-a74f-cb39ac5f5f68/2017-11-28/fbc5dabe-8fb7-4c1c-8dd0-d70d37ce4559.original.png\",\n          \"id\": \"/live/uploads/e1cc9d4b-2969-4d50-a74f-cb39ac5f5f68/2017-11-28/fbc5dabe-8fb7-4c1c-8dd0-d70d37ce4559.original.png\"\n        },\n        {\n          \"title\": \"000-gezichten__smile02\",\n          \"url\": \"http://localhost:14569/cdn.local.zender.tv/live/uploads/e1cc9d4b-2969-4d50-a74f-cb39ac5f5f68/2017-11-28/b1554f8c-a099-4146-bb72-74e65524ac71.original.png\",\n          \"id\": \"/live/uploads/e1cc9d4b-2969-4d50-a74f-cb39ac5f5f68/2017-11-28/b1554f8c-a099-4146-bb72-74e65524ac71.original.png\"\n        },\n        {\n          \"title\": \"000-gezichten__smile03\",\n          \"url\": \"http://localhost:14569/cdn.local.zender.tv/live/uploads/e1cc9d4b-2969-4d50-a74f-cb39ac5f5f68/2017-11-28/a3920971-0169-41d8-b5c7-b1a5e4ebd853.original.png\",\n          \"id\": \"/live/uploads/e1cc9d4b-2969-4d50-a74f-cb39ac5f5f68/2017-11-28/a3920971-0169-41d8-b5c7-b1a5e4ebd853.original.png\"\n        },\n        {\n          \"title\": \"000-gezichten__smile04\",\n          \"url\": \"http://localhost:14569/cdn.local.zender.tv/live/uploads/e1cc9d4b-2969-4d50-a74f-cb39ac5f5f68/2017-11-28/5734048c-d83b-4941-8bd6-797658274424.original.png\",\n          \"id\": \"/live/uploads/e1cc9d4b-2969-4d50-a74f-cb39ac5f5f68/2017-11-28/5734048c-d83b-4941-8bd6-797658274424.original.png\"\n        },\n        {\n          \"title\": \"000-gezichten__smile05\",\n          \"url\": \"http://localhost:14569/cdn.local.zender.tv/live/uploads/e1cc9d4b-2969-4d50-a74f-cb39ac5f5f68/2017-11-28/5badba92-e650-4223-ba18-87585e1e07a6.original.png\",\n          \"id\": \"/live/uploads/e1cc9d4b-2969-4d50-a74f-cb39ac5f5f68/2017-11-28/5badba92-e650-4223-ba18-87585e1e07a6.original.png\"\n        },\n        {\n          \"title\": \"000-gezichten__smile06\",\n          \"url\": \"http://localhost:14569/cdn.local.zender.tv/live/uploads/e1cc9d4b-2969-4d50-a74f-cb39ac5f5f68/2017-11-28/3e93bc03-5c51-452a-a4ca-bd6e2121bcce.original.png\",\n          \"id\": \"/live/uploads/e1cc9d4b-2969-4d50-a74f-cb39ac5f5f68/2017-11-28/3e93bc03-5c51-452a-a4ca-bd6e2121bcce.original.png\"\n        },\n        {\n          \"title\": \"000-gezichten__smile07\",\n          \"url\": \"http://localhost:14569/cdn.local.zender.tv/live/uploads/e1cc9d4b-2969-4d50-a74f-cb39ac5f5f68/2017-11-28/73eb9ba8-a9f2-465d-882d-cf29d6349029.original.png\",\n          \"id\": \"/live/uploads/e1cc9d4b-2969-4d50-a74f-cb39ac5f5f68/2017-11-28/73eb9ba8-a9f2-465d-882d-cf29d6349029.original.png\"\n        },\n        {\n          \"title\": \"000-gezichten__smile08\",\n          \"url\": \"http://localhost:14569/cdn.local.zender.tv/live/uploads/e1cc9d4b-2969-4d50-a74f-cb39ac5f5f68/2017-11-28/cab89d89-67a6-4ec8-ab06-3fecee8c9d8d.original.png\",\n          \"id\": \"/live/uploads/e1cc9d4b-2969-4d50-a74f-cb39ac5f5f68/2017-11-28/cab89d89-67a6-4ec8-ab06-3fecee8c9d8d.original.png\"\n        }\n      ],\n      \"icon\": {\n        \"url\": \"http://localhost:14569/cdn.local.zender.tv/live/uploads/e1cc9d4b-2969-4d50-a74f-cb39ac5f5f68/2017-11-28/fbc5dabe-8fb7-4c1c-8dd0-d70d37ce4559.original.png\",\n        \"id\": \"/live/uploads/e1cc9d4b-2969-4d50-a74f-cb39ac5f5f68/2017-11-28/fbc5dabe-8fb7-4c1c-8dd0-d70d37ce4559.original.png\"\n      },\n      \"id\": \"7b3f2436-dae0-45cf-aad2-4320cd342640\",\n      \"title\": \"000-faces\"\n    },\n    {\n      \"emojis\": [\n        {\n          \"title\": \"001-handen__hand01\",\n          \"url\": \"http://localhost:14569/cdn.local.zender.tv/live/uploads/e1cc9d4b-2969-4d50-a74f-cb39ac5f5f68/2017-11-28/16d20a2e-47ee-4315-b673-7b91e5230763.original.png\",\n          \"id\": \"/live/uploads/e1cc9d4b-2969-4d50-a74f-cb39ac5f5f68/2017-11-28/16d20a2e-47ee-4315-b673-7b91e5230763.original.png\"\n        },\n        {\n          \"title\": \"001-handen__hand02\",\n          \"url\": \"http://localhost:14569/cdn.local.zender.tv/live/uploads/e1cc9d4b-2969-4d50-a74f-cb39ac5f5f68/2017-11-28/655e92a4-5d18-47ab-9cf6-e39c2cb4babf.original.png\",\n          \"id\": \"/live/uploads/e1cc9d4b-2969-4d50-a74f-cb39ac5f5f68/2017-11-28/655e92a4-5d18-47ab-9cf6-e39c2cb4babf.original.png\"\n        },\n        {\n          \"title\": \"001-handen__hand03\",\n          \"url\": \"http://localhost:14569/cdn.local.zender.tv/live/uploads/e1cc9d4b-2969-4d50-a74f-cb39ac5f5f68/2017-11-28/1b7fe938-d774-474c-a194-d3dd1fb865a8.original.png\",\n          \"id\": \"/live/uploads/e1cc9d4b-2969-4d50-a74f-cb39ac5f5f68/2017-11-28/1b7fe938-d774-474c-a194-d3dd1fb865a8.original.png\"\n        },\n        {\n          \"title\": \"001-handen__hand04\",\n          \"url\": \"http://localhost:14569/cdn.local.zender.tv/live/uploads/e1cc9d4b-2969-4d50-a74f-cb39ac5f5f68/2017-11-28/e31906f3-e6be-4fb8-a902-5c07de7707bf.original.png\",\n          \"id\": \"/live/uploads/e1cc9d4b-2969-4d50-a74f-cb39ac5f5f68/2017-11-28/e31906f3-e6be-4fb8-a902-5c07de7707bf.original.png\"\n        },\n        {\n          \"title\": \"001-handen__hand05\",\n          \"url\": \"http://localhost:14569/cdn.local.zender.tv/live/uploads/e1cc9d4b-2969-4d50-a74f-cb39ac5f5f68/2017-11-28/9308dd80-b525-4313-9bff-7f602fbb9435.original.png\",\n          \"id\": \"/live/uploads/e1cc9d4b-2969-4d50-a74f-cb39ac5f5f68/2017-11-28/9308dd80-b525-4313-9bff-7f602fbb9435.original.png\"\n        },\n        {\n          \"title\": \"001-handen__hand06\",\n          \"url\": \"http://localhost:14569/cdn.local.zender.tv/live/uploads/e1cc9d4b-2969-4d50-a74f-cb39ac5f5f68/2017-11-28/957a5877-94a9-45c5-94b4-26c6e71c7b5d.original.png\",\n          \"id\": \"/live/uploads/e1cc9d4b-2969-4d50-a74f-cb39ac5f5f68/2017-11-28/957a5877-94a9-45c5-94b4-26c6e71c7b5d.original.png\"\n        }\n      ],\n      \"icon\": {\n        \"url\": \"http://localhost:14569/cdn.local.zender.tv/live/uploads/e1cc9d4b-2969-4d50-a74f-cb39ac5f5f68/2017-11-28/16d20a2e-47ee-4315-b673-7b91e5230763.original.png\",\n        \"id\": \"/live/uploads/e1cc9d4b-2969-4d50-a74f-cb39ac5f5f68/2017-11-28/16d20a2e-47ee-4315-b673-7b91e5230763.original.png\"\n      },\n      \"id\": \"4775a542-bc43-4ce6-bf43-27a0fa7acc78\",\n      \"title\": \"001-hands\"\n    },\n    {\n      \"emojis\": [\n        {\n          \"title\": \"002-liefde__love01\",\n          \"url\": \"http://localhost:14569/cdn.local.zender.tv/live/uploads/e1cc9d4b-2969-4d50-a74f-cb39ac5f5f68/2017-11-28/9523c952-2e23-4c3a-bf83-61c9a17a4168.original.png\",\n          \"id\": \"/live/uploads/e1cc9d4b-2969-4d50-a74f-cb39ac5f5f68/2017-11-28/9523c952-2e23-4c3a-bf83-61c9a17a4168.original.png\"\n        },\n        {\n          \"title\": \"002-liefde__love02\",\n          \"url\": \"http://localhost:14569/cdn.local.zender.tv/live/uploads/e1cc9d4b-2969-4d50-a74f-cb39ac5f5f68/2017-11-28/f2730bd7-aa84-4027-baae-0bfbc5a2e065.original.png\",\n          \"id\": \"/live/uploads/e1cc9d4b-2969-4d50-a74f-cb39ac5f5f68/2017-11-28/f2730bd7-aa84-4027-baae-0bfbc5a2e065.original.png\"\n        },\n        {\n          \"title\": \"002-liefde__love03\",\n          \"url\": \"http://localhost:14569/cdn.local.zender.tv/live/uploads/e1cc9d4b-2969-4d50-a74f-cb39ac5f5f68/2017-11-28/18801fe1-bc93-4673-ac7a-e5de23677fd8.original.png\",\n          \"id\": \"/live/uploads/e1cc9d4b-2969-4d50-a74f-cb39ac5f5f68/2017-11-28/18801fe1-bc93-4673-ac7a-e5de23677fd8.original.png\"\n        },\n        {\n          \"title\": \"002-liefde__love04\",\n          \"url\": \"http://localhost:14569/cdn.local.zender.tv/live/uploads/e1cc9d4b-2969-4d50-a74f-cb39ac5f5f68/2017-11-28/f1ad0ac7-6e89-47cd-8af4-880dbf344dd5.original.png\",\n          \"id\": \"/live/uploads/e1cc9d4b-2969-4d50-a74f-cb39ac5f5f68/2017-11-28/f1ad0ac7-6e89-47cd-8af4-880dbf344dd5.original.png\"\n        },\n        {\n          \"title\": \"002-liefde__love05\",\n          \"url\": \"http://localhost:14569/cdn.local.zender.tv/live/uploads/e1cc9d4b-2969-4d50-a74f-cb39ac5f5f68/2017-11-28/4bcf20b5-237c-48e1-864c-acd5e0a736fe.original.png\",\n          \"id\": \"/live/uploads/e1cc9d4b-2969-4d50-a74f-cb39ac5f5f68/2017-11-28/4bcf20b5-237c-48e1-864c-acd5e0a736fe.original.png\"\n        },\n        {\n          \"title\": \"002-liefde__love06\",\n          \"url\": \"http://localhost:14569/cdn.local.zender.tv/live/uploads/e1cc9d4b-2969-4d50-a74f-cb39ac5f5f68/2017-11-28/bc9b218a-2170-4aba-aeea-efb777ff15d3.original.png\",\n          \"id\": \"/live/uploads/e1cc9d4b-2969-4d50-a74f-cb39ac5f5f68/2017-11-28/bc9b218a-2170-4aba-aeea-efb777ff15d3.original.png\"\n        }\n      ],\n      \"icon\": {\n        \"url\": \"http://localhost:14569/cdn.local.zender.tv/live/uploads/e1cc9d4b-2969-4d50-a74f-cb39ac5f5f68/2017-11-28/9523c952-2e23-4c3a-bf83-61c9a17a4168.original.png\",\n        \"id\": \"/live/uploads/e1cc9d4b-2969-4d50-a74f-cb39ac5f5f68/2017-11-28/9523c952-2e23-4c3a-bf83-61c9a17a4168.original.png\"\n      },\n      \"id\": \"5b9dab91-f96d-4b60-a612-39a2ef567077\",\n      \"title\": \"002-love\"\n    },\n    {\n      \"emojis\": [\n        {\n          \"title\": \"003-dieren__a-bunny\",\n          \"url\": \"http://localhost:14569/cdn.local.zender.tv/live/uploads/e1cc9d4b-2969-4d50-a74f-cb39ac5f5f68/2017-11-28/d0e333f7-1905-4acb-9e63-4102c11e9db5.original.png\",\n          \"id\": \"/live/uploads/e1cc9d4b-2969-4d50-a74f-cb39ac5f5f68/2017-11-28/d0e333f7-1905-4acb-9e63-4102c11e9db5.original.png\"\n        },\n        {\n          \"title\": \"003-dieren__a-cat01\",\n          \"url\": \"http://localhost:14569/cdn.local.zender.tv/live/uploads/e1cc9d4b-2969-4d50-a74f-cb39ac5f5f68/2017-11-28/2cd7d92f-ebff-4bb3-b4cd-eca611443244.original.png\",\n          \"id\": \"/live/uploads/e1cc9d4b-2969-4d50-a74f-cb39ac5f5f68/2017-11-28/2cd7d92f-ebff-4bb3-b4cd-eca611443244.original.png\"\n        },\n        {\n          \"title\": \"003-dieren__a-cat02\",\n          \"url\": \"http://localhost:14569/cdn.local.zender.tv/live/uploads/e1cc9d4b-2969-4d50-a74f-cb39ac5f5f68/2017-11-28/c6e365e5-5cde-410f-b036-9a5970ec3aa6.original.png\",\n          \"id\": \"/live/uploads/e1cc9d4b-2969-4d50-a74f-cb39ac5f5f68/2017-11-28/c6e365e5-5cde-410f-b036-9a5970ec3aa6.original.png\"\n        },\n        {\n          \"title\": \"003-dieren__a-cat03\",\n          \"url\": \"http://localhost:14569/cdn.local.zender.tv/live/uploads/e1cc9d4b-2969-4d50-a74f-cb39ac5f5f68/2017-11-28/97d6ef27-1be6-4071-9f19-b613b24d553e.original.png\",\n          \"id\": \"/live/uploads/e1cc9d4b-2969-4d50-a74f-cb39ac5f5f68/2017-11-28/97d6ef27-1be6-4071-9f19-b613b24d553e.original.png\"\n        },\n        {\n          \"title\": \"003-dieren__a-cat04\",\n          \"url\": \"http://localhost:14569/cdn.local.zender.tv/live/uploads/e1cc9d4b-2969-4d50-a74f-cb39ac5f5f68/2017-11-28/f64293a2-a7c1-42d8-a62c-5b303617b2df.original.png\",\n          \"id\": \"/live/uploads/e1cc9d4b-2969-4d50-a74f-cb39ac5f5f68/2017-11-28/f64293a2-a7c1-42d8-a62c-5b303617b2df.original.png\"\n        },\n        {\n          \"title\": \"003-dieren__a-chicken\",\n          \"url\": \"http://localhost:14569/cdn.local.zender.tv/live/uploads/e1cc9d4b-2969-4d50-a74f-cb39ac5f5f68/2017-11-28/caf5e45c-fe08-4740-b5ff-7e160d88cc4e.original.png\",\n          \"id\": \"/live/uploads/e1cc9d4b-2969-4d50-a74f-cb39ac5f5f68/2017-11-28/caf5e45c-fe08-4740-b5ff-7e160d88cc4e.original.png\"\n        }\n      ],\n      \"icon\": {\n        \"url\": \"http://localhost:14569/cdn.local.zender.tv/live/uploads/e1cc9d4b-2969-4d50-a74f-cb39ac5f5f68/2017-11-28/d0e333f7-1905-4acb-9e63-4102c11e9db5.original.png\",\n        \"id\": \"/live/uploads/e1cc9d4b-2969-4d50-a74f-cb39ac5f5f68/2017-11-28/d0e333f7-1905-4acb-9e63-4102c11e9db5.original.png\"\n      },\n      \"id\": \"ed93d548-63a7-4729-bec8-8fe9cbda2dd5\",\n      \"title\": \"003-animals\"\n    },\n    {\n      \"emojis\": [\n        {\n          \"title\": \"004-sport__s-ball\",\n          \"url\": \"http://localhost:14569/cdn.local.zender.tv/live/uploads/e1cc9d4b-2969-4d50-a74f-cb39ac5f5f68/2017-11-28/9f088285-b8af-49b5-bb18-f8c3ea950d64.original.png\",\n          \"id\": \"/live/uploads/e1cc9d4b-2969-4d50-a74f-cb39ac5f5f68/2017-11-28/9f088285-b8af-49b5-bb18-f8c3ea950d64.original.png\"\n        },\n        {\n          \"title\": \"004-sport__s-bike\",\n          \"url\": \"http://localhost:14569/cdn.local.zender.tv/live/uploads/e1cc9d4b-2969-4d50-a74f-cb39ac5f5f68/2017-11-28/0a13262d-501f-42d8-82d5-5e9026d32998.original.png\",\n          \"id\": \"/live/uploads/e1cc9d4b-2969-4d50-a74f-cb39ac5f5f68/2017-11-28/0a13262d-501f-42d8-82d5-5e9026d32998.original.png\"\n        },\n        {\n          \"title\": \"004-sport__basebal\",\n          \"url\": \"http://localhost:14569/cdn.local.zender.tv/live/uploads/e1cc9d4b-2969-4d50-a74f-cb39ac5f5f68/2017-11-28/9350eeba-6228-44ea-ae85-ac13e261e6b3.original.png\",\n          \"id\": \"/live/uploads/e1cc9d4b-2969-4d50-a74f-cb39ac5f5f68/2017-11-28/9350eeba-6228-44ea-ae85-ac13e261e6b3.original.png\"\n        },\n        {\n          \"title\": \"004-sport__basketbal\",\n          \"url\": \"http://localhost:14569/cdn.local.zender.tv/live/uploads/e1cc9d4b-2969-4d50-a74f-cb39ac5f5f68/2017-11-28/f5b3882c-af2d-4b3c-a4fe-b2cdae5f6d86.original.png\",\n          \"id\": \"/live/uploads/e1cc9d4b-2969-4d50-a74f-cb39ac5f5f68/2017-11-28/f5b3882c-af2d-4b3c-a4fe-b2cdae5f6d86.original.png\"\n        },\n        {\n          \"title\": \"004-sport__fiets\",\n          \"url\": \"http://localhost:14569/cdn.local.zender.tv/live/uploads/e1cc9d4b-2969-4d50-a74f-cb39ac5f5f68/2017-11-28/882e4699-f171-4b1b-aaad-c410d210d6a3.original.png\",\n          \"id\": \"/live/uploads/e1cc9d4b-2969-4d50-a74f-cb39ac5f5f68/2017-11-28/882e4699-f171-4b1b-aaad-c410d210d6a3.original.png\"\n        }\n      ],\n      \"icon\": {\n        \"url\": \"http://localhost:14569/cdn.local.zender.tv/live/uploads/e1cc9d4b-2969-4d50-a74f-cb39ac5f5f68/2017-11-28/9f088285-b8af-49b5-bb18-f8c3ea950d64.original.png\",\n        \"id\": \"/live/uploads/e1cc9d4b-2969-4d50-a74f-cb39ac5f5f68/2017-11-28/9f088285-b8af-49b5-bb18-f8c3ea950d64.original.png\"\n      },\n      \"id\": \"30ae1d2f-dbec-4069-93cc-0bc4352d25eb\",\n      \"title\": \"004-sport\"\n    },\n    {\n      \"emojis\": [\n        {\n          \"title\": \"005-objecten__a-food01\",\n          \"url\": \"http://localhost:14569/cdn.local.zender.tv/live/uploads/e1cc9d4b-2969-4d50-a74f-cb39ac5f5f68/2017-11-28/8ed6b445-a414-48b3-9a0a-5a8b037b9f47.original.png\",\n          \"id\": \"/live/uploads/e1cc9d4b-2969-4d50-a74f-cb39ac5f5f68/2017-11-28/8ed6b445-a414-48b3-9a0a-5a8b037b9f47.original.png\"\n        },\n        {\n          \"title\": \"005-objecten__a-food02\",\n          \"url\": \"http://localhost:14569/cdn.local.zender.tv/live/uploads/e1cc9d4b-2969-4d50-a74f-cb39ac5f5f68/2017-11-28/7452ce3e-0112-4f85-b2e2-f17de5d52190.original.png\",\n          \"id\": \"/live/uploads/e1cc9d4b-2969-4d50-a74f-cb39ac5f5f68/2017-11-28/7452ce3e-0112-4f85-b2e2-f17de5d52190.original.png\"\n        },\n        {\n          \"title\": \"005-objecten__a-food03\",\n          \"url\": \"http://localhost:14569/cdn.local.zender.tv/live/uploads/e1cc9d4b-2969-4d50-a74f-cb39ac5f5f68/2017-11-28/2994ab4a-f49e-4e03-9c23-64067e629e51.original.png\",\n          \"id\": \"/live/uploads/e1cc9d4b-2969-4d50-a74f-cb39ac5f5f68/2017-11-28/2994ab4a-f49e-4e03-9c23-64067e629e51.original.png\"\n        },\n        {\n          \"title\": \"005-objecten__a-food04\",\n          \"url\": \"http://localhost:14569/cdn.local.zender.tv/live/uploads/e1cc9d4b-2969-4d50-a74f-cb39ac5f5f68/2017-11-28/43d445f0-02b1-4cde-9eb6-91b1d2267711.original.png\",\n          \"id\": \"/live/uploads/e1cc9d4b-2969-4d50-a74f-cb39ac5f5f68/2017-11-28/43d445f0-02b1-4cde-9eb6-91b1d2267711.original.png\"\n        }\n      ],\n      \"icon\": {\n        \"url\": \"http://localhost:14569/cdn.local.zender.tv/live/uploads/e1cc9d4b-2969-4d50-a74f-cb39ac5f5f68/2017-11-28/8ed6b445-a414-48b3-9a0a-5a8b037b9f47.original.png\",\n        \"id\": \"/live/uploads/e1cc9d4b-2969-4d50-a74f-cb39ac5f5f68/2017-11-28/8ed6b445-a414-48b3-9a0a-5a8b037b9f47.original.png\"\n      },\n      \"id\": \"800e75aa-16e3-4d32-aaa8-b20bc9682c98\",\n      \"title\": \"005-objects\"\n    },\n    {\n      \"emojis\": [\n        {\n          \"title\": \"005-weer__a-weer01\",\n          \"url\": \"http://localhost:14569/cdn.local.zender.tv/live/uploads/e1cc9d4b-2969-4d50-a74f-cb39ac5f5f68/2017-11-28/7d645b32-1e43-4a32-93a5-6a48d8df842f.original.png\",\n          \"id\": \"/live/uploads/e1cc9d4b-2969-4d50-a74f-cb39ac5f5f68/2017-11-28/7d645b32-1e43-4a32-93a5-6a48d8df842f.original.png\"\n        },\n        {\n          \"title\": \"005-weer__a-weer02\",\n          \"url\": \"http://localhost:14569/cdn.local.zender.tv/live/uploads/e1cc9d4b-2969-4d50-a74f-cb39ac5f5f68/2017-11-28/a47dbf95-6268-4a19-ad47-2e0f86229f32.original.png\",\n          \"id\": \"/live/uploads/e1cc9d4b-2969-4d50-a74f-cb39ac5f5f68/2017-11-28/a47dbf95-6268-4a19-ad47-2e0f86229f32.original.png\"\n        },\n        {\n          \"title\": \"005-weer__a-weer03\",\n          \"url\": \"http://localhost:14569/cdn.local.zender.tv/live/uploads/e1cc9d4b-2969-4d50-a74f-cb39ac5f5f68/2017-11-28/61689c10-f4be-4a14-a1cb-b9c2f041ee1a.original.png\",\n          \"id\": \"/live/uploads/e1cc9d4b-2969-4d50-a74f-cb39ac5f5f68/2017-11-28/61689c10-f4be-4a14-a1cb-b9c2f041ee1a.original.png\"\n        }\n      ],\n      \"icon\": {\n        \"url\": \"http://localhost:14569/cdn.local.zender.tv/live/uploads/e1cc9d4b-2969-4d50-a74f-cb39ac5f5f68/2017-11-28/7d645b32-1e43-4a32-93a5-6a48d8df842f.original.png\",\n        \"id\": \"/live/uploads/e1cc9d4b-2969-4d50-a74f-cb39ac5f5f68/2017-11-28/7d645b32-1e43-4a32-93a5-6a48d8df842f.original.png\"\n      },\n      \"id\": \"737178d3-a13b-4b44-af2c-04f9a4b69475\",\n      \"title\": \"005-weather\"\n    }\n  ]\n}"
								},
								"url": {
									"raw": "{{emojisApiHost}}/v1/channels/{{channelId}}/streams/{{streamId}}/emojis/config",
									"host": [
										"{{emojisApiHost}}"
									],
									"path": [
										"v1",
										"channels",
										"{{channelId}}",
										"streams",
										"{{streamId}}",
										"emojis",
										"config"
									]
								},
								"description": "Update the emojis config of a stream. When creating a stream it will automatically create an emojis config.\n\n- `sortedSets`:\n- `enabled`: enables sending emojis"
							},
							"response": [
								{
									"name": "Enable Emojis",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{adminToken}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"enabled\": true\n}"
										},
										"url": {
											"raw": "{{emojisApiHost}}/channels/{{channelId}}/streams/{{streamId}}/emojis/config",
											"host": [
												"{{emojisApiHost}}"
											],
											"path": [
												"channels",
												"{{channelId}}",
												"streams",
												"{{streamId}}",
												"emojis",
												"config"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "Text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Disable Emojis",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{adminToken}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"enabled\": false\n}"
										},
										"url": {
											"raw": "{{emojisApiHost}}/channels/{{channelId}}/streams/{{streamId}}/emojis/config",
											"host": [
												"{{emojisApiHost}}"
											],
											"path": [
												"channels",
												"{{channelId}}",
												"streams",
												"{{streamId}}",
												"emojis",
												"config"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "Text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Get Emojis Reactions",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code is 200\"] = responseCode.code === 200;",
											"var data = JSON.parse(responseBody);",
											"tests[\"Response has content id\"] = data.id !== null;",
											"postman.setEnvironmentVariable(\"contentId\", data.id);"
										]
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{adminToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{emojisApiHost}}/v1/channels/{{channelId}}/streams/{{streamId}}/emojis/reactions",
									"host": [
										"{{emojisApiHost}}"
									],
									"path": [
										"v1",
										"channels",
										"{{channelId}}",
										"streams",
										"{{streamId}}",
										"emojis",
										"reactions"
									]
								},
								"description": "Gets the total of the allowed emojis."
							},
							"response": []
						},
						{
							"name": "Enable Emojis",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code is 200\"] = responseCode.code === 200;",
											"var data = JSON.parse(responseBody);",
											"tests[\"Response has content id\"] = data.id !== null;",
											"postman.setEnvironmentVariable(\"contentId\", data.id);"
										]
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{adminToken}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"enabled\": true\n}"
								},
								"url": {
									"raw": "{{emojisApiHost}}/v1/channels/{{channelId}}/streams/{{streamId}}/emojis/config",
									"host": [
										"{{emojisApiHost}}"
									],
									"path": [
										"v1",
										"channels",
										"{{channelId}}",
										"streams",
										"{{streamId}}",
										"emojis",
										"config"
									]
								},
								"description": "Update the emojis config of a stream. When creating a stream it will automatically create an emojis config.\n\n- `sortedSets`:\n- `enabled`: enables sending emojis"
							},
							"response": [
								{
									"name": "Disable Emojis",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{adminToken}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"enabled\": false\n}"
										},
										"url": {
											"raw": "{{emojisApiHost}}/channels/{{channelId}}/streams/{{streamId}}/emojis/config",
											"host": [
												"{{emojisApiHost}}"
											],
											"path": [
												"channels",
												"{{channelId}}",
												"streams",
												"{{streamId}}",
												"emojis",
												"config"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "Text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Create and Sort Emoji Sets",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{adminToken}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"sortedSets\": [\n    {\n      \"title\": \"Zender API Emoji Set\",\n      \"emojis\": [\n        {\n          \"id\": \"73ebf11e-ad24-4dcb-878f-3e9b06db280e.original.png\",\n          \"title\": \"73ebf11e-ad24-4dcb-878f-3e9b06db280e.original.png\",\n          \"url\": \"http://localhost:14569/cdn.local.zender.tv/live/uploads/e1cc9d4b-2969-4d50-a74f-cb39ac5f5f68/2017-11-28/73ebf11e-ad24-4dcb-878f-3e9b06db280e.original.png\"\n        },\n        {\n          \"id\": \"560527f8-4319-4021-a522-9b4ad0aecad5.original.png\",\n          \"title\": \"560527f8-4319-4021-a522-9b4ad0aecad5.original.png\",\n          \"url\": \"http://localhost:14569/cdn.local.zender.tv/live/uploads/e1cc9d4b-2969-4d50-a74f-cb39ac5f5f68/2017-11-28/560527f8-4319-4021-a522-9b4ad0aecad5.original.png\"\n        },\n        {\n          \"id\": \"26b9db64-ec8d-47fe-92c9-d4e104213ab9.original.png\",\n          \"title\": \"26b9db64-ec8d-47fe-92c9-d4e104213ab9.original.png\",\n          \"url\": \"http://localhost:14569/cdn.local.zender.tv/live/uploads/e1cc9d4b-2969-4d50-a74f-cb39ac5f5f68/2017-11-28/26b9db64-ec8d-47fe-92c9-d4e104213ab9.original.png\"\n        }\n      ],\n      \"icon\": {\n        \"url\": \"http://localhost:14569/cdn.local.zender.tv/live/uploads/e1cc9d4b-2969-4d50-a74f-cb39ac5f5f68/2017-11-28/73ebf11e-ad24-4dcb-878f-3e9b06db280e.original.png\"\n      },\n      \"type\": \"custom\",\n      \"enabled\": true\n    },\n    {\n      \"emojis\": [\n        {\n          \"title\": \"000-gezichten__smile01\",\n          \"url\": \"http://localhost:14569/cdn.local.zender.tv/live/uploads/e1cc9d4b-2969-4d50-a74f-cb39ac5f5f68/2017-11-28/fbc5dabe-8fb7-4c1c-8dd0-d70d37ce4559.original.png\",\n          \"id\": \"/live/uploads/e1cc9d4b-2969-4d50-a74f-cb39ac5f5f68/2017-11-28/fbc5dabe-8fb7-4c1c-8dd0-d70d37ce4559.original.png\"\n        },\n        {\n          \"title\": \"000-gezichten__smile02\",\n          \"url\": \"http://localhost:14569/cdn.local.zender.tv/live/uploads/e1cc9d4b-2969-4d50-a74f-cb39ac5f5f68/2017-11-28/b1554f8c-a099-4146-bb72-74e65524ac71.original.png\",\n          \"id\": \"/live/uploads/e1cc9d4b-2969-4d50-a74f-cb39ac5f5f68/2017-11-28/b1554f8c-a099-4146-bb72-74e65524ac71.original.png\"\n        },\n        {\n          \"title\": \"000-gezichten__smile03\",\n          \"url\": \"http://localhost:14569/cdn.local.zender.tv/live/uploads/e1cc9d4b-2969-4d50-a74f-cb39ac5f5f68/2017-11-28/a3920971-0169-41d8-b5c7-b1a5e4ebd853.original.png\",\n          \"id\": \"/live/uploads/e1cc9d4b-2969-4d50-a74f-cb39ac5f5f68/2017-11-28/a3920971-0169-41d8-b5c7-b1a5e4ebd853.original.png\"\n        },\n        {\n          \"title\": \"000-gezichten__smile04\",\n          \"url\": \"http://localhost:14569/cdn.local.zender.tv/live/uploads/e1cc9d4b-2969-4d50-a74f-cb39ac5f5f68/2017-11-28/5734048c-d83b-4941-8bd6-797658274424.original.png\",\n          \"id\": \"/live/uploads/e1cc9d4b-2969-4d50-a74f-cb39ac5f5f68/2017-11-28/5734048c-d83b-4941-8bd6-797658274424.original.png\"\n        },\n        {\n          \"title\": \"000-gezichten__smile05\",\n          \"url\": \"http://localhost:14569/cdn.local.zender.tv/live/uploads/e1cc9d4b-2969-4d50-a74f-cb39ac5f5f68/2017-11-28/5badba92-e650-4223-ba18-87585e1e07a6.original.png\",\n          \"id\": \"/live/uploads/e1cc9d4b-2969-4d50-a74f-cb39ac5f5f68/2017-11-28/5badba92-e650-4223-ba18-87585e1e07a6.original.png\"\n        },\n        {\n          \"title\": \"000-gezichten__smile06\",\n          \"url\": \"http://localhost:14569/cdn.local.zender.tv/live/uploads/e1cc9d4b-2969-4d50-a74f-cb39ac5f5f68/2017-11-28/3e93bc03-5c51-452a-a4ca-bd6e2121bcce.original.png\",\n          \"id\": \"/live/uploads/e1cc9d4b-2969-4d50-a74f-cb39ac5f5f68/2017-11-28/3e93bc03-5c51-452a-a4ca-bd6e2121bcce.original.png\"\n        },\n        {\n          \"title\": \"000-gezichten__smile07\",\n          \"url\": \"http://localhost:14569/cdn.local.zender.tv/live/uploads/e1cc9d4b-2969-4d50-a74f-cb39ac5f5f68/2017-11-28/73eb9ba8-a9f2-465d-882d-cf29d6349029.original.png\",\n          \"id\": \"/live/uploads/e1cc9d4b-2969-4d50-a74f-cb39ac5f5f68/2017-11-28/73eb9ba8-a9f2-465d-882d-cf29d6349029.original.png\"\n        },\n        {\n          \"title\": \"000-gezichten__smile08\",\n          \"url\": \"http://localhost:14569/cdn.local.zender.tv/live/uploads/e1cc9d4b-2969-4d50-a74f-cb39ac5f5f68/2017-11-28/cab89d89-67a6-4ec8-ab06-3fecee8c9d8d.original.png\",\n          \"id\": \"/live/uploads/e1cc9d4b-2969-4d50-a74f-cb39ac5f5f68/2017-11-28/cab89d89-67a6-4ec8-ab06-3fecee8c9d8d.original.png\"\n        }\n      ],\n      \"icon\": {\n        \"url\": \"http://localhost:14569/cdn.local.zender.tv/live/uploads/e1cc9d4b-2969-4d50-a74f-cb39ac5f5f68/2017-11-28/fbc5dabe-8fb7-4c1c-8dd0-d70d37ce4559.original.png\",\n        \"id\": \"/live/uploads/e1cc9d4b-2969-4d50-a74f-cb39ac5f5f68/2017-11-28/fbc5dabe-8fb7-4c1c-8dd0-d70d37ce4559.original.png\"\n      },\n      \"id\": \"7b3f2436-dae0-45cf-aad2-4320cd342640\",\n      \"title\": \"000-faces\"\n    },\n    {\n      \"emojis\": [\n        {\n          \"title\": \"001-handen__hand01\",\n          \"url\": \"http://localhost:14569/cdn.local.zender.tv/live/uploads/e1cc9d4b-2969-4d50-a74f-cb39ac5f5f68/2017-11-28/16d20a2e-47ee-4315-b673-7b91e5230763.original.png\",\n          \"id\": \"/live/uploads/e1cc9d4b-2969-4d50-a74f-cb39ac5f5f68/2017-11-28/16d20a2e-47ee-4315-b673-7b91e5230763.original.png\"\n        },\n        {\n          \"title\": \"001-handen__hand02\",\n          \"url\": \"http://localhost:14569/cdn.local.zender.tv/live/uploads/e1cc9d4b-2969-4d50-a74f-cb39ac5f5f68/2017-11-28/655e92a4-5d18-47ab-9cf6-e39c2cb4babf.original.png\",\n          \"id\": \"/live/uploads/e1cc9d4b-2969-4d50-a74f-cb39ac5f5f68/2017-11-28/655e92a4-5d18-47ab-9cf6-e39c2cb4babf.original.png\"\n        },\n        {\n          \"title\": \"001-handen__hand03\",\n          \"url\": \"http://localhost:14569/cdn.local.zender.tv/live/uploads/e1cc9d4b-2969-4d50-a74f-cb39ac5f5f68/2017-11-28/1b7fe938-d774-474c-a194-d3dd1fb865a8.original.png\",\n          \"id\": \"/live/uploads/e1cc9d4b-2969-4d50-a74f-cb39ac5f5f68/2017-11-28/1b7fe938-d774-474c-a194-d3dd1fb865a8.original.png\"\n        },\n        {\n          \"title\": \"001-handen__hand04\",\n          \"url\": \"http://localhost:14569/cdn.local.zender.tv/live/uploads/e1cc9d4b-2969-4d50-a74f-cb39ac5f5f68/2017-11-28/e31906f3-e6be-4fb8-a902-5c07de7707bf.original.png\",\n          \"id\": \"/live/uploads/e1cc9d4b-2969-4d50-a74f-cb39ac5f5f68/2017-11-28/e31906f3-e6be-4fb8-a902-5c07de7707bf.original.png\"\n        },\n        {\n          \"title\": \"001-handen__hand05\",\n          \"url\": \"http://localhost:14569/cdn.local.zender.tv/live/uploads/e1cc9d4b-2969-4d50-a74f-cb39ac5f5f68/2017-11-28/9308dd80-b525-4313-9bff-7f602fbb9435.original.png\",\n          \"id\": \"/live/uploads/e1cc9d4b-2969-4d50-a74f-cb39ac5f5f68/2017-11-28/9308dd80-b525-4313-9bff-7f602fbb9435.original.png\"\n        },\n        {\n          \"title\": \"001-handen__hand06\",\n          \"url\": \"http://localhost:14569/cdn.local.zender.tv/live/uploads/e1cc9d4b-2969-4d50-a74f-cb39ac5f5f68/2017-11-28/957a5877-94a9-45c5-94b4-26c6e71c7b5d.original.png\",\n          \"id\": \"/live/uploads/e1cc9d4b-2969-4d50-a74f-cb39ac5f5f68/2017-11-28/957a5877-94a9-45c5-94b4-26c6e71c7b5d.original.png\"\n        }\n      ],\n      \"icon\": {\n        \"url\": \"http://localhost:14569/cdn.local.zender.tv/live/uploads/e1cc9d4b-2969-4d50-a74f-cb39ac5f5f68/2017-11-28/16d20a2e-47ee-4315-b673-7b91e5230763.original.png\",\n        \"id\": \"/live/uploads/e1cc9d4b-2969-4d50-a74f-cb39ac5f5f68/2017-11-28/16d20a2e-47ee-4315-b673-7b91e5230763.original.png\"\n      },\n      \"id\": \"4775a542-bc43-4ce6-bf43-27a0fa7acc78\",\n      \"title\": \"001-hands\"\n    },\n    {\n      \"emojis\": [\n        {\n          \"title\": \"002-liefde__love01\",\n          \"url\": \"http://localhost:14569/cdn.local.zender.tv/live/uploads/e1cc9d4b-2969-4d50-a74f-cb39ac5f5f68/2017-11-28/9523c952-2e23-4c3a-bf83-61c9a17a4168.original.png\",\n          \"id\": \"/live/uploads/e1cc9d4b-2969-4d50-a74f-cb39ac5f5f68/2017-11-28/9523c952-2e23-4c3a-bf83-61c9a17a4168.original.png\"\n        },\n        {\n          \"title\": \"002-liefde__love02\",\n          \"url\": \"http://localhost:14569/cdn.local.zender.tv/live/uploads/e1cc9d4b-2969-4d50-a74f-cb39ac5f5f68/2017-11-28/f2730bd7-aa84-4027-baae-0bfbc5a2e065.original.png\",\n          \"id\": \"/live/uploads/e1cc9d4b-2969-4d50-a74f-cb39ac5f5f68/2017-11-28/f2730bd7-aa84-4027-baae-0bfbc5a2e065.original.png\"\n        },\n        {\n          \"title\": \"002-liefde__love03\",\n          \"url\": \"http://localhost:14569/cdn.local.zender.tv/live/uploads/e1cc9d4b-2969-4d50-a74f-cb39ac5f5f68/2017-11-28/18801fe1-bc93-4673-ac7a-e5de23677fd8.original.png\",\n          \"id\": \"/live/uploads/e1cc9d4b-2969-4d50-a74f-cb39ac5f5f68/2017-11-28/18801fe1-bc93-4673-ac7a-e5de23677fd8.original.png\"\n        },\n        {\n          \"title\": \"002-liefde__love04\",\n          \"url\": \"http://localhost:14569/cdn.local.zender.tv/live/uploads/e1cc9d4b-2969-4d50-a74f-cb39ac5f5f68/2017-11-28/f1ad0ac7-6e89-47cd-8af4-880dbf344dd5.original.png\",\n          \"id\": \"/live/uploads/e1cc9d4b-2969-4d50-a74f-cb39ac5f5f68/2017-11-28/f1ad0ac7-6e89-47cd-8af4-880dbf344dd5.original.png\"\n        },\n        {\n          \"title\": \"002-liefde__love05\",\n          \"url\": \"http://localhost:14569/cdn.local.zender.tv/live/uploads/e1cc9d4b-2969-4d50-a74f-cb39ac5f5f68/2017-11-28/4bcf20b5-237c-48e1-864c-acd5e0a736fe.original.png\",\n          \"id\": \"/live/uploads/e1cc9d4b-2969-4d50-a74f-cb39ac5f5f68/2017-11-28/4bcf20b5-237c-48e1-864c-acd5e0a736fe.original.png\"\n        },\n        {\n          \"title\": \"002-liefde__love06\",\n          \"url\": \"http://localhost:14569/cdn.local.zender.tv/live/uploads/e1cc9d4b-2969-4d50-a74f-cb39ac5f5f68/2017-11-28/bc9b218a-2170-4aba-aeea-efb777ff15d3.original.png\",\n          \"id\": \"/live/uploads/e1cc9d4b-2969-4d50-a74f-cb39ac5f5f68/2017-11-28/bc9b218a-2170-4aba-aeea-efb777ff15d3.original.png\"\n        }\n      ],\n      \"icon\": {\n        \"url\": \"http://localhost:14569/cdn.local.zender.tv/live/uploads/e1cc9d4b-2969-4d50-a74f-cb39ac5f5f68/2017-11-28/9523c952-2e23-4c3a-bf83-61c9a17a4168.original.png\",\n        \"id\": \"/live/uploads/e1cc9d4b-2969-4d50-a74f-cb39ac5f5f68/2017-11-28/9523c952-2e23-4c3a-bf83-61c9a17a4168.original.png\"\n      },\n      \"id\": \"5b9dab91-f96d-4b60-a612-39a2ef567077\",\n      \"title\": \"002-love\"\n    },\n    {\n      \"emojis\": [\n        {\n          \"title\": \"003-dieren__a-bunny\",\n          \"url\": \"http://localhost:14569/cdn.local.zender.tv/live/uploads/e1cc9d4b-2969-4d50-a74f-cb39ac5f5f68/2017-11-28/d0e333f7-1905-4acb-9e63-4102c11e9db5.original.png\",\n          \"id\": \"/live/uploads/e1cc9d4b-2969-4d50-a74f-cb39ac5f5f68/2017-11-28/d0e333f7-1905-4acb-9e63-4102c11e9db5.original.png\"\n        },\n        {\n          \"title\": \"003-dieren__a-cat01\",\n          \"url\": \"http://localhost:14569/cdn.local.zender.tv/live/uploads/e1cc9d4b-2969-4d50-a74f-cb39ac5f5f68/2017-11-28/2cd7d92f-ebff-4bb3-b4cd-eca611443244.original.png\",\n          \"id\": \"/live/uploads/e1cc9d4b-2969-4d50-a74f-cb39ac5f5f68/2017-11-28/2cd7d92f-ebff-4bb3-b4cd-eca611443244.original.png\"\n        },\n        {\n          \"title\": \"003-dieren__a-cat02\",\n          \"url\": \"http://localhost:14569/cdn.local.zender.tv/live/uploads/e1cc9d4b-2969-4d50-a74f-cb39ac5f5f68/2017-11-28/c6e365e5-5cde-410f-b036-9a5970ec3aa6.original.png\",\n          \"id\": \"/live/uploads/e1cc9d4b-2969-4d50-a74f-cb39ac5f5f68/2017-11-28/c6e365e5-5cde-410f-b036-9a5970ec3aa6.original.png\"\n        },\n        {\n          \"title\": \"003-dieren__a-cat03\",\n          \"url\": \"http://localhost:14569/cdn.local.zender.tv/live/uploads/e1cc9d4b-2969-4d50-a74f-cb39ac5f5f68/2017-11-28/97d6ef27-1be6-4071-9f19-b613b24d553e.original.png\",\n          \"id\": \"/live/uploads/e1cc9d4b-2969-4d50-a74f-cb39ac5f5f68/2017-11-28/97d6ef27-1be6-4071-9f19-b613b24d553e.original.png\"\n        },\n        {\n          \"title\": \"003-dieren__a-cat04\",\n          \"url\": \"http://localhost:14569/cdn.local.zender.tv/live/uploads/e1cc9d4b-2969-4d50-a74f-cb39ac5f5f68/2017-11-28/f64293a2-a7c1-42d8-a62c-5b303617b2df.original.png\",\n          \"id\": \"/live/uploads/e1cc9d4b-2969-4d50-a74f-cb39ac5f5f68/2017-11-28/f64293a2-a7c1-42d8-a62c-5b303617b2df.original.png\"\n        },\n        {\n          \"title\": \"003-dieren__a-chicken\",\n          \"url\": \"http://localhost:14569/cdn.local.zender.tv/live/uploads/e1cc9d4b-2969-4d50-a74f-cb39ac5f5f68/2017-11-28/caf5e45c-fe08-4740-b5ff-7e160d88cc4e.original.png\",\n          \"id\": \"/live/uploads/e1cc9d4b-2969-4d50-a74f-cb39ac5f5f68/2017-11-28/caf5e45c-fe08-4740-b5ff-7e160d88cc4e.original.png\"\n        }\n      ],\n      \"icon\": {\n        \"url\": \"http://localhost:14569/cdn.local.zender.tv/live/uploads/e1cc9d4b-2969-4d50-a74f-cb39ac5f5f68/2017-11-28/d0e333f7-1905-4acb-9e63-4102c11e9db5.original.png\",\n        \"id\": \"/live/uploads/e1cc9d4b-2969-4d50-a74f-cb39ac5f5f68/2017-11-28/d0e333f7-1905-4acb-9e63-4102c11e9db5.original.png\"\n      },\n      \"id\": \"ed93d548-63a7-4729-bec8-8fe9cbda2dd5\",\n      \"title\": \"003-animals\"\n    },\n    {\n      \"emojis\": [\n        {\n          \"title\": \"004-sport__s-ball\",\n          \"url\": \"http://localhost:14569/cdn.local.zender.tv/live/uploads/e1cc9d4b-2969-4d50-a74f-cb39ac5f5f68/2017-11-28/9f088285-b8af-49b5-bb18-f8c3ea950d64.original.png\",\n          \"id\": \"/live/uploads/e1cc9d4b-2969-4d50-a74f-cb39ac5f5f68/2017-11-28/9f088285-b8af-49b5-bb18-f8c3ea950d64.original.png\"\n        },\n        {\n          \"title\": \"004-sport__s-bike\",\n          \"url\": \"http://localhost:14569/cdn.local.zender.tv/live/uploads/e1cc9d4b-2969-4d50-a74f-cb39ac5f5f68/2017-11-28/0a13262d-501f-42d8-82d5-5e9026d32998.original.png\",\n          \"id\": \"/live/uploads/e1cc9d4b-2969-4d50-a74f-cb39ac5f5f68/2017-11-28/0a13262d-501f-42d8-82d5-5e9026d32998.original.png\"\n        },\n        {\n          \"title\": \"004-sport__basebal\",\n          \"url\": \"http://localhost:14569/cdn.local.zender.tv/live/uploads/e1cc9d4b-2969-4d50-a74f-cb39ac5f5f68/2017-11-28/9350eeba-6228-44ea-ae85-ac13e261e6b3.original.png\",\n          \"id\": \"/live/uploads/e1cc9d4b-2969-4d50-a74f-cb39ac5f5f68/2017-11-28/9350eeba-6228-44ea-ae85-ac13e261e6b3.original.png\"\n        },\n        {\n          \"title\": \"004-sport__basketbal\",\n          \"url\": \"http://localhost:14569/cdn.local.zender.tv/live/uploads/e1cc9d4b-2969-4d50-a74f-cb39ac5f5f68/2017-11-28/f5b3882c-af2d-4b3c-a4fe-b2cdae5f6d86.original.png\",\n          \"id\": \"/live/uploads/e1cc9d4b-2969-4d50-a74f-cb39ac5f5f68/2017-11-28/f5b3882c-af2d-4b3c-a4fe-b2cdae5f6d86.original.png\"\n        },\n        {\n          \"title\": \"004-sport__fiets\",\n          \"url\": \"http://localhost:14569/cdn.local.zender.tv/live/uploads/e1cc9d4b-2969-4d50-a74f-cb39ac5f5f68/2017-11-28/882e4699-f171-4b1b-aaad-c410d210d6a3.original.png\",\n          \"id\": \"/live/uploads/e1cc9d4b-2969-4d50-a74f-cb39ac5f5f68/2017-11-28/882e4699-f171-4b1b-aaad-c410d210d6a3.original.png\"\n        }\n      ],\n      \"icon\": {\n        \"url\": \"http://localhost:14569/cdn.local.zender.tv/live/uploads/e1cc9d4b-2969-4d50-a74f-cb39ac5f5f68/2017-11-28/9f088285-b8af-49b5-bb18-f8c3ea950d64.original.png\",\n        \"id\": \"/live/uploads/e1cc9d4b-2969-4d50-a74f-cb39ac5f5f68/2017-11-28/9f088285-b8af-49b5-bb18-f8c3ea950d64.original.png\"\n      },\n      \"id\": \"30ae1d2f-dbec-4069-93cc-0bc4352d25eb\",\n      \"title\": \"004-sport\"\n    },\n    {\n      \"emojis\": [\n        {\n          \"title\": \"005-objecten__a-food01\",\n          \"url\": \"http://localhost:14569/cdn.local.zender.tv/live/uploads/e1cc9d4b-2969-4d50-a74f-cb39ac5f5f68/2017-11-28/8ed6b445-a414-48b3-9a0a-5a8b037b9f47.original.png\",\n          \"id\": \"/live/uploads/e1cc9d4b-2969-4d50-a74f-cb39ac5f5f68/2017-11-28/8ed6b445-a414-48b3-9a0a-5a8b037b9f47.original.png\"\n        },\n        {\n          \"title\": \"005-objecten__a-food02\",\n          \"url\": \"http://localhost:14569/cdn.local.zender.tv/live/uploads/e1cc9d4b-2969-4d50-a74f-cb39ac5f5f68/2017-11-28/7452ce3e-0112-4f85-b2e2-f17de5d52190.original.png\",\n          \"id\": \"/live/uploads/e1cc9d4b-2969-4d50-a74f-cb39ac5f5f68/2017-11-28/7452ce3e-0112-4f85-b2e2-f17de5d52190.original.png\"\n        },\n        {\n          \"title\": \"005-objecten__a-food03\",\n          \"url\": \"http://localhost:14569/cdn.local.zender.tv/live/uploads/e1cc9d4b-2969-4d50-a74f-cb39ac5f5f68/2017-11-28/2994ab4a-f49e-4e03-9c23-64067e629e51.original.png\",\n          \"id\": \"/live/uploads/e1cc9d4b-2969-4d50-a74f-cb39ac5f5f68/2017-11-28/2994ab4a-f49e-4e03-9c23-64067e629e51.original.png\"\n        },\n        {\n          \"title\": \"005-objecten__a-food04\",\n          \"url\": \"http://localhost:14569/cdn.local.zender.tv/live/uploads/e1cc9d4b-2969-4d50-a74f-cb39ac5f5f68/2017-11-28/43d445f0-02b1-4cde-9eb6-91b1d2267711.original.png\",\n          \"id\": \"/live/uploads/e1cc9d4b-2969-4d50-a74f-cb39ac5f5f68/2017-11-28/43d445f0-02b1-4cde-9eb6-91b1d2267711.original.png\"\n        }\n      ],\n      \"icon\": {\n        \"url\": \"http://localhost:14569/cdn.local.zender.tv/live/uploads/e1cc9d4b-2969-4d50-a74f-cb39ac5f5f68/2017-11-28/8ed6b445-a414-48b3-9a0a-5a8b037b9f47.original.png\",\n        \"id\": \"/live/uploads/e1cc9d4b-2969-4d50-a74f-cb39ac5f5f68/2017-11-28/8ed6b445-a414-48b3-9a0a-5a8b037b9f47.original.png\"\n      },\n      \"id\": \"800e75aa-16e3-4d32-aaa8-b20bc9682c98\",\n      \"title\": \"005-objects\"\n    },\n    {\n      \"emojis\": [\n        {\n          \"title\": \"005-weer__a-weer01\",\n          \"url\": \"http://localhost:14569/cdn.local.zender.tv/live/uploads/e1cc9d4b-2969-4d50-a74f-cb39ac5f5f68/2017-11-28/7d645b32-1e43-4a32-93a5-6a48d8df842f.original.png\",\n          \"id\": \"/live/uploads/e1cc9d4b-2969-4d50-a74f-cb39ac5f5f68/2017-11-28/7d645b32-1e43-4a32-93a5-6a48d8df842f.original.png\"\n        },\n        {\n          \"title\": \"005-weer__a-weer02\",\n          \"url\": \"http://localhost:14569/cdn.local.zender.tv/live/uploads/e1cc9d4b-2969-4d50-a74f-cb39ac5f5f68/2017-11-28/a47dbf95-6268-4a19-ad47-2e0f86229f32.original.png\",\n          \"id\": \"/live/uploads/e1cc9d4b-2969-4d50-a74f-cb39ac5f5f68/2017-11-28/a47dbf95-6268-4a19-ad47-2e0f86229f32.original.png\"\n        },\n        {\n          \"title\": \"005-weer__a-weer03\",\n          \"url\": \"http://localhost:14569/cdn.local.zender.tv/live/uploads/e1cc9d4b-2969-4d50-a74f-cb39ac5f5f68/2017-11-28/61689c10-f4be-4a14-a1cb-b9c2f041ee1a.original.png\",\n          \"id\": \"/live/uploads/e1cc9d4b-2969-4d50-a74f-cb39ac5f5f68/2017-11-28/61689c10-f4be-4a14-a1cb-b9c2f041ee1a.original.png\"\n        }\n      ],\n      \"icon\": {\n        \"url\": \"http://localhost:14569/cdn.local.zender.tv/live/uploads/e1cc9d4b-2969-4d50-a74f-cb39ac5f5f68/2017-11-28/7d645b32-1e43-4a32-93a5-6a48d8df842f.original.png\",\n        \"id\": \"/live/uploads/e1cc9d4b-2969-4d50-a74f-cb39ac5f5f68/2017-11-28/7d645b32-1e43-4a32-93a5-6a48d8df842f.original.png\"\n      },\n      \"id\": \"737178d3-a13b-4b44-af2c-04f9a4b69475\",\n      \"title\": \"005-weather\"\n    }\n  ]\n}"
										},
										"url": {
											"raw": "{{emojisApiHost}}/channels/{{channelId}}/streams/{{streamId}}/emojis/config",
											"host": [
												"{{emojisApiHost}}"
											],
											"path": [
												"channels",
												"{{channelId}}",
												"streams",
												"{{streamId}}",
												"emojis",
												"config"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "Text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Enable Emojis",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{adminToken}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"enabled\": true\n}"
										},
										"url": {
											"raw": "{{emojisApiHost}}/channels/{{channelId}}/streams/{{streamId}}/emojis/config",
											"host": [
												"{{emojisApiHost}}"
											],
											"path": [
												"channels",
												"{{channelId}}",
												"streams",
												"{{streamId}}",
												"emojis",
												"config"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "Text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Disable Emojis",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code is 200\"] = responseCode.code === 200;",
											"var data = JSON.parse(responseBody);",
											"tests[\"Response has content id\"] = data.id !== null;",
											"postman.setEnvironmentVariable(\"contentId\", data.id);"
										]
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{adminToken}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"enabled\": false\n}"
								},
								"url": {
									"raw": "{{emojisApiHost}}/v1/channels/{{channelId}}/streams/{{streamId}}/emojis/config",
									"host": [
										"{{emojisApiHost}}"
									],
									"path": [
										"v1",
										"channels",
										"{{channelId}}",
										"streams",
										"{{streamId}}",
										"emojis",
										"config"
									]
								},
								"description": "Update the emojis config of a stream. When creating a stream it will automatically create an emojis config.\n\n- `sortedSets`:\n- `enabled`: enables sending emojis"
							},
							"response": [
								{
									"name": "Disable Emojis",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{adminToken}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"enabled\": false\n}"
										},
										"url": {
											"raw": "{{emojisApiHost}}/channels/{{channelId}}/streams/{{streamId}}/emojis/config",
											"host": [
												"{{emojisApiHost}}"
											],
											"path": [
												"channels",
												"{{channelId}}",
												"streams",
												"{{streamId}}",
												"emojis",
												"config"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "Text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Enable Emojis",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{adminToken}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"enabled\": true\n}"
										},
										"url": {
											"raw": "{{emojisApiHost}}/channels/{{channelId}}/streams/{{streamId}}/emojis/config",
											"host": [
												"{{emojisApiHost}}"
											],
											"path": [
												"channels",
												"{{channelId}}",
												"streams",
												"{{streamId}}",
												"emojis",
												"config"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "Text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Create and Sort Emoji Sets",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{adminToken}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"sortedSets\": [\n    {\n      \"title\": \"Zender API Emoji Set\",\n      \"emojis\": [\n        {\n          \"id\": \"73ebf11e-ad24-4dcb-878f-3e9b06db280e.original.png\",\n          \"title\": \"73ebf11e-ad24-4dcb-878f-3e9b06db280e.original.png\",\n          \"url\": \"http://localhost:14569/cdn.local.zender.tv/live/uploads/e1cc9d4b-2969-4d50-a74f-cb39ac5f5f68/2017-11-28/73ebf11e-ad24-4dcb-878f-3e9b06db280e.original.png\"\n        },\n        {\n          \"id\": \"560527f8-4319-4021-a522-9b4ad0aecad5.original.png\",\n          \"title\": \"560527f8-4319-4021-a522-9b4ad0aecad5.original.png\",\n          \"url\": \"http://localhost:14569/cdn.local.zender.tv/live/uploads/e1cc9d4b-2969-4d50-a74f-cb39ac5f5f68/2017-11-28/560527f8-4319-4021-a522-9b4ad0aecad5.original.png\"\n        },\n        {\n          \"id\": \"26b9db64-ec8d-47fe-92c9-d4e104213ab9.original.png\",\n          \"title\": \"26b9db64-ec8d-47fe-92c9-d4e104213ab9.original.png\",\n          \"url\": \"http://localhost:14569/cdn.local.zender.tv/live/uploads/e1cc9d4b-2969-4d50-a74f-cb39ac5f5f68/2017-11-28/26b9db64-ec8d-47fe-92c9-d4e104213ab9.original.png\"\n        }\n      ],\n      \"icon\": {\n        \"url\": \"http://localhost:14569/cdn.local.zender.tv/live/uploads/e1cc9d4b-2969-4d50-a74f-cb39ac5f5f68/2017-11-28/73ebf11e-ad24-4dcb-878f-3e9b06db280e.original.png\"\n      },\n      \"type\": \"custom\",\n      \"enabled\": true\n    },\n    {\n      \"emojis\": [\n        {\n          \"title\": \"000-gezichten__smile01\",\n          \"url\": \"http://localhost:14569/cdn.local.zender.tv/live/uploads/e1cc9d4b-2969-4d50-a74f-cb39ac5f5f68/2017-11-28/fbc5dabe-8fb7-4c1c-8dd0-d70d37ce4559.original.png\",\n          \"id\": \"/live/uploads/e1cc9d4b-2969-4d50-a74f-cb39ac5f5f68/2017-11-28/fbc5dabe-8fb7-4c1c-8dd0-d70d37ce4559.original.png\"\n        },\n        {\n          \"title\": \"000-gezichten__smile02\",\n          \"url\": \"http://localhost:14569/cdn.local.zender.tv/live/uploads/e1cc9d4b-2969-4d50-a74f-cb39ac5f5f68/2017-11-28/b1554f8c-a099-4146-bb72-74e65524ac71.original.png\",\n          \"id\": \"/live/uploads/e1cc9d4b-2969-4d50-a74f-cb39ac5f5f68/2017-11-28/b1554f8c-a099-4146-bb72-74e65524ac71.original.png\"\n        },\n        {\n          \"title\": \"000-gezichten__smile03\",\n          \"url\": \"http://localhost:14569/cdn.local.zender.tv/live/uploads/e1cc9d4b-2969-4d50-a74f-cb39ac5f5f68/2017-11-28/a3920971-0169-41d8-b5c7-b1a5e4ebd853.original.png\",\n          \"id\": \"/live/uploads/e1cc9d4b-2969-4d50-a74f-cb39ac5f5f68/2017-11-28/a3920971-0169-41d8-b5c7-b1a5e4ebd853.original.png\"\n        },\n        {\n          \"title\": \"000-gezichten__smile04\",\n          \"url\": \"http://localhost:14569/cdn.local.zender.tv/live/uploads/e1cc9d4b-2969-4d50-a74f-cb39ac5f5f68/2017-11-28/5734048c-d83b-4941-8bd6-797658274424.original.png\",\n          \"id\": \"/live/uploads/e1cc9d4b-2969-4d50-a74f-cb39ac5f5f68/2017-11-28/5734048c-d83b-4941-8bd6-797658274424.original.png\"\n        },\n        {\n          \"title\": \"000-gezichten__smile05\",\n          \"url\": \"http://localhost:14569/cdn.local.zender.tv/live/uploads/e1cc9d4b-2969-4d50-a74f-cb39ac5f5f68/2017-11-28/5badba92-e650-4223-ba18-87585e1e07a6.original.png\",\n          \"id\": \"/live/uploads/e1cc9d4b-2969-4d50-a74f-cb39ac5f5f68/2017-11-28/5badba92-e650-4223-ba18-87585e1e07a6.original.png\"\n        },\n        {\n          \"title\": \"000-gezichten__smile06\",\n          \"url\": \"http://localhost:14569/cdn.local.zender.tv/live/uploads/e1cc9d4b-2969-4d50-a74f-cb39ac5f5f68/2017-11-28/3e93bc03-5c51-452a-a4ca-bd6e2121bcce.original.png\",\n          \"id\": \"/live/uploads/e1cc9d4b-2969-4d50-a74f-cb39ac5f5f68/2017-11-28/3e93bc03-5c51-452a-a4ca-bd6e2121bcce.original.png\"\n        },\n        {\n          \"title\": \"000-gezichten__smile07\",\n          \"url\": \"http://localhost:14569/cdn.local.zender.tv/live/uploads/e1cc9d4b-2969-4d50-a74f-cb39ac5f5f68/2017-11-28/73eb9ba8-a9f2-465d-882d-cf29d6349029.original.png\",\n          \"id\": \"/live/uploads/e1cc9d4b-2969-4d50-a74f-cb39ac5f5f68/2017-11-28/73eb9ba8-a9f2-465d-882d-cf29d6349029.original.png\"\n        },\n        {\n          \"title\": \"000-gezichten__smile08\",\n          \"url\": \"http://localhost:14569/cdn.local.zender.tv/live/uploads/e1cc9d4b-2969-4d50-a74f-cb39ac5f5f68/2017-11-28/cab89d89-67a6-4ec8-ab06-3fecee8c9d8d.original.png\",\n          \"id\": \"/live/uploads/e1cc9d4b-2969-4d50-a74f-cb39ac5f5f68/2017-11-28/cab89d89-67a6-4ec8-ab06-3fecee8c9d8d.original.png\"\n        }\n      ],\n      \"icon\": {\n        \"url\": \"http://localhost:14569/cdn.local.zender.tv/live/uploads/e1cc9d4b-2969-4d50-a74f-cb39ac5f5f68/2017-11-28/fbc5dabe-8fb7-4c1c-8dd0-d70d37ce4559.original.png\",\n        \"id\": \"/live/uploads/e1cc9d4b-2969-4d50-a74f-cb39ac5f5f68/2017-11-28/fbc5dabe-8fb7-4c1c-8dd0-d70d37ce4559.original.png\"\n      },\n      \"id\": \"7b3f2436-dae0-45cf-aad2-4320cd342640\",\n      \"title\": \"000-faces\"\n    },\n    {\n      \"emojis\": [\n        {\n          \"title\": \"001-handen__hand01\",\n          \"url\": \"http://localhost:14569/cdn.local.zender.tv/live/uploads/e1cc9d4b-2969-4d50-a74f-cb39ac5f5f68/2017-11-28/16d20a2e-47ee-4315-b673-7b91e5230763.original.png\",\n          \"id\": \"/live/uploads/e1cc9d4b-2969-4d50-a74f-cb39ac5f5f68/2017-11-28/16d20a2e-47ee-4315-b673-7b91e5230763.original.png\"\n        },\n        {\n          \"title\": \"001-handen__hand02\",\n          \"url\": \"http://localhost:14569/cdn.local.zender.tv/live/uploads/e1cc9d4b-2969-4d50-a74f-cb39ac5f5f68/2017-11-28/655e92a4-5d18-47ab-9cf6-e39c2cb4babf.original.png\",\n          \"id\": \"/live/uploads/e1cc9d4b-2969-4d50-a74f-cb39ac5f5f68/2017-11-28/655e92a4-5d18-47ab-9cf6-e39c2cb4babf.original.png\"\n        },\n        {\n          \"title\": \"001-handen__hand03\",\n          \"url\": \"http://localhost:14569/cdn.local.zender.tv/live/uploads/e1cc9d4b-2969-4d50-a74f-cb39ac5f5f68/2017-11-28/1b7fe938-d774-474c-a194-d3dd1fb865a8.original.png\",\n          \"id\": \"/live/uploads/e1cc9d4b-2969-4d50-a74f-cb39ac5f5f68/2017-11-28/1b7fe938-d774-474c-a194-d3dd1fb865a8.original.png\"\n        },\n        {\n          \"title\": \"001-handen__hand04\",\n          \"url\": \"http://localhost:14569/cdn.local.zender.tv/live/uploads/e1cc9d4b-2969-4d50-a74f-cb39ac5f5f68/2017-11-28/e31906f3-e6be-4fb8-a902-5c07de7707bf.original.png\",\n          \"id\": \"/live/uploads/e1cc9d4b-2969-4d50-a74f-cb39ac5f5f68/2017-11-28/e31906f3-e6be-4fb8-a902-5c07de7707bf.original.png\"\n        },\n        {\n          \"title\": \"001-handen__hand05\",\n          \"url\": \"http://localhost:14569/cdn.local.zender.tv/live/uploads/e1cc9d4b-2969-4d50-a74f-cb39ac5f5f68/2017-11-28/9308dd80-b525-4313-9bff-7f602fbb9435.original.png\",\n          \"id\": \"/live/uploads/e1cc9d4b-2969-4d50-a74f-cb39ac5f5f68/2017-11-28/9308dd80-b525-4313-9bff-7f602fbb9435.original.png\"\n        },\n        {\n          \"title\": \"001-handen__hand06\",\n          \"url\": \"http://localhost:14569/cdn.local.zender.tv/live/uploads/e1cc9d4b-2969-4d50-a74f-cb39ac5f5f68/2017-11-28/957a5877-94a9-45c5-94b4-26c6e71c7b5d.original.png\",\n          \"id\": \"/live/uploads/e1cc9d4b-2969-4d50-a74f-cb39ac5f5f68/2017-11-28/957a5877-94a9-45c5-94b4-26c6e71c7b5d.original.png\"\n        }\n      ],\n      \"icon\": {\n        \"url\": \"http://localhost:14569/cdn.local.zender.tv/live/uploads/e1cc9d4b-2969-4d50-a74f-cb39ac5f5f68/2017-11-28/16d20a2e-47ee-4315-b673-7b91e5230763.original.png\",\n        \"id\": \"/live/uploads/e1cc9d4b-2969-4d50-a74f-cb39ac5f5f68/2017-11-28/16d20a2e-47ee-4315-b673-7b91e5230763.original.png\"\n      },\n      \"id\": \"4775a542-bc43-4ce6-bf43-27a0fa7acc78\",\n      \"title\": \"001-hands\"\n    },\n    {\n      \"emojis\": [\n        {\n          \"title\": \"002-liefde__love01\",\n          \"url\": \"http://localhost:14569/cdn.local.zender.tv/live/uploads/e1cc9d4b-2969-4d50-a74f-cb39ac5f5f68/2017-11-28/9523c952-2e23-4c3a-bf83-61c9a17a4168.original.png\",\n          \"id\": \"/live/uploads/e1cc9d4b-2969-4d50-a74f-cb39ac5f5f68/2017-11-28/9523c952-2e23-4c3a-bf83-61c9a17a4168.original.png\"\n        },\n        {\n          \"title\": \"002-liefde__love02\",\n          \"url\": \"http://localhost:14569/cdn.local.zender.tv/live/uploads/e1cc9d4b-2969-4d50-a74f-cb39ac5f5f68/2017-11-28/f2730bd7-aa84-4027-baae-0bfbc5a2e065.original.png\",\n          \"id\": \"/live/uploads/e1cc9d4b-2969-4d50-a74f-cb39ac5f5f68/2017-11-28/f2730bd7-aa84-4027-baae-0bfbc5a2e065.original.png\"\n        },\n        {\n          \"title\": \"002-liefde__love03\",\n          \"url\": \"http://localhost:14569/cdn.local.zender.tv/live/uploads/e1cc9d4b-2969-4d50-a74f-cb39ac5f5f68/2017-11-28/18801fe1-bc93-4673-ac7a-e5de23677fd8.original.png\",\n          \"id\": \"/live/uploads/e1cc9d4b-2969-4d50-a74f-cb39ac5f5f68/2017-11-28/18801fe1-bc93-4673-ac7a-e5de23677fd8.original.png\"\n        },\n        {\n          \"title\": \"002-liefde__love04\",\n          \"url\": \"http://localhost:14569/cdn.local.zender.tv/live/uploads/e1cc9d4b-2969-4d50-a74f-cb39ac5f5f68/2017-11-28/f1ad0ac7-6e89-47cd-8af4-880dbf344dd5.original.png\",\n          \"id\": \"/live/uploads/e1cc9d4b-2969-4d50-a74f-cb39ac5f5f68/2017-11-28/f1ad0ac7-6e89-47cd-8af4-880dbf344dd5.original.png\"\n        },\n        {\n          \"title\": \"002-liefde__love05\",\n          \"url\": \"http://localhost:14569/cdn.local.zender.tv/live/uploads/e1cc9d4b-2969-4d50-a74f-cb39ac5f5f68/2017-11-28/4bcf20b5-237c-48e1-864c-acd5e0a736fe.original.png\",\n          \"id\": \"/live/uploads/e1cc9d4b-2969-4d50-a74f-cb39ac5f5f68/2017-11-28/4bcf20b5-237c-48e1-864c-acd5e0a736fe.original.png\"\n        },\n        {\n          \"title\": \"002-liefde__love06\",\n          \"url\": \"http://localhost:14569/cdn.local.zender.tv/live/uploads/e1cc9d4b-2969-4d50-a74f-cb39ac5f5f68/2017-11-28/bc9b218a-2170-4aba-aeea-efb777ff15d3.original.png\",\n          \"id\": \"/live/uploads/e1cc9d4b-2969-4d50-a74f-cb39ac5f5f68/2017-11-28/bc9b218a-2170-4aba-aeea-efb777ff15d3.original.png\"\n        }\n      ],\n      \"icon\": {\n        \"url\": \"http://localhost:14569/cdn.local.zender.tv/live/uploads/e1cc9d4b-2969-4d50-a74f-cb39ac5f5f68/2017-11-28/9523c952-2e23-4c3a-bf83-61c9a17a4168.original.png\",\n        \"id\": \"/live/uploads/e1cc9d4b-2969-4d50-a74f-cb39ac5f5f68/2017-11-28/9523c952-2e23-4c3a-bf83-61c9a17a4168.original.png\"\n      },\n      \"id\": \"5b9dab91-f96d-4b60-a612-39a2ef567077\",\n      \"title\": \"002-love\"\n    },\n    {\n      \"emojis\": [\n        {\n          \"title\": \"003-dieren__a-bunny\",\n          \"url\": \"http://localhost:14569/cdn.local.zender.tv/live/uploads/e1cc9d4b-2969-4d50-a74f-cb39ac5f5f68/2017-11-28/d0e333f7-1905-4acb-9e63-4102c11e9db5.original.png\",\n          \"id\": \"/live/uploads/e1cc9d4b-2969-4d50-a74f-cb39ac5f5f68/2017-11-28/d0e333f7-1905-4acb-9e63-4102c11e9db5.original.png\"\n        },\n        {\n          \"title\": \"003-dieren__a-cat01\",\n          \"url\": \"http://localhost:14569/cdn.local.zender.tv/live/uploads/e1cc9d4b-2969-4d50-a74f-cb39ac5f5f68/2017-11-28/2cd7d92f-ebff-4bb3-b4cd-eca611443244.original.png\",\n          \"id\": \"/live/uploads/e1cc9d4b-2969-4d50-a74f-cb39ac5f5f68/2017-11-28/2cd7d92f-ebff-4bb3-b4cd-eca611443244.original.png\"\n        },\n        {\n          \"title\": \"003-dieren__a-cat02\",\n          \"url\": \"http://localhost:14569/cdn.local.zender.tv/live/uploads/e1cc9d4b-2969-4d50-a74f-cb39ac5f5f68/2017-11-28/c6e365e5-5cde-410f-b036-9a5970ec3aa6.original.png\",\n          \"id\": \"/live/uploads/e1cc9d4b-2969-4d50-a74f-cb39ac5f5f68/2017-11-28/c6e365e5-5cde-410f-b036-9a5970ec3aa6.original.png\"\n        },\n        {\n          \"title\": \"003-dieren__a-cat03\",\n          \"url\": \"http://localhost:14569/cdn.local.zender.tv/live/uploads/e1cc9d4b-2969-4d50-a74f-cb39ac5f5f68/2017-11-28/97d6ef27-1be6-4071-9f19-b613b24d553e.original.png\",\n          \"id\": \"/live/uploads/e1cc9d4b-2969-4d50-a74f-cb39ac5f5f68/2017-11-28/97d6ef27-1be6-4071-9f19-b613b24d553e.original.png\"\n        },\n        {\n          \"title\": \"003-dieren__a-cat04\",\n          \"url\": \"http://localhost:14569/cdn.local.zender.tv/live/uploads/e1cc9d4b-2969-4d50-a74f-cb39ac5f5f68/2017-11-28/f64293a2-a7c1-42d8-a62c-5b303617b2df.original.png\",\n          \"id\": \"/live/uploads/e1cc9d4b-2969-4d50-a74f-cb39ac5f5f68/2017-11-28/f64293a2-a7c1-42d8-a62c-5b303617b2df.original.png\"\n        },\n        {\n          \"title\": \"003-dieren__a-chicken\",\n          \"url\": \"http://localhost:14569/cdn.local.zender.tv/live/uploads/e1cc9d4b-2969-4d50-a74f-cb39ac5f5f68/2017-11-28/caf5e45c-fe08-4740-b5ff-7e160d88cc4e.original.png\",\n          \"id\": \"/live/uploads/e1cc9d4b-2969-4d50-a74f-cb39ac5f5f68/2017-11-28/caf5e45c-fe08-4740-b5ff-7e160d88cc4e.original.png\"\n        }\n      ],\n      \"icon\": {\n        \"url\": \"http://localhost:14569/cdn.local.zender.tv/live/uploads/e1cc9d4b-2969-4d50-a74f-cb39ac5f5f68/2017-11-28/d0e333f7-1905-4acb-9e63-4102c11e9db5.original.png\",\n        \"id\": \"/live/uploads/e1cc9d4b-2969-4d50-a74f-cb39ac5f5f68/2017-11-28/d0e333f7-1905-4acb-9e63-4102c11e9db5.original.png\"\n      },\n      \"id\": \"ed93d548-63a7-4729-bec8-8fe9cbda2dd5\",\n      \"title\": \"003-animals\"\n    },\n    {\n      \"emojis\": [\n        {\n          \"title\": \"004-sport__s-ball\",\n          \"url\": \"http://localhost:14569/cdn.local.zender.tv/live/uploads/e1cc9d4b-2969-4d50-a74f-cb39ac5f5f68/2017-11-28/9f088285-b8af-49b5-bb18-f8c3ea950d64.original.png\",\n          \"id\": \"/live/uploads/e1cc9d4b-2969-4d50-a74f-cb39ac5f5f68/2017-11-28/9f088285-b8af-49b5-bb18-f8c3ea950d64.original.png\"\n        },\n        {\n          \"title\": \"004-sport__s-bike\",\n          \"url\": \"http://localhost:14569/cdn.local.zender.tv/live/uploads/e1cc9d4b-2969-4d50-a74f-cb39ac5f5f68/2017-11-28/0a13262d-501f-42d8-82d5-5e9026d32998.original.png\",\n          \"id\": \"/live/uploads/e1cc9d4b-2969-4d50-a74f-cb39ac5f5f68/2017-11-28/0a13262d-501f-42d8-82d5-5e9026d32998.original.png\"\n        },\n        {\n          \"title\": \"004-sport__basebal\",\n          \"url\": \"http://localhost:14569/cdn.local.zender.tv/live/uploads/e1cc9d4b-2969-4d50-a74f-cb39ac5f5f68/2017-11-28/9350eeba-6228-44ea-ae85-ac13e261e6b3.original.png\",\n          \"id\": \"/live/uploads/e1cc9d4b-2969-4d50-a74f-cb39ac5f5f68/2017-11-28/9350eeba-6228-44ea-ae85-ac13e261e6b3.original.png\"\n        },\n        {\n          \"title\": \"004-sport__basketbal\",\n          \"url\": \"http://localhost:14569/cdn.local.zender.tv/live/uploads/e1cc9d4b-2969-4d50-a74f-cb39ac5f5f68/2017-11-28/f5b3882c-af2d-4b3c-a4fe-b2cdae5f6d86.original.png\",\n          \"id\": \"/live/uploads/e1cc9d4b-2969-4d50-a74f-cb39ac5f5f68/2017-11-28/f5b3882c-af2d-4b3c-a4fe-b2cdae5f6d86.original.png\"\n        },\n        {\n          \"title\": \"004-sport__fiets\",\n          \"url\": \"http://localhost:14569/cdn.local.zender.tv/live/uploads/e1cc9d4b-2969-4d50-a74f-cb39ac5f5f68/2017-11-28/882e4699-f171-4b1b-aaad-c410d210d6a3.original.png\",\n          \"id\": \"/live/uploads/e1cc9d4b-2969-4d50-a74f-cb39ac5f5f68/2017-11-28/882e4699-f171-4b1b-aaad-c410d210d6a3.original.png\"\n        }\n      ],\n      \"icon\": {\n        \"url\": \"http://localhost:14569/cdn.local.zender.tv/live/uploads/e1cc9d4b-2969-4d50-a74f-cb39ac5f5f68/2017-11-28/9f088285-b8af-49b5-bb18-f8c3ea950d64.original.png\",\n        \"id\": \"/live/uploads/e1cc9d4b-2969-4d50-a74f-cb39ac5f5f68/2017-11-28/9f088285-b8af-49b5-bb18-f8c3ea950d64.original.png\"\n      },\n      \"id\": \"30ae1d2f-dbec-4069-93cc-0bc4352d25eb\",\n      \"title\": \"004-sport\"\n    },\n    {\n      \"emojis\": [\n        {\n          \"title\": \"005-objecten__a-food01\",\n          \"url\": \"http://localhost:14569/cdn.local.zender.tv/live/uploads/e1cc9d4b-2969-4d50-a74f-cb39ac5f5f68/2017-11-28/8ed6b445-a414-48b3-9a0a-5a8b037b9f47.original.png\",\n          \"id\": \"/live/uploads/e1cc9d4b-2969-4d50-a74f-cb39ac5f5f68/2017-11-28/8ed6b445-a414-48b3-9a0a-5a8b037b9f47.original.png\"\n        },\n        {\n          \"title\": \"005-objecten__a-food02\",\n          \"url\": \"http://localhost:14569/cdn.local.zender.tv/live/uploads/e1cc9d4b-2969-4d50-a74f-cb39ac5f5f68/2017-11-28/7452ce3e-0112-4f85-b2e2-f17de5d52190.original.png\",\n          \"id\": \"/live/uploads/e1cc9d4b-2969-4d50-a74f-cb39ac5f5f68/2017-11-28/7452ce3e-0112-4f85-b2e2-f17de5d52190.original.png\"\n        },\n        {\n          \"title\": \"005-objecten__a-food03\",\n          \"url\": \"http://localhost:14569/cdn.local.zender.tv/live/uploads/e1cc9d4b-2969-4d50-a74f-cb39ac5f5f68/2017-11-28/2994ab4a-f49e-4e03-9c23-64067e629e51.original.png\",\n          \"id\": \"/live/uploads/e1cc9d4b-2969-4d50-a74f-cb39ac5f5f68/2017-11-28/2994ab4a-f49e-4e03-9c23-64067e629e51.original.png\"\n        },\n        {\n          \"title\": \"005-objecten__a-food04\",\n          \"url\": \"http://localhost:14569/cdn.local.zender.tv/live/uploads/e1cc9d4b-2969-4d50-a74f-cb39ac5f5f68/2017-11-28/43d445f0-02b1-4cde-9eb6-91b1d2267711.original.png\",\n          \"id\": \"/live/uploads/e1cc9d4b-2969-4d50-a74f-cb39ac5f5f68/2017-11-28/43d445f0-02b1-4cde-9eb6-91b1d2267711.original.png\"\n        }\n      ],\n      \"icon\": {\n        \"url\": \"http://localhost:14569/cdn.local.zender.tv/live/uploads/e1cc9d4b-2969-4d50-a74f-cb39ac5f5f68/2017-11-28/8ed6b445-a414-48b3-9a0a-5a8b037b9f47.original.png\",\n        \"id\": \"/live/uploads/e1cc9d4b-2969-4d50-a74f-cb39ac5f5f68/2017-11-28/8ed6b445-a414-48b3-9a0a-5a8b037b9f47.original.png\"\n      },\n      \"id\": \"800e75aa-16e3-4d32-aaa8-b20bc9682c98\",\n      \"title\": \"005-objects\"\n    },\n    {\n      \"emojis\": [\n        {\n          \"title\": \"005-weer__a-weer01\",\n          \"url\": \"http://localhost:14569/cdn.local.zender.tv/live/uploads/e1cc9d4b-2969-4d50-a74f-cb39ac5f5f68/2017-11-28/7d645b32-1e43-4a32-93a5-6a48d8df842f.original.png\",\n          \"id\": \"/live/uploads/e1cc9d4b-2969-4d50-a74f-cb39ac5f5f68/2017-11-28/7d645b32-1e43-4a32-93a5-6a48d8df842f.original.png\"\n        },\n        {\n          \"title\": \"005-weer__a-weer02\",\n          \"url\": \"http://localhost:14569/cdn.local.zender.tv/live/uploads/e1cc9d4b-2969-4d50-a74f-cb39ac5f5f68/2017-11-28/a47dbf95-6268-4a19-ad47-2e0f86229f32.original.png\",\n          \"id\": \"/live/uploads/e1cc9d4b-2969-4d50-a74f-cb39ac5f5f68/2017-11-28/a47dbf95-6268-4a19-ad47-2e0f86229f32.original.png\"\n        },\n        {\n          \"title\": \"005-weer__a-weer03\",\n          \"url\": \"http://localhost:14569/cdn.local.zender.tv/live/uploads/e1cc9d4b-2969-4d50-a74f-cb39ac5f5f68/2017-11-28/61689c10-f4be-4a14-a1cb-b9c2f041ee1a.original.png\",\n          \"id\": \"/live/uploads/e1cc9d4b-2969-4d50-a74f-cb39ac5f5f68/2017-11-28/61689c10-f4be-4a14-a1cb-b9c2f041ee1a.original.png\"\n        }\n      ],\n      \"icon\": {\n        \"url\": \"http://localhost:14569/cdn.local.zender.tv/live/uploads/e1cc9d4b-2969-4d50-a74f-cb39ac5f5f68/2017-11-28/7d645b32-1e43-4a32-93a5-6a48d8df842f.original.png\",\n        \"id\": \"/live/uploads/e1cc9d4b-2969-4d50-a74f-cb39ac5f5f68/2017-11-28/7d645b32-1e43-4a32-93a5-6a48d8df842f.original.png\"\n      },\n      \"id\": \"737178d3-a13b-4b44-af2c-04f9a4b69475\",\n      \"title\": \"005-weather\"\n    }\n  ]\n}"
										},
										"url": {
											"raw": "{{emojisApiHost}}/channels/{{channelId}}/streams/{{streamId}}/emojis/config",
											"host": [
												"{{emojisApiHost}}"
											],
											"path": [
												"channels",
												"{{channelId}}",
												"streams",
												"{{streamId}}",
												"emojis",
												"config"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "Text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Reset Emoji Count",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{adminToken}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{emojisApiHost}}/v1/channels/{{channelId}}/streams/{{streamId}}/emojis/reactions",
									"host": [
										"{{emojisApiHost}}"
									],
									"path": [
										"v1",
										"channels",
										"{{channelId}}",
										"streams",
										"{{streamId}}",
										"emojis",
										"reactions"
									]
								},
								"description": "Delete a poll."
							},
							"response": []
						},
						{
							"name": "Reset Avatar Count",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{adminToken}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{emojisApiHost}}/v1/channels/{{channelId}}/streams/{{streamId}}/emojis/avatars",
									"host": [
										"{{emojisApiHost}}"
									],
									"path": [
										"v1",
										"channels",
										"{{channelId}}",
										"streams",
										"{{streamId}}",
										"emojis",
										"avatars"
									]
								},
								"description": "Delete a poll."
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "Shoutbox",
					"item": [
						{
							"name": "Get Shoutbox Config",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code is 200\"] = responseCode.code === 200;"
										]
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{adminToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{shoutboxApiHost}}/v1/channels/{{channelId}}/streams/{{streamId}}/shoutbox/config",
									"host": [
										"{{shoutboxApiHost}}"
									],
									"path": [
										"v1",
										"channels",
										"{{channelId}}",
										"streams",
										"{{streamId}}",
										"shoutbox",
										"config"
									]
								},
								"description": "Update the shoutbox config of a stream. When creating a stream it will automatically create a shoutbox config."
							},
							"response": [
								{
									"name": "Update Shoutbox Config",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"enabled\": true,\n\t\"topic\": \"Topic\",\n\t\"placeholder\": \"Leave a message plz...\",\n\t\"welcome\": \"Welcome to the new live stream\",\n\t\"shoutRoles\": [\"anonymous\", \"user\"]\n}"
										},
										"url": {
											"raw": "{{shoutboxApiHost}}/v1/channels/{{channelId}}/streams/{{streamId}}/shoutbox/config",
											"host": [
												"{{shoutboxApiHost}}"
											],
											"path": [
												"v1",
												"channels",
												"{{channelId}}",
												"streams",
												"{{streamId}}",
												"shoutbox",
												"config"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Access-Control-Allow-Headers",
											"value": "Content-Type, Authorization, Accept, Cache-Control, X-Requested-With",
											"name": "Access-Control-Allow-Headers",
											"description": "Used in response to a preflight request to indicate which HTTP headers can be used when making the actual request."
										},
										{
											"key": "Access-Control-Allow-Methods",
											"value": "GET,PUT,POST,DELETE",
											"name": "Access-Control-Allow-Methods",
											"description": "Specifies the method or methods allowed when accessing the resource. This is used in response to a preflight request."
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*",
											"name": "Access-Control-Allow-Origin",
											"description": "Specifies a URI that may access the resource. For requests without credentials, the server may specify '*' as a wildcard, thereby allowing any origin to access the resource."
										},
										{
											"key": "Cache-Control",
											"value": "no-cache,max-age=0",
											"name": "Cache-Control",
											"description": "Tells all caching mechanisms from server to client whether they may cache this object. It is measured in seconds"
										},
										{
											"key": "Connection",
											"value": "keep-alive",
											"name": "Connection",
											"description": "Options that are desired for the connection"
										},
										{
											"key": "Content-Length",
											"value": "286",
											"name": "Content-Length",
											"description": "The length of the response body in octets (8-bit bytes)"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8",
											"name": "Content-Type",
											"description": "The mime type of this content"
										},
										{
											"key": "Date",
											"value": "Tue, 28 Nov 2017 14:43:43 GMT",
											"name": "Date",
											"description": "The date and time that the message was sent"
										},
										{
											"key": "X-Response-Time",
											"value": "179ms",
											"name": "X-Response-Time",
											"description": "Custom header"
										}
									],
									"cookie": [],
									"body": "{\n    \"createdAt\": \"2017-11-28T13:55:31.657Z\",\n    \"shoutRoles\": [\n        \"anonymous\",\n        \"user\"\n    ],\n    \"streamId\": \"a2993350-cb51-437d-bf39-41e110a71f5a\",\n    \"topic\": \"Topic\",\n    \"id\": \"a2993350-cb51-437d-bf39-41e110a71f5a\",\n    \"placeholder\": \"Leave a message plz...\",\n    \"starredSort\": [\n        {\n            \"id\": \"110d3e00-925b-441e-bb92-a418dd80a004\"\n        }\n    ],\n    \"welcome\": \"Welcome to the new live stream\",\n    \"enabled\": true,\n    \"updatedAt\": \"2017-11-29T08:23:28.714Z\"\n}"
								}
							]
						},
						{
							"name": "Set Placeholder Shoutbox Config",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code is 200\"] = responseCode.code === 200;"
										]
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{adminToken}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"placeholder\": \"Leave a message plz...\"\n}"
								},
								"url": {
									"raw": "{{shoutboxApiHost}}/v1/channels/{{channelId}}/streams/{{streamId}}/shoutbox/config",
									"host": [
										"{{shoutboxApiHost}}"
									],
									"path": [
										"v1",
										"channels",
										"{{channelId}}",
										"streams",
										"{{streamId}}",
										"shoutbox",
										"config"
									]
								},
								"description": "Update the shoutbox config of a stream. When creating a stream it will automatically create a shoutbox config."
							},
							"response": [
								{
									"name": "Update Shoutbox Config",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"enabled\": true,\n\t\"topic\": \"Topic\",\n\t\"placeholder\": \"Leave a message plz...\",\n\t\"welcome\": \"Welcome to the new live stream\",\n\t\"shoutRoles\": [\"anonymous\", \"user\"]\n}"
										},
										"url": {
											"raw": "{{shoutboxApiHost}}/v1/channels/{{channelId}}/streams/{{streamId}}/shoutbox/config",
											"host": [
												"{{shoutboxApiHost}}"
											],
											"path": [
												"v1",
												"channels",
												"{{channelId}}",
												"streams",
												"{{streamId}}",
												"shoutbox",
												"config"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Access-Control-Allow-Headers",
											"value": "Content-Type, Authorization, Accept, Cache-Control, X-Requested-With",
											"name": "Access-Control-Allow-Headers",
											"description": "Used in response to a preflight request to indicate which HTTP headers can be used when making the actual request."
										},
										{
											"key": "Access-Control-Allow-Methods",
											"value": "GET,PUT,POST,DELETE",
											"name": "Access-Control-Allow-Methods",
											"description": "Specifies the method or methods allowed when accessing the resource. This is used in response to a preflight request."
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*",
											"name": "Access-Control-Allow-Origin",
											"description": "Specifies a URI that may access the resource. For requests without credentials, the server may specify '*' as a wildcard, thereby allowing any origin to access the resource."
										},
										{
											"key": "Cache-Control",
											"value": "no-cache,max-age=0",
											"name": "Cache-Control",
											"description": "Tells all caching mechanisms from server to client whether they may cache this object. It is measured in seconds"
										},
										{
											"key": "Connection",
											"value": "keep-alive",
											"name": "Connection",
											"description": "Options that are desired for the connection"
										},
										{
											"key": "Content-Length",
											"value": "286",
											"name": "Content-Length",
											"description": "The length of the response body in octets (8-bit bytes)"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8",
											"name": "Content-Type",
											"description": "The mime type of this content"
										},
										{
											"key": "Date",
											"value": "Tue, 28 Nov 2017 14:43:43 GMT",
											"name": "Date",
											"description": "The date and time that the message was sent"
										},
										{
											"key": "X-Response-Time",
											"value": "179ms",
											"name": "X-Response-Time",
											"description": "Custom header"
										}
									],
									"cookie": [],
									"body": "{\n    \"createdAt\": \"2017-11-28T13:55:31.657Z\",\n    \"shoutRoles\": [\n        \"anonymous\",\n        \"user\"\n    ],\n    \"streamId\": \"a2993350-cb51-437d-bf39-41e110a71f5a\",\n    \"topic\": \"Topic\",\n    \"id\": \"a2993350-cb51-437d-bf39-41e110a71f5a\",\n    \"placeholder\": \"Leave a message plz...\",\n    \"starredSort\": [\n        {\n            \"id\": \"110d3e00-925b-441e-bb92-a418dd80a004\"\n        }\n    ],\n    \"welcome\": \"Welcome to the new live stream\",\n    \"enabled\": true,\n    \"updatedAt\": \"2017-11-29T08:23:28.714Z\"\n}"
								}
							]
						},
						{
							"name": "Set Topic Shoutbox Config",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code is 200\"] = responseCode.code === 200;"
										]
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{adminToken}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"topic\": \"A brand new topic\"\n}"
								},
								"url": {
									"raw": "{{shoutboxApiHost}}/v1/channels/{{channelId}}/streams/{{streamId}}/shoutbox/config",
									"host": [
										"{{shoutboxApiHost}}"
									],
									"path": [
										"v1",
										"channels",
										"{{channelId}}",
										"streams",
										"{{streamId}}",
										"shoutbox",
										"config"
									]
								},
								"description": "Update the shoutbox config of a stream. When creating a stream it will automatically create a shoutbox config."
							},
							"response": [
								{
									"name": "Update Shoutbox Config",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"enabled\": true,\n\t\"topic\": \"Topic\",\n\t\"placeholder\": \"Leave a message plz...\",\n\t\"welcome\": \"Welcome to the new live stream\",\n\t\"shoutRoles\": [\"anonymous\", \"user\"]\n}"
										},
										"url": {
											"raw": "{{shoutboxApiHost}}/v1/channels/{{channelId}}/streams/{{streamId}}/shoutbox/config",
											"host": [
												"{{shoutboxApiHost}}"
											],
											"path": [
												"v1",
												"channels",
												"{{channelId}}",
												"streams",
												"{{streamId}}",
												"shoutbox",
												"config"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Access-Control-Allow-Headers",
											"value": "Content-Type, Authorization, Accept, Cache-Control, X-Requested-With",
											"name": "Access-Control-Allow-Headers",
											"description": "Used in response to a preflight request to indicate which HTTP headers can be used when making the actual request."
										},
										{
											"key": "Access-Control-Allow-Methods",
											"value": "GET,PUT,POST,DELETE",
											"name": "Access-Control-Allow-Methods",
											"description": "Specifies the method or methods allowed when accessing the resource. This is used in response to a preflight request."
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*",
											"name": "Access-Control-Allow-Origin",
											"description": "Specifies a URI that may access the resource. For requests without credentials, the server may specify '*' as a wildcard, thereby allowing any origin to access the resource."
										},
										{
											"key": "Cache-Control",
											"value": "no-cache,max-age=0",
											"name": "Cache-Control",
											"description": "Tells all caching mechanisms from server to client whether they may cache this object. It is measured in seconds"
										},
										{
											"key": "Connection",
											"value": "keep-alive",
											"name": "Connection",
											"description": "Options that are desired for the connection"
										},
										{
											"key": "Content-Length",
											"value": "286",
											"name": "Content-Length",
											"description": "The length of the response body in octets (8-bit bytes)"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8",
											"name": "Content-Type",
											"description": "The mime type of this content"
										},
										{
											"key": "Date",
											"value": "Tue, 28 Nov 2017 14:43:43 GMT",
											"name": "Date",
											"description": "The date and time that the message was sent"
										},
										{
											"key": "X-Response-Time",
											"value": "179ms",
											"name": "X-Response-Time",
											"description": "Custom header"
										}
									],
									"cookie": [],
									"body": "{\n    \"createdAt\": \"2017-11-28T13:55:31.657Z\",\n    \"shoutRoles\": [\n        \"anonymous\",\n        \"user\"\n    ],\n    \"streamId\": \"a2993350-cb51-437d-bf39-41e110a71f5a\",\n    \"topic\": \"Topic\",\n    \"id\": \"a2993350-cb51-437d-bf39-41e110a71f5a\",\n    \"placeholder\": \"Leave a message plz...\",\n    \"starredSort\": [\n        {\n            \"id\": \"110d3e00-925b-441e-bb92-a418dd80a004\"\n        }\n    ],\n    \"welcome\": \"Welcome to the new live stream\",\n    \"enabled\": true,\n    \"updatedAt\": \"2017-11-29T08:23:28.714Z\"\n}"
								}
							]
						},
						{
							"name": "Set Welcome Shoutbox Config copy",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code is 200\"] = responseCode.code === 200;"
										]
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{adminToken}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"welcome\": \"Welcome to the new live stream\"\n}"
								},
								"url": {
									"raw": "{{shoutboxApiHost}}/v1/channels/{{channelId}}/streams/{{streamId}}/shoutbox/config",
									"host": [
										"{{shoutboxApiHost}}"
									],
									"path": [
										"v1",
										"channels",
										"{{channelId}}",
										"streams",
										"{{streamId}}",
										"shoutbox",
										"config"
									]
								},
								"description": "Update the shoutbox config of a stream. When creating a stream it will automatically create a shoutbox config."
							},
							"response": [
								{
									"name": "Update Shoutbox Config",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"enabled\": true,\n\t\"topic\": \"Topic\",\n\t\"placeholder\": \"Leave a message plz...\",\n\t\"welcome\": \"Welcome to the new live stream\",\n\t\"shoutRoles\": [\"anonymous\", \"user\"]\n}"
										},
										"url": {
											"raw": "{{shoutboxApiHost}}/v1/channels/{{channelId}}/streams/{{streamId}}/shoutbox/config",
											"host": [
												"{{shoutboxApiHost}}"
											],
											"path": [
												"v1",
												"channels",
												"{{channelId}}",
												"streams",
												"{{streamId}}",
												"shoutbox",
												"config"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Access-Control-Allow-Headers",
											"value": "Content-Type, Authorization, Accept, Cache-Control, X-Requested-With",
											"name": "Access-Control-Allow-Headers",
											"description": "Used in response to a preflight request to indicate which HTTP headers can be used when making the actual request."
										},
										{
											"key": "Access-Control-Allow-Methods",
											"value": "GET,PUT,POST,DELETE",
											"name": "Access-Control-Allow-Methods",
											"description": "Specifies the method or methods allowed when accessing the resource. This is used in response to a preflight request."
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*",
											"name": "Access-Control-Allow-Origin",
											"description": "Specifies a URI that may access the resource. For requests without credentials, the server may specify '*' as a wildcard, thereby allowing any origin to access the resource."
										},
										{
											"key": "Cache-Control",
											"value": "no-cache,max-age=0",
											"name": "Cache-Control",
											"description": "Tells all caching mechanisms from server to client whether they may cache this object. It is measured in seconds"
										},
										{
											"key": "Connection",
											"value": "keep-alive",
											"name": "Connection",
											"description": "Options that are desired for the connection"
										},
										{
											"key": "Content-Length",
											"value": "286",
											"name": "Content-Length",
											"description": "The length of the response body in octets (8-bit bytes)"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8",
											"name": "Content-Type",
											"description": "The mime type of this content"
										},
										{
											"key": "Date",
											"value": "Tue, 28 Nov 2017 14:43:43 GMT",
											"name": "Date",
											"description": "The date and time that the message was sent"
										},
										{
											"key": "X-Response-Time",
											"value": "179ms",
											"name": "X-Response-Time",
											"description": "Custom header"
										}
									],
									"cookie": [],
									"body": "{\n    \"createdAt\": \"2017-11-28T13:55:31.657Z\",\n    \"shoutRoles\": [\n        \"anonymous\",\n        \"user\"\n    ],\n    \"streamId\": \"a2993350-cb51-437d-bf39-41e110a71f5a\",\n    \"topic\": \"Topic\",\n    \"id\": \"a2993350-cb51-437d-bf39-41e110a71f5a\",\n    \"placeholder\": \"Leave a message plz...\",\n    \"starredSort\": [\n        {\n            \"id\": \"110d3e00-925b-441e-bb92-a418dd80a004\"\n        }\n    ],\n    \"welcome\": \"Welcome to the new live stream\",\n    \"enabled\": true,\n    \"updatedAt\": \"2017-11-29T08:23:28.714Z\"\n}"
								}
							]
						},
						{
							"name": "Enable Shoutbox",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code is 200\"] = responseCode.code === 200;"
										]
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{adminToken}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"enabled\": true\n}"
								},
								"url": {
									"raw": "{{shoutboxApiHost}}/v1/channels/{{channelId}}/streams/{{streamId}}/shoutbox/config",
									"host": [
										"{{shoutboxApiHost}}"
									],
									"path": [
										"v1",
										"channels",
										"{{channelId}}",
										"streams",
										"{{streamId}}",
										"shoutbox",
										"config"
									]
								},
								"description": "Update the shoutbox config of a stream. When creating a stream it will automatically create a shoutbox config."
							},
							"response": [
								{
									"name": "Update Shoutbox Config",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"enabled\": true,\n\t\"topic\": \"Topic\",\n\t\"placeholder\": \"Leave a message plz...\",\n\t\"welcome\": \"Welcome to the new live stream\",\n\t\"shoutRoles\": [\"anonymous\", \"user\"]\n}"
										},
										"url": {
											"raw": "{{shoutboxApiHost}}/v1/channels/{{channelId}}/streams/{{streamId}}/shoutbox/config",
											"host": [
												"{{shoutboxApiHost}}"
											],
											"path": [
												"v1",
												"channels",
												"{{channelId}}",
												"streams",
												"{{streamId}}",
												"shoutbox",
												"config"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Access-Control-Allow-Headers",
											"value": "Content-Type, Authorization, Accept, Cache-Control, X-Requested-With",
											"name": "Access-Control-Allow-Headers",
											"description": "Used in response to a preflight request to indicate which HTTP headers can be used when making the actual request."
										},
										{
											"key": "Access-Control-Allow-Methods",
											"value": "GET,PUT,POST,DELETE",
											"name": "Access-Control-Allow-Methods",
											"description": "Specifies the method or methods allowed when accessing the resource. This is used in response to a preflight request."
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*",
											"name": "Access-Control-Allow-Origin",
											"description": "Specifies a URI that may access the resource. For requests without credentials, the server may specify '*' as a wildcard, thereby allowing any origin to access the resource."
										},
										{
											"key": "Cache-Control",
											"value": "no-cache,max-age=0",
											"name": "Cache-Control",
											"description": "Tells all caching mechanisms from server to client whether they may cache this object. It is measured in seconds"
										},
										{
											"key": "Connection",
											"value": "keep-alive",
											"name": "Connection",
											"description": "Options that are desired for the connection"
										},
										{
											"key": "Content-Length",
											"value": "286",
											"name": "Content-Length",
											"description": "The length of the response body in octets (8-bit bytes)"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8",
											"name": "Content-Type",
											"description": "The mime type of this content"
										},
										{
											"key": "Date",
											"value": "Tue, 28 Nov 2017 14:43:43 GMT",
											"name": "Date",
											"description": "The date and time that the message was sent"
										},
										{
											"key": "X-Response-Time",
											"value": "179ms",
											"name": "X-Response-Time",
											"description": "Custom header"
										}
									],
									"cookie": [],
									"body": "{\n    \"createdAt\": \"2017-11-28T13:55:31.657Z\",\n    \"shoutRoles\": [\n        \"anonymous\",\n        \"user\"\n    ],\n    \"streamId\": \"a2993350-cb51-437d-bf39-41e110a71f5a\",\n    \"topic\": \"Topic\",\n    \"id\": \"a2993350-cb51-437d-bf39-41e110a71f5a\",\n    \"placeholder\": \"Leave a message plz...\",\n    \"starredSort\": [\n        {\n            \"id\": \"110d3e00-925b-441e-bb92-a418dd80a004\"\n        }\n    ],\n    \"welcome\": \"Welcome to the new live stream\",\n    \"enabled\": true,\n    \"updatedAt\": \"2017-11-29T08:23:28.714Z\"\n}"
								}
							]
						},
						{
							"name": "Disable Shoutbox",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code is 200\"] = responseCode.code === 200;"
										]
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{adminToken}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"enabled\": false\n}"
								},
								"url": {
									"raw": "{{shoutboxApiHost}}/v1/channels/{{channelId}}/streams/{{streamId}}/shoutbox/config",
									"host": [
										"{{shoutboxApiHost}}"
									],
									"path": [
										"v1",
										"channels",
										"{{channelId}}",
										"streams",
										"{{streamId}}",
										"shoutbox",
										"config"
									]
								},
								"description": "Update the shoutbox config of a stream. When creating a stream it will automatically create a shoutbox config."
							},
							"response": [
								{
									"name": "Update Shoutbox Config",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"enabled\": true,\n\t\"topic\": \"Topic\",\n\t\"placeholder\": \"Leave a message plz...\",\n\t\"welcome\": \"Welcome to the new live stream\",\n\t\"shoutRoles\": [\"anonymous\", \"user\"]\n}"
										},
										"url": {
											"raw": "{{shoutboxApiHost}}/v1/channels/{{channelId}}/streams/{{streamId}}/shoutbox/config",
											"host": [
												"{{shoutboxApiHost}}"
											],
											"path": [
												"v1",
												"channels",
												"{{channelId}}",
												"streams",
												"{{streamId}}",
												"shoutbox",
												"config"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Access-Control-Allow-Headers",
											"value": "Content-Type, Authorization, Accept, Cache-Control, X-Requested-With",
											"name": "Access-Control-Allow-Headers",
											"description": "Used in response to a preflight request to indicate which HTTP headers can be used when making the actual request."
										},
										{
											"key": "Access-Control-Allow-Methods",
											"value": "GET,PUT,POST,DELETE",
											"name": "Access-Control-Allow-Methods",
											"description": "Specifies the method or methods allowed when accessing the resource. This is used in response to a preflight request."
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*",
											"name": "Access-Control-Allow-Origin",
											"description": "Specifies a URI that may access the resource. For requests without credentials, the server may specify '*' as a wildcard, thereby allowing any origin to access the resource."
										},
										{
											"key": "Cache-Control",
											"value": "no-cache,max-age=0",
											"name": "Cache-Control",
											"description": "Tells all caching mechanisms from server to client whether they may cache this object. It is measured in seconds"
										},
										{
											"key": "Connection",
											"value": "keep-alive",
											"name": "Connection",
											"description": "Options that are desired for the connection"
										},
										{
											"key": "Content-Length",
											"value": "286",
											"name": "Content-Length",
											"description": "The length of the response body in octets (8-bit bytes)"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8",
											"name": "Content-Type",
											"description": "The mime type of this content"
										},
										{
											"key": "Date",
											"value": "Tue, 28 Nov 2017 14:43:43 GMT",
											"name": "Date",
											"description": "The date and time that the message was sent"
										},
										{
											"key": "X-Response-Time",
											"value": "179ms",
											"name": "X-Response-Time",
											"description": "Custom header"
										}
									],
									"cookie": [],
									"body": "{\n    \"createdAt\": \"2017-11-28T13:55:31.657Z\",\n    \"shoutRoles\": [\n        \"anonymous\",\n        \"user\"\n    ],\n    \"streamId\": \"a2993350-cb51-437d-bf39-41e110a71f5a\",\n    \"topic\": \"Topic\",\n    \"id\": \"a2993350-cb51-437d-bf39-41e110a71f5a\",\n    \"placeholder\": \"Leave a message plz...\",\n    \"starredSort\": [\n        {\n            \"id\": \"110d3e00-925b-441e-bb92-a418dd80a004\"\n        }\n    ],\n    \"welcome\": \"Welcome to the new live stream\",\n    \"enabled\": true,\n    \"updatedAt\": \"2017-11-29T08:23:28.714Z\"\n}"
								}
							]
						},
						{
							"name": "Update Shoutbox Config",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code is 200\"] = responseCode.code === 200;"
										]
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{adminToken}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"enabled\": true,\n\t\"topic\": \"Topic\",\n\t\"placeholder\": \"Leave a message plz...\",\n\t\"welcome\": \"Welcome to the new live stream\",\n\t\"shoutRoles\":[\"user\", \"anonymous\"]\n}"
								},
								"url": {
									"raw": "{{shoutboxApiHost}}/v1/channels/{{channelId}}/streams/{{streamId}}/shoutbox/config",
									"host": [
										"{{shoutboxApiHost}}"
									],
									"path": [
										"v1",
										"channels",
										"{{channelId}}",
										"streams",
										"{{streamId}}",
										"shoutbox",
										"config"
									]
								},
								"description": "Update the shoutbox config of a stream. When creating a stream it will automatically create a shoutbox config."
							},
							"response": [
								{
									"name": "Update Shoutbox Config",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"enabled\": true,\n\t\"topic\": \"Topic\",\n\t\"placeholder\": \"Leave a message plz...\",\n\t\"welcome\": \"Welcome to the new live stream\",\n\t\"shoutRoles\": [\"anonymous\", \"user\"]\n}"
										},
										"url": {
											"raw": "{{shoutboxApiHost}}/v1/channels/{{channelId}}/streams/{{streamId}}/shoutbox/config",
											"host": [
												"{{shoutboxApiHost}}"
											],
											"path": [
												"v1",
												"channels",
												"{{channelId}}",
												"streams",
												"{{streamId}}",
												"shoutbox",
												"config"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Access-Control-Allow-Headers",
											"value": "Content-Type, Authorization, Accept, Cache-Control, X-Requested-With",
											"name": "Access-Control-Allow-Headers",
											"description": "Used in response to a preflight request to indicate which HTTP headers can be used when making the actual request."
										},
										{
											"key": "Access-Control-Allow-Methods",
											"value": "GET,PUT,POST,DELETE",
											"name": "Access-Control-Allow-Methods",
											"description": "Specifies the method or methods allowed when accessing the resource. This is used in response to a preflight request."
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*",
											"name": "Access-Control-Allow-Origin",
											"description": "Specifies a URI that may access the resource. For requests without credentials, the server may specify '*' as a wildcard, thereby allowing any origin to access the resource."
										},
										{
											"key": "Cache-Control",
											"value": "no-cache,max-age=0",
											"name": "Cache-Control",
											"description": "Tells all caching mechanisms from server to client whether they may cache this object. It is measured in seconds"
										},
										{
											"key": "Connection",
											"value": "keep-alive",
											"name": "Connection",
											"description": "Options that are desired for the connection"
										},
										{
											"key": "Content-Length",
											"value": "286",
											"name": "Content-Length",
											"description": "The length of the response body in octets (8-bit bytes)"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8",
											"name": "Content-Type",
											"description": "The mime type of this content"
										},
										{
											"key": "Date",
											"value": "Tue, 28 Nov 2017 14:43:43 GMT",
											"name": "Date",
											"description": "The date and time that the message was sent"
										},
										{
											"key": "X-Response-Time",
											"value": "179ms",
											"name": "X-Response-Time",
											"description": "Custom header"
										}
									],
									"cookie": [],
									"body": "{\n    \"createdAt\": \"2017-11-28T13:55:31.657Z\",\n    \"shoutRoles\": [\n        \"anonymous\",\n        \"user\"\n    ],\n    \"streamId\": \"a2993350-cb51-437d-bf39-41e110a71f5a\",\n    \"topic\": \"Topic\",\n    \"id\": \"a2993350-cb51-437d-bf39-41e110a71f5a\",\n    \"placeholder\": \"Leave a message plz...\",\n    \"starredSort\": [\n        {\n            \"id\": \"110d3e00-925b-441e-bb92-a418dd80a004\"\n        }\n    ],\n    \"welcome\": \"Welcome to the new live stream\",\n    \"enabled\": true,\n    \"updatedAt\": \"2017-11-29T08:23:28.714Z\"\n}"
								}
							]
						},
						{
							"name": "Get Shoutbox Messages",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{adminToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{shoutboxApiHost}}/v1/channels/{{channelId}}/streams/{{streamId}}/shoutbox/messages",
									"host": [
										"{{shoutboxApiHost}}"
									],
									"path": [
										"v1",
										"channels",
										"{{channelId}}",
										"streams",
										"{{streamId}}",
										"shoutbox",
										"messages"
									]
								},
								"description": "Send a shoutbox message."
							},
							"response": [
								{
									"name": "Send Shoutbox Message On Behalf Of",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "x-on-behalf-of-user-id",
												"value": "{{userId}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"type\": \"user\",\n  \"clientId\": \"ketnet-live-admin-1511880426214\",\n  \"content\": {\n    \"text\": \"On behalf of.\"\n  }\n}"
										},
										"url": {
											"raw": "{{shoutboxApiHost}}/v1/channels/{{channelId}}/streams/{{streamId}}/shoutbox/messages",
											"host": [
												"{{shoutboxApiHost}}"
											],
											"path": [
												"v1",
												"channels",
												"{{channelId}}",
												"streams",
												"{{streamId}}",
												"shoutbox",
												"messages"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Access-Control-Allow-Headers",
											"value": "Content-Type, Authorization, Accept, Cache-Control, X-Requested-With",
											"name": "Access-Control-Allow-Headers",
											"description": "Used in response to a preflight request to indicate which HTTP headers can be used when making the actual request."
										},
										{
											"key": "Access-Control-Allow-Methods",
											"value": "GET,PUT,POST,DELETE",
											"name": "Access-Control-Allow-Methods",
											"description": "Specifies the method or methods allowed when accessing the resource. This is used in response to a preflight request."
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*",
											"name": "Access-Control-Allow-Origin",
											"description": "Specifies a URI that may access the resource. For requests without credentials, the server may specify '*' as a wildcard, thereby allowing any origin to access the resource."
										},
										{
											"key": "Cache-Control",
											"value": "no-cache,max-age=0",
											"name": "Cache-Control",
											"description": "Tells all caching mechanisms from server to client whether they may cache this object. It is measured in seconds"
										},
										{
											"key": "Connection",
											"value": "keep-alive",
											"name": "Connection",
											"description": "Options that are desired for the connection"
										},
										{
											"key": "Content-Length",
											"value": "722",
											"name": "Content-Length",
											"description": "The length of the response body in octets (8-bit bytes)"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8",
											"name": "Content-Type",
											"description": "The mime type of this content"
										},
										{
											"key": "Date",
											"value": "Wed, 29 Nov 2017 13:04:32 GMT",
											"name": "Date",
											"description": "The date and time that the message was sent"
										},
										{
											"key": "X-Response-Time",
											"value": "31ms",
											"name": "X-Response-Time",
											"description": "Custom header"
										}
									],
									"cookie": [],
									"body": "{\"type\":\"user\",\"id\":\"46d8c279-cfbd-4f86-baeb-b798b38d45aa\",\"clientId\":\"ketnet-live-admin-1511880426214\",\"streamId\":\"a2993350-cb51-437d-bf39-41e110a71f5a\",\"content\":{\"text\":\"On behalf of.\"},\"createdAt\":\"2017-11-29T13:04:32.525Z\",\"user\":{\"authenticated\":true,\"createdAt\":\"2017-11-29T08:33:42.090Z\",\"flag\":\"unblocked_2017-11-29T13:04:22.866Z\",\"role\":\"user\",\"targetId\":\"b8f99a0c-1383-4891-af7a-563b5903d390\",\"provider\":{\"name\":\"facebook\",\"uid\":\"1459394774070695\"},\"name\":\"Benoit Shapiro\",\"externalId\":\"b8f99a0c-1383-4891-af7a-563b5903d390_1459394774070695\",\"avatar\":\"https://graph.facebook.com/1459394774070695/picture?width=250&type=square\",\"id\":\"8184fbdc-6861-4fc5-9944-e7860b95f4df\",\"updatedAt\":\"2017-11-29T13:04:22.866Z\"}}"
								},
								{
									"name": "Send Shoutbox User Message",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"type\": \"user\",\n  \"clientId\": \"ketnet-live-admin-1511880426214\",\n  \"content\": {\n    \"text\": \"Admin user message.\"\n  }\n}"
										},
										"url": {
											"raw": "{{shoutboxApiHost}}/v1/channels/{{channelId}}/streams/{{streamId}}/shoutbox/messages",
											"host": [
												"{{shoutboxApiHost}}"
											],
											"path": [
												"v1",
												"channels",
												"{{channelId}}",
												"streams",
												"{{streamId}}",
												"shoutbox",
												"messages"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Access-Control-Allow-Headers",
											"value": "Content-Type, Authorization, Accept, Cache-Control, X-Requested-With",
											"name": "Access-Control-Allow-Headers",
											"description": "Used in response to a preflight request to indicate which HTTP headers can be used when making the actual request."
										},
										{
											"key": "Access-Control-Allow-Methods",
											"value": "GET,PUT,POST,DELETE",
											"name": "Access-Control-Allow-Methods",
											"description": "Specifies the method or methods allowed when accessing the resource. This is used in response to a preflight request."
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*",
											"name": "Access-Control-Allow-Origin",
											"description": "Specifies a URI that may access the resource. For requests without credentials, the server may specify '*' as a wildcard, thereby allowing any origin to access the resource."
										},
										{
											"key": "Cache-Control",
											"value": "no-cache,max-age=0",
											"name": "Cache-Control",
											"description": "Tells all caching mechanisms from server to client whether they may cache this object. It is measured in seconds"
										},
										{
											"key": "Connection",
											"value": "keep-alive",
											"name": "Connection",
											"description": "Options that are desired for the connection"
										},
										{
											"key": "Content-Length",
											"value": "464",
											"name": "Content-Length",
											"description": "The length of the response body in octets (8-bit bytes)"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8",
											"name": "Content-Type",
											"description": "The mime type of this content"
										},
										{
											"key": "Date",
											"value": "Wed, 29 Nov 2017 08:44:09 GMT",
											"name": "Date",
											"description": "The date and time that the message was sent"
										},
										{
											"key": "X-Response-Time",
											"value": "29ms",
											"name": "X-Response-Time",
											"description": "Custom header"
										}
									],
									"cookie": [],
									"body": "{\"type\":\"user\",\"id\":\"49608a40-46f3-498c-a525-2de3927517c6\",\"clientId\":\"ketnet-live-admin-1511880426214\",\"streamId\":\"a2993350-cb51-437d-bf39-41e110a71f5a\",\"content\":{\"text\":\"Admin user message.\"},\"createdAt\":\"2017-11-29T08:44:09.813Z\",\"user\":{\"authenticated\":true,\"createdAt\":\"2017-11-28T13:53:25.245Z\",\"lastLogin\":\"2017-11-28T14:41:27.162Z\",\"role\":\"admin\",\"targetId\":\"b8f99a0c-1383-4891-af7a-563b5903d390\",\"id\":\"zender-api\",\"updatedAt\":\"2017-11-28T14:41:27.162Z\"}}"
								},
								{
									"name": "Send Shoutbox System Message",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"type\": \"system\",\n  \"clientId\": \"ketnet-live-admin-1511880426214\",\n  \"content\": {\n    \"text\": \"System says go.\"\n  }\n}"
										},
										"url": {
											"raw": "{{shoutboxApiHost}}/v1/channels/{{channelId}}/streams/{{streamId}}/shoutbox/messages",
											"host": [
												"{{shoutboxApiHost}}"
											],
											"path": [
												"v1",
												"channels",
												"{{channelId}}",
												"streams",
												"{{streamId}}",
												"shoutbox",
												"messages"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Access-Control-Allow-Headers",
											"value": "Content-Type, Authorization, Accept, Cache-Control, X-Requested-With",
											"name": "Access-Control-Allow-Headers",
											"description": "Used in response to a preflight request to indicate which HTTP headers can be used when making the actual request."
										},
										{
											"key": "Access-Control-Allow-Methods",
											"value": "GET,PUT,POST,DELETE",
											"name": "Access-Control-Allow-Methods",
											"description": "Specifies the method or methods allowed when accessing the resource. This is used in response to a preflight request."
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*",
											"name": "Access-Control-Allow-Origin",
											"description": "Specifies a URI that may access the resource. For requests without credentials, the server may specify '*' as a wildcard, thereby allowing any origin to access the resource."
										},
										{
											"key": "Cache-Control",
											"value": "no-cache,max-age=0",
											"name": "Cache-Control",
											"description": "Tells all caching mechanisms from server to client whether they may cache this object. It is measured in seconds"
										},
										{
											"key": "Connection",
											"value": "keep-alive",
											"name": "Connection",
											"description": "Options that are desired for the connection"
										},
										{
											"key": "Content-Length",
											"value": "462",
											"name": "Content-Length",
											"description": "The length of the response body in octets (8-bit bytes)"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8",
											"name": "Content-Type",
											"description": "The mime type of this content"
										},
										{
											"key": "Date",
											"value": "Wed, 29 Nov 2017 08:43:28 GMT",
											"name": "Date",
											"description": "The date and time that the message was sent"
										},
										{
											"key": "X-Response-Time",
											"value": "23ms",
											"name": "X-Response-Time",
											"description": "Custom header"
										}
									],
									"cookie": [],
									"body": "{\"type\":\"system\",\"id\":\"e81c1243-c32e-4c57-a755-3d055e8ed20a\",\"clientId\":\"ketnet-live-admin-1511880426214\",\"streamId\":\"a2993350-cb51-437d-bf39-41e110a71f5a\",\"content\":{\"text\":\"System says go.\"},\"createdAt\":\"2017-11-29T08:43:28.504Z\",\"user\":{\"authenticated\":true,\"createdAt\":\"2017-11-28T13:53:25.245Z\",\"lastLogin\":\"2017-11-28T14:41:27.162Z\",\"role\":\"admin\",\"targetId\":\"b8f99a0c-1383-4891-af7a-563b5903d390\",\"id\":\"zender-api\",\"updatedAt\":\"2017-11-28T14:41:27.162Z\"}}"
								}
							]
						},
						{
							"name": "Send Shoutbox User Message",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{adminToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"type\": \"user\",\n  \"clientId\": \"ketnet-live-admin-1511880426214\",\n  \"content\": {\n    \"text\": \"User message.\",\n    \"image\": \"https://s3-eu-west-1.amazonaws.com/cdn.staging.zender.tv/live/uploads/04573ba9-3efb-402f-b956-9a0f1cfeb285/2017-12-01/cea804ac-4e19-4c03-a601-fe463a422845.original.gif\"\n  }\n}"
								},
								"url": {
									"raw": "{{shoutboxApiHost}}/v1/channels/{{channelId}}/streams/{{streamId}}/shoutbox/messages",
									"host": [
										"{{shoutboxApiHost}}"
									],
									"path": [
										"v1",
										"channels",
										"{{channelId}}",
										"streams",
										"{{streamId}}",
										"shoutbox",
										"messages"
									]
								},
								"description": "Send a shoutbox message."
							},
							"response": [
								{
									"name": "Send Shoutbox Message On Behalf Of",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "x-on-behalf-of-user-id",
												"value": "{{userId}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"type\": \"user\",\n  \"clientId\": \"ketnet-live-admin-1511880426214\",\n  \"content\": {\n    \"text\": \"On behalf of.\"\n  }\n}"
										},
										"url": {
											"raw": "{{shoutboxApiHost}}/v1/channels/{{channelId}}/streams/{{streamId}}/shoutbox/messages",
											"host": [
												"{{shoutboxApiHost}}"
											],
											"path": [
												"v1",
												"channels",
												"{{channelId}}",
												"streams",
												"{{streamId}}",
												"shoutbox",
												"messages"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Access-Control-Allow-Headers",
											"value": "Content-Type, Authorization, Accept, Cache-Control, X-Requested-With",
											"name": "Access-Control-Allow-Headers",
											"description": "Used in response to a preflight request to indicate which HTTP headers can be used when making the actual request."
										},
										{
											"key": "Access-Control-Allow-Methods",
											"value": "GET,PUT,POST,DELETE",
											"name": "Access-Control-Allow-Methods",
											"description": "Specifies the method or methods allowed when accessing the resource. This is used in response to a preflight request."
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*",
											"name": "Access-Control-Allow-Origin",
											"description": "Specifies a URI that may access the resource. For requests without credentials, the server may specify '*' as a wildcard, thereby allowing any origin to access the resource."
										},
										{
											"key": "Cache-Control",
											"value": "no-cache,max-age=0",
											"name": "Cache-Control",
											"description": "Tells all caching mechanisms from server to client whether they may cache this object. It is measured in seconds"
										},
										{
											"key": "Connection",
											"value": "keep-alive",
											"name": "Connection",
											"description": "Options that are desired for the connection"
										},
										{
											"key": "Content-Length",
											"value": "722",
											"name": "Content-Length",
											"description": "The length of the response body in octets (8-bit bytes)"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8",
											"name": "Content-Type",
											"description": "The mime type of this content"
										},
										{
											"key": "Date",
											"value": "Wed, 29 Nov 2017 13:04:32 GMT",
											"name": "Date",
											"description": "The date and time that the message was sent"
										},
										{
											"key": "X-Response-Time",
											"value": "31ms",
											"name": "X-Response-Time",
											"description": "Custom header"
										}
									],
									"cookie": [],
									"body": "{\"type\":\"user\",\"id\":\"46d8c279-cfbd-4f86-baeb-b798b38d45aa\",\"clientId\":\"ketnet-live-admin-1511880426214\",\"streamId\":\"a2993350-cb51-437d-bf39-41e110a71f5a\",\"content\":{\"text\":\"On behalf of.\"},\"createdAt\":\"2017-11-29T13:04:32.525Z\",\"user\":{\"authenticated\":true,\"createdAt\":\"2017-11-29T08:33:42.090Z\",\"flag\":\"unblocked_2017-11-29T13:04:22.866Z\",\"role\":\"user\",\"targetId\":\"b8f99a0c-1383-4891-af7a-563b5903d390\",\"provider\":{\"name\":\"facebook\",\"uid\":\"1459394774070695\"},\"name\":\"Benoit Shapiro\",\"externalId\":\"b8f99a0c-1383-4891-af7a-563b5903d390_1459394774070695\",\"avatar\":\"https://graph.facebook.com/1459394774070695/picture?width=250&type=square\",\"id\":\"8184fbdc-6861-4fc5-9944-e7860b95f4df\",\"updatedAt\":\"2017-11-29T13:04:22.866Z\"}}"
								},
								{
									"name": "Send Shoutbox User Message",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"type\": \"user\",\n  \"clientId\": \"ketnet-live-admin-1511880426214\",\n  \"content\": {\n    \"text\": \"Admin user message.\"\n  }\n}"
										},
										"url": {
											"raw": "{{shoutboxApiHost}}/v1/channels/{{channelId}}/streams/{{streamId}}/shoutbox/messages",
											"host": [
												"{{shoutboxApiHost}}"
											],
											"path": [
												"v1",
												"channels",
												"{{channelId}}",
												"streams",
												"{{streamId}}",
												"shoutbox",
												"messages"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Access-Control-Allow-Headers",
											"value": "Content-Type, Authorization, Accept, Cache-Control, X-Requested-With",
											"name": "Access-Control-Allow-Headers",
											"description": "Used in response to a preflight request to indicate which HTTP headers can be used when making the actual request."
										},
										{
											"key": "Access-Control-Allow-Methods",
											"value": "GET,PUT,POST,DELETE",
											"name": "Access-Control-Allow-Methods",
											"description": "Specifies the method or methods allowed when accessing the resource. This is used in response to a preflight request."
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*",
											"name": "Access-Control-Allow-Origin",
											"description": "Specifies a URI that may access the resource. For requests without credentials, the server may specify '*' as a wildcard, thereby allowing any origin to access the resource."
										},
										{
											"key": "Cache-Control",
											"value": "no-cache,max-age=0",
											"name": "Cache-Control",
											"description": "Tells all caching mechanisms from server to client whether they may cache this object. It is measured in seconds"
										},
										{
											"key": "Connection",
											"value": "keep-alive",
											"name": "Connection",
											"description": "Options that are desired for the connection"
										},
										{
											"key": "Content-Length",
											"value": "464",
											"name": "Content-Length",
											"description": "The length of the response body in octets (8-bit bytes)"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8",
											"name": "Content-Type",
											"description": "The mime type of this content"
										},
										{
											"key": "Date",
											"value": "Wed, 29 Nov 2017 08:44:09 GMT",
											"name": "Date",
											"description": "The date and time that the message was sent"
										},
										{
											"key": "X-Response-Time",
											"value": "29ms",
											"name": "X-Response-Time",
											"description": "Custom header"
										}
									],
									"cookie": [],
									"body": "{\"type\":\"user\",\"id\":\"49608a40-46f3-498c-a525-2de3927517c6\",\"clientId\":\"ketnet-live-admin-1511880426214\",\"streamId\":\"a2993350-cb51-437d-bf39-41e110a71f5a\",\"content\":{\"text\":\"Admin user message.\"},\"createdAt\":\"2017-11-29T08:44:09.813Z\",\"user\":{\"authenticated\":true,\"createdAt\":\"2017-11-28T13:53:25.245Z\",\"lastLogin\":\"2017-11-28T14:41:27.162Z\",\"role\":\"admin\",\"targetId\":\"b8f99a0c-1383-4891-af7a-563b5903d390\",\"id\":\"zender-api\",\"updatedAt\":\"2017-11-28T14:41:27.162Z\"}}"
								},
								{
									"name": "Send Shoutbox System Message",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"type\": \"system\",\n  \"clientId\": \"ketnet-live-admin-1511880426214\",\n  \"content\": {\n    \"text\": \"System says go.\"\n  }\n}"
										},
										"url": {
											"raw": "{{shoutboxApiHost}}/v1/channels/{{channelId}}/streams/{{streamId}}/shoutbox/messages",
											"host": [
												"{{shoutboxApiHost}}"
											],
											"path": [
												"v1",
												"channels",
												"{{channelId}}",
												"streams",
												"{{streamId}}",
												"shoutbox",
												"messages"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Access-Control-Allow-Headers",
											"value": "Content-Type, Authorization, Accept, Cache-Control, X-Requested-With",
											"name": "Access-Control-Allow-Headers",
											"description": "Used in response to a preflight request to indicate which HTTP headers can be used when making the actual request."
										},
										{
											"key": "Access-Control-Allow-Methods",
											"value": "GET,PUT,POST,DELETE",
											"name": "Access-Control-Allow-Methods",
											"description": "Specifies the method or methods allowed when accessing the resource. This is used in response to a preflight request."
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*",
											"name": "Access-Control-Allow-Origin",
											"description": "Specifies a URI that may access the resource. For requests without credentials, the server may specify '*' as a wildcard, thereby allowing any origin to access the resource."
										},
										{
											"key": "Cache-Control",
											"value": "no-cache,max-age=0",
											"name": "Cache-Control",
											"description": "Tells all caching mechanisms from server to client whether they may cache this object. It is measured in seconds"
										},
										{
											"key": "Connection",
											"value": "keep-alive",
											"name": "Connection",
											"description": "Options that are desired for the connection"
										},
										{
											"key": "Content-Length",
											"value": "462",
											"name": "Content-Length",
											"description": "The length of the response body in octets (8-bit bytes)"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8",
											"name": "Content-Type",
											"description": "The mime type of this content"
										},
										{
											"key": "Date",
											"value": "Wed, 29 Nov 2017 08:43:28 GMT",
											"name": "Date",
											"description": "The date and time that the message was sent"
										},
										{
											"key": "X-Response-Time",
											"value": "23ms",
											"name": "X-Response-Time",
											"description": "Custom header"
										}
									],
									"cookie": [],
									"body": "{\"type\":\"system\",\"id\":\"e81c1243-c32e-4c57-a755-3d055e8ed20a\",\"clientId\":\"ketnet-live-admin-1511880426214\",\"streamId\":\"a2993350-cb51-437d-bf39-41e110a71f5a\",\"content\":{\"text\":\"System says go.\"},\"createdAt\":\"2017-11-29T08:43:28.504Z\",\"user\":{\"authenticated\":true,\"createdAt\":\"2017-11-28T13:53:25.245Z\",\"lastLogin\":\"2017-11-28T14:41:27.162Z\",\"role\":\"admin\",\"targetId\":\"b8f99a0c-1383-4891-af7a-563b5903d390\",\"id\":\"zender-api\",\"updatedAt\":\"2017-11-28T14:41:27.162Z\"}}"
								}
							]
						},
						{
							"name": "Send Shoutbox System Message",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{adminToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"type\": \"system\",\n  \"clientId\": \"ketnet-live-admin-1511880426214\",\n  \"content\": {\n    \"text\": \"System message.\",\n    \"image\": \"https://s3-eu-west-1.amazonaws.com/cdn.staging.zender.tv/live/uploads/04573ba9-3efb-402f-b956-9a0f1cfeb285/2017-12-01/cea804ac-4e19-4c03-a601-fe463a422845.original.gif\"\n  }\n}"
								},
								"url": {
									"raw": "{{shoutboxApiHost}}/v1/channels/{{channelId}}/streams/{{streamId}}/shoutbox/messages",
									"host": [
										"{{shoutboxApiHost}}"
									],
									"path": [
										"v1",
										"channels",
										"{{channelId}}",
										"streams",
										"{{streamId}}",
										"shoutbox",
										"messages"
									]
								},
								"description": "Send a shoutbox message."
							},
							"response": [
								{
									"name": "Send Shoutbox System Message",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"type\": \"system\",\n  \"clientId\": \"ketnet-live-admin-1511880426214\",\n  \"content\": {\n    \"text\": \"System says go.\"\n  }\n}"
										},
										"url": {
											"raw": "{{shoutboxApiHost}}/v1/channels/{{channelId}}/streams/{{streamId}}/shoutbox/messages",
											"host": [
												"{{shoutboxApiHost}}"
											],
											"path": [
												"v1",
												"channels",
												"{{channelId}}",
												"streams",
												"{{streamId}}",
												"shoutbox",
												"messages"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Access-Control-Allow-Headers",
											"value": "Content-Type, Authorization, Accept, Cache-Control, X-Requested-With",
											"name": "Access-Control-Allow-Headers",
											"description": "Used in response to a preflight request to indicate which HTTP headers can be used when making the actual request."
										},
										{
											"key": "Access-Control-Allow-Methods",
											"value": "GET,PUT,POST,DELETE",
											"name": "Access-Control-Allow-Methods",
											"description": "Specifies the method or methods allowed when accessing the resource. This is used in response to a preflight request."
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*",
											"name": "Access-Control-Allow-Origin",
											"description": "Specifies a URI that may access the resource. For requests without credentials, the server may specify '*' as a wildcard, thereby allowing any origin to access the resource."
										},
										{
											"key": "Cache-Control",
											"value": "no-cache,max-age=0",
											"name": "Cache-Control",
											"description": "Tells all caching mechanisms from server to client whether they may cache this object. It is measured in seconds"
										},
										{
											"key": "Connection",
											"value": "keep-alive",
											"name": "Connection",
											"description": "Options that are desired for the connection"
										},
										{
											"key": "Content-Length",
											"value": "462",
											"name": "Content-Length",
											"description": "The length of the response body in octets (8-bit bytes)"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8",
											"name": "Content-Type",
											"description": "The mime type of this content"
										},
										{
											"key": "Date",
											"value": "Wed, 29 Nov 2017 08:43:28 GMT",
											"name": "Date",
											"description": "The date and time that the message was sent"
										},
										{
											"key": "X-Response-Time",
											"value": "23ms",
											"name": "X-Response-Time",
											"description": "Custom header"
										}
									],
									"cookie": [],
									"body": "{\"type\":\"system\",\"id\":\"e81c1243-c32e-4c57-a755-3d055e8ed20a\",\"clientId\":\"ketnet-live-admin-1511880426214\",\"streamId\":\"a2993350-cb51-437d-bf39-41e110a71f5a\",\"content\":{\"text\":\"System says go.\"},\"createdAt\":\"2017-11-29T08:43:28.504Z\",\"user\":{\"authenticated\":true,\"createdAt\":\"2017-11-28T13:53:25.245Z\",\"lastLogin\":\"2017-11-28T14:41:27.162Z\",\"role\":\"admin\",\"targetId\":\"b8f99a0c-1383-4891-af7a-563b5903d390\",\"id\":\"zender-api\",\"updatedAt\":\"2017-11-28T14:41:27.162Z\"}}"
								},
								{
									"name": "Send Shoutbox User Message",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"type\": \"user\",\n  \"clientId\": \"ketnet-live-admin-1511880426214\",\n  \"content\": {\n    \"text\": \"Admin user message.\"\n  }\n}"
										},
										"url": {
											"raw": "{{shoutboxApiHost}}/v1/channels/{{channelId}}/streams/{{streamId}}/shoutbox/messages",
											"host": [
												"{{shoutboxApiHost}}"
											],
											"path": [
												"v1",
												"channels",
												"{{channelId}}",
												"streams",
												"{{streamId}}",
												"shoutbox",
												"messages"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Access-Control-Allow-Headers",
											"value": "Content-Type, Authorization, Accept, Cache-Control, X-Requested-With",
											"name": "Access-Control-Allow-Headers",
											"description": "Used in response to a preflight request to indicate which HTTP headers can be used when making the actual request."
										},
										{
											"key": "Access-Control-Allow-Methods",
											"value": "GET,PUT,POST,DELETE",
											"name": "Access-Control-Allow-Methods",
											"description": "Specifies the method or methods allowed when accessing the resource. This is used in response to a preflight request."
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*",
											"name": "Access-Control-Allow-Origin",
											"description": "Specifies a URI that may access the resource. For requests without credentials, the server may specify '*' as a wildcard, thereby allowing any origin to access the resource."
										},
										{
											"key": "Cache-Control",
											"value": "no-cache,max-age=0",
											"name": "Cache-Control",
											"description": "Tells all caching mechanisms from server to client whether they may cache this object. It is measured in seconds"
										},
										{
											"key": "Connection",
											"value": "keep-alive",
											"name": "Connection",
											"description": "Options that are desired for the connection"
										},
										{
											"key": "Content-Length",
											"value": "464",
											"name": "Content-Length",
											"description": "The length of the response body in octets (8-bit bytes)"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8",
											"name": "Content-Type",
											"description": "The mime type of this content"
										},
										{
											"key": "Date",
											"value": "Wed, 29 Nov 2017 08:44:09 GMT",
											"name": "Date",
											"description": "The date and time that the message was sent"
										},
										{
											"key": "X-Response-Time",
											"value": "29ms",
											"name": "X-Response-Time",
											"description": "Custom header"
										}
									],
									"cookie": [],
									"body": "{\"type\":\"user\",\"id\":\"49608a40-46f3-498c-a525-2de3927517c6\",\"clientId\":\"ketnet-live-admin-1511880426214\",\"streamId\":\"a2993350-cb51-437d-bf39-41e110a71f5a\",\"content\":{\"text\":\"Admin user message.\"},\"createdAt\":\"2017-11-29T08:44:09.813Z\",\"user\":{\"authenticated\":true,\"createdAt\":\"2017-11-28T13:53:25.245Z\",\"lastLogin\":\"2017-11-28T14:41:27.162Z\",\"role\":\"admin\",\"targetId\":\"b8f99a0c-1383-4891-af7a-563b5903d390\",\"id\":\"zender-api\",\"updatedAt\":\"2017-11-28T14:41:27.162Z\"}}"
								},
								{
									"name": "Send Shoutbox Message On Behalf Of",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "x-on-behalf-of-user-id",
												"value": "{{userId}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"type\": \"user\",\n  \"clientId\": \"ketnet-live-admin-1511880426214\",\n  \"content\": {\n    \"text\": \"On behalf of.\"\n  }\n}"
										},
										"url": {
											"raw": "{{shoutboxApiHost}}/v1/channels/{{channelId}}/streams/{{streamId}}/shoutbox/messages",
											"host": [
												"{{shoutboxApiHost}}"
											],
											"path": [
												"v1",
												"channels",
												"{{channelId}}",
												"streams",
												"{{streamId}}",
												"shoutbox",
												"messages"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Access-Control-Allow-Headers",
											"value": "Content-Type, Authorization, Accept, Cache-Control, X-Requested-With",
											"name": "Access-Control-Allow-Headers",
											"description": "Used in response to a preflight request to indicate which HTTP headers can be used when making the actual request."
										},
										{
											"key": "Access-Control-Allow-Methods",
											"value": "GET,PUT,POST,DELETE",
											"name": "Access-Control-Allow-Methods",
											"description": "Specifies the method or methods allowed when accessing the resource. This is used in response to a preflight request."
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*",
											"name": "Access-Control-Allow-Origin",
											"description": "Specifies a URI that may access the resource. For requests without credentials, the server may specify '*' as a wildcard, thereby allowing any origin to access the resource."
										},
										{
											"key": "Cache-Control",
											"value": "no-cache,max-age=0",
											"name": "Cache-Control",
											"description": "Tells all caching mechanisms from server to client whether they may cache this object. It is measured in seconds"
										},
										{
											"key": "Connection",
											"value": "keep-alive",
											"name": "Connection",
											"description": "Options that are desired for the connection"
										},
										{
											"key": "Content-Length",
											"value": "722",
											"name": "Content-Length",
											"description": "The length of the response body in octets (8-bit bytes)"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8",
											"name": "Content-Type",
											"description": "The mime type of this content"
										},
										{
											"key": "Date",
											"value": "Wed, 29 Nov 2017 13:04:32 GMT",
											"name": "Date",
											"description": "The date and time that the message was sent"
										},
										{
											"key": "X-Response-Time",
											"value": "31ms",
											"name": "X-Response-Time",
											"description": "Custom header"
										}
									],
									"cookie": [],
									"body": "{\"type\":\"user\",\"id\":\"46d8c279-cfbd-4f86-baeb-b798b38d45aa\",\"clientId\":\"ketnet-live-admin-1511880426214\",\"streamId\":\"a2993350-cb51-437d-bf39-41e110a71f5a\",\"content\":{\"text\":\"On behalf of.\"},\"createdAt\":\"2017-11-29T13:04:32.525Z\",\"user\":{\"authenticated\":true,\"createdAt\":\"2017-11-29T08:33:42.090Z\",\"flag\":\"unblocked_2017-11-29T13:04:22.866Z\",\"role\":\"user\",\"targetId\":\"b8f99a0c-1383-4891-af7a-563b5903d390\",\"provider\":{\"name\":\"facebook\",\"uid\":\"1459394774070695\"},\"name\":\"Benoit Shapiro\",\"externalId\":\"b8f99a0c-1383-4891-af7a-563b5903d390_1459394774070695\",\"avatar\":\"https://graph.facebook.com/1459394774070695/picture?width=250&type=square\",\"id\":\"8184fbdc-6861-4fc5-9944-e7860b95f4df\",\"updatedAt\":\"2017-11-29T13:04:22.866Z\"}}"
								}
							]
						},
						{
							"name": "Update Shoutbox Message",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code is 200\"] = responseCode.code === 200;"
										]
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{adminToken}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"stars\": 5,\n    \"content\": {\n        \"text\": \"Something less explicit.\"\n    }\n}"
								},
								"url": {
									"raw": "{{shoutboxApiHost}}/v1/channels/{{channelId}}/streams/{{streamId}}/shoutbox/messages/{{messageId}}",
									"host": [
										"{{shoutboxApiHost}}"
									],
									"path": [
										"v1",
										"channels",
										"{{channelId}}",
										"streams",
										"{{streamId}}",
										"shoutbox",
										"messages",
										"{{messageId}}"
									]
								},
								"description": "Get all shoutbox messages."
							},
							"response": [
								{
									"name": "Update Shoutbox Message",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"stars\": 5,\n    \"content\": {\n        \"text\": \"Something less explicit.\"\n    }\n}"
										},
										"url": {
											"raw": "{{shoutboxApiHost}}/v1/channels/{{channelId}}/streams/{{streamId}}/shoutbox/messages/{{messageId}}",
											"host": [
												"{{shoutboxApiHost}}"
											],
											"path": [
												"v1",
												"channels",
												"{{channelId}}",
												"streams",
												"{{streamId}}",
												"shoutbox",
												"messages",
												"{{messageId}}"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Access-Control-Allow-Headers",
											"value": "Content-Type, Authorization, Accept, Cache-Control, X-Requested-With",
											"name": "Access-Control-Allow-Headers",
											"description": "Used in response to a preflight request to indicate which HTTP headers can be used when making the actual request."
										},
										{
											"key": "Access-Control-Allow-Methods",
											"value": "GET,PUT,POST,DELETE",
											"name": "Access-Control-Allow-Methods",
											"description": "Specifies the method or methods allowed when accessing the resource. This is used in response to a preflight request."
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*",
											"name": "Access-Control-Allow-Origin",
											"description": "Specifies a URI that may access the resource. For requests without credentials, the server may specify '*' as a wildcard, thereby allowing any origin to access the resource."
										},
										{
											"key": "Cache-Control",
											"value": "no-cache,max-age=0",
											"name": "Cache-Control",
											"description": "Tells all caching mechanisms from server to client whether they may cache this object. It is measured in seconds"
										},
										{
											"key": "Connection",
											"value": "keep-alive",
											"name": "Connection",
											"description": "Options that are desired for the connection"
										},
										{
											"key": "Content-Length",
											"value": "500",
											"name": "Content-Length",
											"description": "The length of the response body in octets (8-bit bytes)"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8",
											"name": "Content-Type",
											"description": "The mime type of this content"
										},
										{
											"key": "Date",
											"value": "Tue, 28 Nov 2017 15:26:35 GMT",
											"name": "Date",
											"description": "The date and time that the message was sent"
										},
										{
											"key": "X-Response-Time",
											"value": "25ms",
											"name": "X-Response-Time",
											"description": "Custom header"
										}
									],
									"cookie": [],
									"body": "{\"createdAt\":\"2017-11-28T15:19:10.443Z\",\"clientId\":\"bdaac6e5-fb79-462c-b669-80641bfef413-1511880426214\",\"streamId\":\"a2993350-cb51-437d-bf39-41e110a71f5a\",\"id\":\"110d3e00-925b-441e-bb92-a418dd80a004\",\"stars\":5,\"type\":\"user\",\"content\":{\"text\":\"Something less explicit.\"},\"updatedAt\":\"2017-11-28T15:26:35.005Z\",\"user\":{\"id\":\"f468fca3-1287-4858-880f-7c099e0ba1d3\",\"avatar\":\"https://graph.facebook.com/undefined/picture?width=250&type=square\",\"externalId\":\"b8f99a0c-1383-4891-af7a-563b5903d390_undefined\"}}"
								}
							]
						},
						{
							"name": "Trigger Shoutbox Message",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{adminToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{}"
								},
								"url": {
									"raw": "{{shoutboxApiHost}}/v1/channels/{{channelId}}/streams/{{streamId}}/shoutbox/messages/{{messageId}}/trigger",
									"host": [
										"{{shoutboxApiHost}}"
									],
									"path": [
										"v1",
										"channels",
										"{{channelId}}",
										"streams",
										"{{streamId}}",
										"shoutbox",
										"messages",
										"{{messageId}}",
										"trigger"
									]
								},
								"description": "Trigger a shoutbox message to the studio visualisation?"
							},
							"response": [
								{
									"name": "Trigger Shoutbox Message Success",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{}"
										},
										"url": {
											"raw": "{{shoutboxApiHost}}/v1/channels/{{channelId}}/streams/{{streamId}}/shoutbox/messages/{{messageId}}/trigger",
											"host": [
												"{{shoutboxApiHost}}"
											],
											"path": [
												"v1",
												"channels",
												"{{channelId}}",
												"streams",
												"{{streamId}}",
												"shoutbox",
												"messages",
												"{{messageId}}",
												"trigger"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [],
									"cookie": [],
									"body": "{\n        \"createdAt\": \"2017-11-28T15:19:10.443Z\",\n        \"clientId\": \"bdaac6e5-fb79-462c-b669-80641bfef413-1511880426214\",\n        \"streamId\": \"a2993350-cb51-437d-bf39-41e110a71f5a\",\n        \"id\": \"110d3e00-925b-441e-bb92-a418dd80a004\",\n        \"stars\": 5,\n        \"type\": \"user\",\n        \"userId\": \"f468fca3-1287-4858-880f-7c099e0ba1d3\",\n        \"content\": {\n            \"text\": \"Something less explicit.\"\n        },\n        \"updatedAt\": \"2017-11-28T15:26:35.005Z\",\n        \"user\": {\n            \"id\": \"f468fca3-1287-4858-880f-7c099e0ba1d3\",\n            \"avatar\": \"https://graph.facebook.com/undefined/picture?width=250&type=square\",\n            \"externalId\": \"b8f99a0c-1383-4891-af7a-563b5903d390_undefined\",\n            \"flag\": \"blocked_2017-11-28T15:27:06.362Z\"\n        }\n    }"
								},
								{
									"name": "Trigger Unknown Shoutbox Message",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"disabled": false
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{}"
										},
										"url": {
											"raw": "{{shoutboxApiHost}}/v1/channels/{{channelId}}/streams/{{streamId}}/shoutbox/messages/{{messageId}}/trigger",
											"host": [
												"{{shoutboxApiHost}}"
											],
											"path": [
												"v1",
												"channels",
												"{{channelId}}",
												"streams",
												"{{streamId}}",
												"shoutbox",
												"messages",
												"{{messageId}}",
												"trigger"
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Access-Control-Allow-Headers",
											"value": "Content-Type, Authorization, Accept, Cache-Control, X-Requested-With, X-On-Behalf-Of-User-Id",
											"name": "Access-Control-Allow-Headers",
											"description": "Used in response to a preflight request to indicate which HTTP headers can be used when making the actual request."
										},
										{
											"key": "Access-Control-Allow-Methods",
											"value": "GET,PUT,POST,DELETE",
											"name": "Access-Control-Allow-Methods",
											"description": "Specifies the method or methods allowed when accessing the resource. This is used in response to a preflight request."
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*",
											"name": "Access-Control-Allow-Origin",
											"description": "Specifies a URI that may access the resource. For requests without credentials, the server may specify '*' as a wildcard, thereby allowing any origin to access the resource."
										},
										{
											"key": "Cache-Control",
											"value": "no-cache,max-age=0",
											"name": "Cache-Control",
											"description": "Tells all caching mechanisms from server to client whether they may cache this object. It is measured in seconds"
										},
										{
											"key": "Connection",
											"value": "keep-alive",
											"name": "Connection",
											"description": "Options that are desired for the connection"
										},
										{
											"key": "Content-Length",
											"value": "96",
											"name": "Content-Length",
											"description": "The length of the response body in octets (8-bit bytes)"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8",
											"name": "Content-Type",
											"description": "The mime type of this content"
										},
										{
											"key": "Date",
											"value": "Mon, 20 Aug 2018 13:32:40 GMT",
											"name": "Date",
											"description": "The date and time that the message was sent"
										},
										{
											"key": "Vary",
											"value": "Accept-Encoding",
											"name": "Vary",
											"description": "Tells downstream proxies how to match future request headers to decide whether the cached response can be used rather than requesting a fresh one from the origin server."
										},
										{
											"key": "X-Response-Time",
											"value": "37ms",
											"name": "X-Response-Time",
											"description": "Custom header"
										}
									],
									"cookie": [],
									"body": "{\"code\":\"NOT_FOUND\",\"message\":\"No message found with id `110d3e00-925b-441e-bb92-a418dd80a004`\"}"
								}
							]
						},
						{
							"name": "Delete Shoutbox Message",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code is 200\"] = responseCode.code === 200;"
										]
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{adminToken}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{shoutboxApiHost}}/v1/channels/{{channelId}}/streams/{{streamId}}/shoutbox/messages/{{messageId}}",
									"host": [
										"{{shoutboxApiHost}}"
									],
									"path": [
										"v1",
										"channels",
										"{{channelId}}",
										"streams",
										"{{streamId}}",
										"shoutbox",
										"messages",
										"{{messageId}}"
									]
								},
								"description": "Delete a shoutbox messages."
							},
							"response": []
						},
						{
							"name": "Export Shoutbox Messages",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code is 200\"] = responseCode.code === 200;",
											"tests[\"Content-Type is text/csv\"] = postman.getResponseHeader(\"Content-Type\") === 'text/csv';"
										]
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{adminToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{shoutboxApiHost}}/v1/channels/{{channelId}}/streams/{{streamId}}/shoutbox/messages/export?type=csv",
									"host": [
										"{{shoutboxApiHost}}"
									],
									"path": [
										"v1",
										"channels",
										"{{channelId}}",
										"streams",
										"{{streamId}}",
										"shoutbox",
										"messages",
										"export"
									],
									"query": [
										{
											"key": "type",
											"value": "csv"
										}
									]
								},
								"description": "Download CSV with all the shoutbox messages."
							},
							"response": [
								{
									"name": "Export Shoutbox Messages",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{shoutboxApiHost}}/v1/channels/{{channelId}}/streams/{{streamId}}/shoutbox/messages/export?type=csv",
											"host": [
												"{{shoutboxApiHost}}"
											],
											"path": [
												"v1",
												"channels",
												"{{channelId}}",
												"streams",
												"{{streamId}}",
												"shoutbox",
												"messages",
												"export"
											],
											"query": [
												{
													"key": "type",
													"value": "csv"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "plain",
									"header": [
										{
											"key": "Access-Control-Allow-Headers",
											"value": "Content-Type, Authorization, Accept, Cache-Control, X-Requested-With",
											"name": "Access-Control-Allow-Headers",
											"description": "Used in response to a preflight request to indicate which HTTP headers can be used when making the actual request."
										},
										{
											"key": "Access-Control-Allow-Methods",
											"value": "GET,PUT,POST,DELETE",
											"name": "Access-Control-Allow-Methods",
											"description": "Specifies the method or methods allowed when accessing the resource. This is used in response to a preflight request."
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*",
											"name": "Access-Control-Allow-Origin",
											"description": "Specifies a URI that may access the resource. For requests without credentials, the server may specify '*' as a wildcard, thereby allowing any origin to access the resource."
										},
										{
											"key": "Cache-Control",
											"value": "no-cache,max-age=0",
											"name": "Cache-Control",
											"description": "Tells all caching mechanisms from server to client whether they may cache this object. It is measured in seconds"
										},
										{
											"key": "Connection",
											"value": "keep-alive",
											"name": "Connection",
											"description": "Options that are desired for the connection"
										},
										{
											"key": "Content-Disposition",
											"value": "attachment; filename=\"a2993350-cb51-437d-bf39-41e110a71f5a_messages.csv\"",
											"name": "Content-Disposition",
											"description": "An opportunity to raise a \"File Download\" dialogue box for a known MIME type"
										},
										{
											"key": "Content-Length",
											"value": "1187",
											"name": "Content-Length",
											"description": "The length of the response body in octets (8-bit bytes)"
										},
										{
											"key": "Content-Type",
											"value": "text/csv",
											"name": "Content-Type",
											"description": "The mime type of this content"
										},
										{
											"key": "Date",
											"value": "Wed, 29 Nov 2017 08:51:54 GMT",
											"name": "Date",
											"description": "The date and time that the message was sent"
										},
										{
											"key": "X-Response-Time",
											"value": "33ms",
											"name": "X-Response-Time",
											"description": "Custom header"
										}
									],
									"cookie": [],
									"body": "\"Text\",\"Image\",\"Video\",\"First Name\",\"Name\",\"Created At\",\"Id\",\"External Id\"\n\"Kaka.\",,,,,\"2017-11-29T08:44:50.344Z\",\"zender-api\",\n\"System message.\",,,,,\"2017-11-29T08:44:28.480Z\",\"zender-api\",\n\"Admin user message.\",,,,,\"2017-11-29T08:44:09.813Z\",\"zender-api\",\n\"System says go.\",,,,,\"2017-11-29T08:43:28.504Z\",\"zender-api\",\n\"System says yes.\",,,,,\"2017-11-29T08:42:47.209Z\",\"zender-api\",\n\"user\",,,,,\"2017-11-29T08:42:06.270Z\",\"zender-api\",\n\"Who u say?\",,,,,\"2017-11-29T08:41:43.733Z\",\"zender-api\",\n\"System says yes.\",,,,\"Benoit Shapiro\",\"2017-11-29T08:41:26.700Z\",\"8184fbdc-6861-4fc5-9944-e7860b95f4df\",\"b8f99a0c-1383-4891-af7a-563b5903d390_1459394774070695\"\n\"Who is doing that?\",,,,,\"2017-11-29T08:41:13.669Z\",\"zender-api\",\n\"System says no.\",,,,\"Benoit Shapiro\",\"2017-11-29T08:40:17.608Z\",\"8184fbdc-6861-4fc5-9944-e7860b95f4df\",\"b8f99a0c-1383-4891-af7a-563b5903d390_1459394774070695\"\n\"System message.\",,,,\"Benoit Shapiro\",\"2017-11-29T08:39:57.701Z\",\"8184fbdc-6861-4fc5-9944-e7860b95f4df\",\"b8f99a0c-1383-4891-af7a-563b5903d390_1459394774070695\"\n\"Something less explicit.\",,,,,\"2017-11-28T15:19:10.443Z\",\"f468fca3-1287-4858-880f-7c099e0ba1d3\",\"b8f99a0c-1383-4891-af7a-563b5903d390_undefined\""
								}
							]
						},
						{
							"name": "Update Shoutbox Profanity Filter",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{adminToken}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"shoutbox\": {\n    \"profanity\": [\n      {\n        \"matches\": \"exact\",\n        \"text\": \"something exact explicit\"\n      },\n      {\n        \"matches\": \"contains\",\n        \"text\": \"something that contains explicit language\"\n      }\n    ]\n  }\n}"
								},
								"url": {
									"raw": "{{coreApiHost}}/v1/targets/{{targetId}}",
									"host": [
										"{{coreApiHost}}"
									],
									"path": [
										"v1",
										"targets",
										"{{targetId}}"
									]
								},
								"description": "Update the shoutbox profanity filter list."
							},
							"response": [
								{
									"name": "Update Shoutbox Profanity Filter",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"shoutbox\": {\n    \"profanity\": [\n      {\n        \"matches\": \"exact\",\n        \"text\": \"something exact explicit\"\n      },\n      {\n        \"matches\": \"contains\",\n        \"text\": \"something that contains explicit language\"\n      }\n    ]\n  }\n}"
										},
										"url": {
											"raw": "{{coreApiHost}}/v1/targets/{{targetId}}",
											"host": [
												"{{coreApiHost}}"
											],
											"path": [
												"v1",
												"targets",
												"{{targetId}}"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Access-Control-Allow-Headers",
											"value": "Content-Type, Authorization, Accept, Cache-Control, X-Requested-With",
											"name": "Access-Control-Allow-Headers",
											"description": "Used in response to a preflight request to indicate which HTTP headers can be used when making the actual request."
										},
										{
											"key": "Access-Control-Allow-Methods",
											"value": "GET,PUT,POST,DELETE",
											"name": "Access-Control-Allow-Methods",
											"description": "Specifies the method or methods allowed when accessing the resource. This is used in response to a preflight request."
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*",
											"name": "Access-Control-Allow-Origin",
											"description": "Specifies a URI that may access the resource. For requests without credentials, the server may specify '*' as a wildcard, thereby allowing any origin to access the resource."
										},
										{
											"key": "Connection",
											"value": "keep-alive",
											"name": "Connection",
											"description": "Options that are desired for the connection"
										},
										{
											"key": "Content-Length",
											"value": "70525",
											"name": "Content-Length",
											"description": "The length of the response body in octets (8-bit bytes)"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8",
											"name": "Content-Type",
											"description": "The mime type of this content"
										},
										{
											"key": "Date",
											"value": "Wed, 29 Nov 2017 08:55:53 GMT",
											"name": "Date",
											"description": "The date and time that the message was sent"
										},
										{
											"key": "X-Response-Time",
											"value": "23ms",
											"name": "X-Response-Time",
											"description": "Custom header"
										},
										{
											"key": "x-server-time",
											"value": "2017-11-29T08:55:53.897Z",
											"name": "x-server-time",
											"description": "Custom header"
										}
									],
									"cookie": [],
									"body": "{\"emojis\":{\"defaultSets\":[{\"emojis\":[{\"title\":\"000-gezichten__smile01\",\"url\":\"http://localhost:14569/cdn.local.zender.tv/live/uploads/b8f99a0c-1383-4891-af7a-563b5903d390/2017-11-28/062c82a8-1de5-4615-808f-02eaefd95845.original.png\",\"id\":\"/live/uploads/b8f99a0c-1383-4891-af7a-563b5903d390/2017-11-28/062c82a8-1de5-4615-808f-02eaefd95845.original.png\"},{\"title\":\"000-gezichten__smile02\",\"url\":\"http://localhost:14569/cdn.local.zender.tv/live/uploads/b8f99a0c-1383-4891-af7a-563b5903d390/2017-11-28/b21bc786-8a07-48d5-ab8d-e0acfa94e5a9.original.png\",\"id\":\"/live/uploads/b8f99a0c-1383-4891-af7a-563b5903d390/2017-11-28/b21bc786-8a07-48d5-ab8d-e0acfa94e5a9.original.png\"},{\"title\":\"000-gezichten__smile03\",\"url\":\"http://localhost:14569/cdn.local.zender.tv/live/uploads/b8f99a0c-1383-4891-af7a-563b5903d390/2017-11-28/8be81c15-0ef0-4e83-b414-7ab0620ee774.original.png\",\"id\":\"/live/uploads/b8f99a0c-1383-4891-af7a-563b5903d390/2017-11-28/8be81c15-0ef0-4e83-b414-7ab0620ee774.original.png\"},{\"title\":\"000-gezichten__smile04\",\"url\":\"http://localhost:14569/cdn.local.zender.tv/live/uploads/b8f99a0c-1383-4891-af7a-563b5903d390/2017-11-28/e2b27bab-f05d-4a01-95e1-79f778794274.original.png\",\"id\":\"/live/uploads/b8f99a0c-1383-4891-af7a-563b5903d390/2017-11-28/e2b27bab-f05d-4a01-95e1-79f778794274.original.png\"},{\"title\":\"000-gezichten__smile05\",\"url\":\"http://localhost:14569/cdn.local.zender.tv/live/uploads/b8f99a0c-1383-4891-af7a-563b5903d390/2017-11-28/69a7e7c5-ba0e-4095-af53-8d3de9e7a375.original.png\",\"id\":\"/live/uploads/b8f99a0c-1383-4891-af7a-563b5903d390/2017-11-28/69a7e7c5-ba0e-4095-af53-8d3de9e7a375.original.png\"},{\"title\":\"000-gezichten__smile06\",\"url\":\"http://localhost:14569/cdn.local.zender.tv/live/uploads/b8f99a0c-1383-4891-af7a-563b5903d390/2017-11-28/57350af7-b67d-42b7-a59b-106ea3deae49.original.png\",\"id\":\"/live/uploads/b8f99a0c-1383-4891-af7a-563b5903d390/2017-11-28/57350af7-b67d-42b7-a59b-106ea3deae49.original.png\"},{\"title\":\"000-gezichten__smile07\",\"url\":\"http://localhost:14569/cdn.local.zender.tv/live/uploads/b8f99a0c-1383-4891-af7a-563b5903d390/2017-11-28/29978b65-818e-4416-bc38-f2d5b03e240e.original.png\",\"id\":\"/live/uploads/b8f99a0c-1383-4891-af7a-563b5903d390/2017-11-28/29978b65-818e-4416-bc38-f2d5b03e240e.original.png\"},{\"title\":\"000-gezichten__smile08\",\"url\":\"http://localhost:14569/cdn.local.zender.tv/live/uploads/b8f99a0c-1383-4891-af7a-563b5903d390/2017-11-28/56cb619a-5f12-4ece-8942-fd4b9de0a8ac.original.png\",\"id\":\"/live/uploads/b8f99a0c-1383-4891-af7a-563b5903d390/2017-11-28/56cb619a-5f12-4ece-8942-fd4b9de0a8ac.original.png\"},{\"title\":\"000-gezichten__smile09\",\"url\":\"http://localhost:14569/cdn.local.zender.tv/live/uploads/b8f99a0c-1383-4891-af7a-563b5903d390/2017-11-28/ab0d4c4b-7076-4356-86ca-e6c8e183e1c2.original.png\",\"id\":\"/live/uploads/b8f99a0c-1383-4891-af7a-563b5903d390/2017-11-28/ab0d4c4b-7076-4356-86ca-e6c8e183e1c2.original.png\"},{\"title\":\"000-gezichten__smile10\",\"url\":\"http://localhost:14569/cdn.local.zender.tv/live/uploads/b8f99a0c-1383-4891-af7a-563b5903d390/2017-11-28/02b2c058-bde0-47ac-b21a-3f9d0c1397b7.original.png\",\"id\":\"/live/uploads/b8f99a0c-1383-4891-af7a-563b5903d390/2017-11-28/02b2c058-bde0-47ac-b21a-3f9d0c1397b7.original.png\"},{\"title\":\"000-gezichten__smile11\",\"url\":\"http://localhost:14569/cdn.local.zender.tv/live/uploads/b8f99a0c-1383-4891-af7a-563b5903d390/2017-11-28/de0d1e3a-52fa-4f03-af9c-1b427d75acc5.original.png\",\"id\":\"/live/uploads/b8f99a0c-1383-4891-af7a-563b5903d390/2017-11-28/de0d1e3a-52fa-4f03-af9c-1b427d75acc5.original.png\"},{\"title\":\"000-gezichten__smile12\",\"url\":\"http://localhost:14569/cdn.local.zender.tv/live/uploads/b8f99a0c-1383-4891-af7a-563b5903d390/2017-11-28/509dcab2-6176-45c8-bc28-cec7aba6a797.original.png\",\"id\":\"/live/uploads/b8f99a0c-1383-4891-af7a-563b5903d390/2017-11-28/509dcab2-6176-45c8-bc28-cec7aba6a797.original.png\"},{\"title\":\"000-gezichten__smile13\",\"url\":\"http://localhost:14569/cdn.local.zender.tv/live/uploads/b8f99a0c-1383-4891-af7a-563b5903d390/2017-11-28/70cbe111-3ae1-4579-b5e5-2dc29d08920e.original.png\",\"id\":\"/live/uploads/b8f99a0c-1383-4891-af7a-563b5903d390/2017-11-28/70cbe111-3ae1-4579-b5e5-2dc29d08920e.original.png\"},{\"title\":\"000-gezichten__smile14\",\"url\":\"http://localhost:14569/cdn.local.zender.tv/live/uploads/b8f99a0c-1383-4891-af7a-563b5903d390/2017-11-28/f656854b-da1c-4204-850d-69ef63dd4e29.original.png\",\"id\":\"/live/uploads/b8f99a0c-1383-4891-af7a-563b5903d390/2017-11-28/f656854b-da1c-4204-850d-69ef63dd4e29.original.png\"},{\"title\":\"000-gezichten__smile15\",\"url\":\"http://localhost:14569/cdn.local.zender.tv/live/uploads/b8f99a0c-1383-4891-af7a-563b5903d390/2017-11-28/fecfbfcb-2014-4a64-a571-3d62d79e9cfb.original.png\",\"id\":\"/live/uploads/b8f99a0c-1383-4891-af7a-563b5903d390/2017-11-28/fecfbfcb-2014-4a64-a571-3d62d79e9cfb.original.png\"},{\"title\":\"000-gezichten__smile16\",\"url\":\"http://localhost:14569/cdn.local.zender.tv/live/uploads/b8f99a0c-1383-4891-af7a-563b5903d390/2017-11-28/61ad7b8e-f27d-499a-8efe-82ca1684dffe.original.png\",\"id\":\"/live/uploads/b8f99a0c-1383-4891-af7a-563b5903d390/2017-11-28/61ad7b8e-f27d-499a-8efe-82ca1684dffe.original.png\"},{\"title\":\"000-gezichten__t-random01\",\"url\":\"http://localhost:14569/cdn.local.zender.tv/live/uploads/b8f99a0c-1383-4891-af7a-563b5903d390/2017-11-28/c7d21813-e166-441b-ab52-ac041ed2474c.original.png\",\"id\":\"/live/uploads/b8f99a0c-1383-4891-af7a-563b5903d390/2017-11-28/c7d21813-e166-441b-ab52-ac041ed2474c.original.png\"},{\"title\":\"000-gezichten__t-random02\",\"url\":\"http://localhost:14569/cdn.local.zender.tv/live/uploads/b8f99a0c-1383-4891-af7a-563b5903d390/2017-11-28/805abf31-8bcb-4376-ba8c-e34eb40f6d56.original.png\",\"id\":\"/live/uploads/b8f99a0c-1383-4891-af7a-563b5903d390/2017-11-28/805abf31-8bcb-4376-ba8c-e34eb40f6d56.original.png\"},{\"title\":\"000-gezichten__t-random03\",\"url\":\"http://localhost:14569/cdn.local.zender.tv/live/uploads/b8f99a0c-1383-4891-af7a-563b5903d390/2017-11-28/57f6f453-049a-43f0-93c6-8dfd50962040.original.png\",\"id\":\"/live/uploads/b8f99a0c-1383-4891-af7a-563b5903d390/2017-11-28/57f6f453-049a-43f0-93c6-8dfd50962040.original.png\"},{\"title\":\"000-gezichten__t-random04\",\"url\":\"http://localhost:14569/cdn.local.zender.tv/live/uploads/b8f99a0c-1383-4891-af7a-563b5903d390/2017-11-28/af45e9c6-ef86-4b51-924c-87788a8b7264.original.png\",\"id\":\"/live/uploads/b8f99a0c-1383-4891-af7a-563b5903d390/2017-11-28/af45e9c6-ef86-4b51-924c-87788a8b7264.original.png\"},{\"title\":\"000-gezichten__t-sad01\",\"url\":\"http://localhost:14569/cdn.local.zender.tv/live/uploads/b8f99a0c-1383-4891-af7a-563b5903d390/2017-11-28/d7d7bf03-e77a-452e-9e13-a523a8efa742.original.png\",\"id\":\"/live/uploads/b8f99a0c-1383-4891-af7a-563b5903d390/2017-11-28/d7d7bf03-e77a-452e-9e13-a523a8efa742.original.png\"},{\"title\":\"000-gezichten__t-sad02\",\"url\":\"http://localhost:14569/cdn.local.zender.tv/live/uploads/b8f99a0c-1383-4891-af7a-563b5903d390/2017-11-28/4cd31400-8baf-4b23-a5cc-9522265f9208.original.png\",\"id\":\"/live/uploads/b8f99a0c-1383-4891-af7a-563b5903d390/2017-11-28/4cd31400-8baf-4b23-a5cc-9522265f9208.original.png\"},{\"title\":\"000-gezichten__t-sad03\",\"url\":\"http://localhost:14569/cdn.local.zender.tv/live/uploads/b8f99a0c-1383-4891-af7a-563b5903d390/2017-11-28/02b6d320-bc54-4e1b-8a5e-014dd4f87242.original.png\",\"id\":\"/live/uploads/b8f99a0c-1383-4891-af7a-563b5903d390/2017-11-28/02b6d320-bc54-4e1b-8a5e-014dd4f87242.original.png\"},{\"title\":\"000-gezichten__t-sad05\",\"url\":\"http://localhost:14569/cdn.local.zender.tv/live/uploads/b8f99a0c-1383-4891-af7a-563b5903d390/2017-11-28/7a0f6948-d0d6-4c54-8823-6e33ff500171.original.png\",\"id\":\"/live/uploads/b8f99a0c-1383-4891-af7a-563b5903d390/2017-11-28/7a0f6948-d0d6-4c54-8823-6e33ff500171.original.png\"},{\"title\":\"000-gezichten__t-sad06\",\"url\":\"http://localhost:14569/cdn.local.zender.tv/live/uploads/b8f99a0c-1383-4891-af7a-563b5903d390/2017-11-28/8163800d-9c98-48a1-827f-2a94b700d24b.original.png\",\"id\":\"/live/uploads/b8f99a0c-1383-4891-af7a-563b5903d390/2017-11-28/8163800d-9c98-48a1-827f-2a94b700d24b.original.png\"},{\"title\":\"000-gezichten__t-sad07\",\"url\":\"http://localhost:14569/cdn.local.zender.tv/live/uploads/b8f99a0c-1383-4891-af7a-563b5903d390/2017-11-28/294aa82e-8fbf-4ff3-89aa-61c50a24f410.original.png\",\"id\":\"/live/uploads/b8f99a0c-1383-4891-af7a-563b5903d390/2017-11-28/294aa82e-8fbf-4ff3-89aa-61c50a24f410.original.png\"},{\"title\":\"000-gezichten__t-sad08\",\"url\":\"http://localhost:14569/cdn.local.zender.tv/live/uploads/b8f99a0c-1383-4891-af7a-563b5903d390/2017-11-28/7f88579f-309b-41d8-ba87-ce3abffaf924.original.png\",\"id\":\"/live/uploads/b8f99a0c-1383-4891-af7a-563b5903d390/2017-11-28/7f88579f-309b-41d8-ba87-ce3abffaf924.original.png\"},{\"title\":\"000-gezichten__u-divers01\",\"url\":\"http://localhost:14569/cdn.local.zender.tv/live/uploads/b8f99a0c-1383-4891-af7a-563b5903d390/2017-11-28/7b53c09a-5e93-454c-92ce-3a9171a0ecbf.original.png\",\"id\":\"/live/uploads/b8f99a0c-1383-4891-af7a-563b5903d390/2017-11-28/7b53c09a-5e93-454c-92ce-3a9171a0ecbf.original.png\"},{\"title\":\"000-gezichten__u-divers011\",\"url\":\"http://localhost:14569/cdn.local.zender.tv/live/uploads/b8f99a0c-1383-4891-af7a-563b5903d390/2017-11-28/366a38df-daa9-45ad-a198-91420f9984c3.original.png\",\"id\":\"/live/uploads/b8f99a0c-1383-4891-af7a-563b5903d390/2017-11-28/366a38df-daa9-45ad-a198-91420f9984c3.original.png\"},{\"title\":\"000-gezichten__u-divers02\",\"url\":\"http://localhost:14569/cdn.local.zender.tv/live/uploads/b8f99a0c-1383-4891-af7a-563b5903d390/2017-11-28/44706833-39b0-44ab-8b82-479e3821d1a0.original.png\",\"id\":\"/live/uploads/b8f99a0c-1383-4891-af7a-563b5903d390/2017-11-28/44706833-39b0-44ab-8b82-479e3821d1a0.original.png\"},{\"title\":\"000-gezichten__u-divers03\",\"url\":\"http://localhost:14569/cdn.local.zender.tv/live/uploads/b8f99a0c-1383-4891-af7a-563b5903d390/2017-11-28/570da07f-bc33-4562-abeb-2d13d45fe941.original.png\",\"id\":\"/live/uploads/b8f99a0c-1383-4891-af7a-563b5903d390/2017-11-28/570da07f-bc33-4562-abeb-2d13d45fe941.original.png\"},{\"title\":\"000-gezichten__u-divers04\",\"url\":\"http://localhost:14569/cdn.local.zender.tv/live/uploads/b8f99a0c-1383-4891-af7a-563b5903d390/2017-11-28/22591763-65a5-4317-a4ee-7abf3df67319.original.png\",\"id\":\"/live/uploads/b8f99a0c-1383-4891-af7a-563b5903d390/2017-11-28/22591763-65a5-4317-a4ee-7abf3df67319.original.png\"},{\"title\":\"000-gezichten__u-divers05\",\"url\":\"http://localhost:14569/cdn.local.zender.tv/live/uploads/b8f99a0c-1383-4891-af7a-563b5903d390/2017-11-28/bde12432-7acb-47a4-99d3-5d6316b1720f.original.png\",\"id\":\"/live/uploads/b8f99a0c-1383-4891-af7a-563b5903d390/2017-11-28/bde12432-7acb-47a4-99d3-5d6316b1720f.original.png\"},{\"title\":\"000-gezichten__u-divers06\",\"url\":\"http://localhost:14569/cdn.local.zender.tv/live/uploads/b8f99a0c-1383-4891-af7a-563b5903d390/2017-11-28/21001452-8a80-43cc-ad26-a672d13d0b53.original.png\",\"id\":\"/live/uploads/b8f99a0c-1383-4891-af7a-563b5903d390/2017-11-28/21001452-8a80-43cc-ad26-a672d13d0b53.original.png\"},{\"title\":\"000-gezichten__u-divers07\",\"url\":\"http://localhost:14569/cdn.local.zender.tv/live/uploads/b8f99a0c-1383-4891-af7a-563b5903d390/2017-11-28/6a2b3726-d7d0-48d4-abde-f6b74583236a.original.png\",\"id\":\"/live/uploads/b8f99a0c-1383-4891-af7a-563b5903d390/2017-11-28/6a2b3726-d7d0-48d4-abde-f6b74583236a.original.png\"},{\"title\":\"000-gezichten__u-divers08\",\"url\":\"http://localhost:14569/cdn.local.zender.tv/live/uploads/b8f99a0c-1383-4891-af7a-563b5903d390/2017-11-28/c0fdafc9-f6c4-4626-9b86-cdd8248ca9c5.original.png\",\"id\":\"/live/uploads/b8f99a0c-1383-4891-af7a-563b5903d390/2017-11-28/c0fdafc9-f6c4-4626-9b86-cdd8248ca9c5.original.png\"},{\"title\":\"000-gezichten__u-divers09\",\"url\":\"http://localhost:14569/cdn.local.zender.tv/live/uploads/b8f99a0c-1383-4891-af7a-563b5903d390/2017-11-28/c4ddc01c-a0b8-4396-bfd3-75999dce1a2f.original.png\",\"id\":\"/live/uploads/b8f99a0c-1383-4891-af7a-563b5903d390/2017-11-28/c4ddc01c-a0b8-4396-bfd3-75999dce1a2f.original.png\"},{\"title\":\"000-gezichten__u-divers12\",\"url\":\"http://localhost:14569/cdn.local.zender.tv/live/uploads/b8f99a0c-1383-4891-af7a-563b5903d390/2017-11-28/4e1fc193-2238-4458-b994-acfa263ddd7a.original.png\",\"id\":\"/live/uploads/b8f99a0c-1383-4891-af7a-563b5903d390/2017-11-28/4e1fc193-2238-4458-b994-acfa263ddd7a.original.png\"},{\"title\":\"000-gezichten__u-divers13\",\"url\":\"http://localhost:14569/cdn.local.zender.tv/live/uploads/b8f99a0c-1383-4891-af7a-563b5903d390/2017-11-28/137f2d30-252b-4760-b9b2-d83f036b9d6d.original.png\",\"id\":\"/live/uploads/b8f99a0c-1383-4891-af7a-563b5903d390/2017-11-28/137f2d30-252b-4760-b9b2-d83f036b9d6d.original.png\"}],\"icon\":{\"url\":\"http://localhost:14569/cdn.local.zender.tv/live/uploads/b8f99a0c-1383-4891-af7a-563b5903d390/2017-11-28/062c82a8-1de5-4615-808f-02eaefd95845.original.png\",\"id\":\"/live/uploads/b8f99a0c-1383-4891-af7a-563b5903d390/2017-11-28/062c82a8-1de5-4615-808f-02eaefd95845.original.png\"},\"id\":\"7b3f2436-dae0-45cf-aad2-4320cd342640\",\"title\":\"000-faces\"},{\"emojis\":[{\"title\":\"001-handen__hand01\",\"url\":\"http://localhost:14569/cdn.local.zender.tv/live/uploads/b8f99a0c-1383-4891-af7a-563b5903d390/2017-11-28/982cdc90-f7ea-403b-a7a3-9d01c318c082.original.png\",\"id\":\"/live/uploads/b8f99a0c-1383-4891-af7a-563b5903d390/2017-11-28/982cdc90-f7ea-403b-a7a3-9d01c318c082.original.png\"},{\"title\":\"001-handen__hand02\",\"url\":\"http://localhost:14569/cdn.local.zender.tv/live/uploads/b8f99a0c-1383-4891-af7a-563b5903d390/2017-11-28/04295cf9-fa41-4145-92b7-43ae13247347.original.png\",\"id\":\"/live/uploads/b8f99a0c-1383-4891-af7a-563b5903d390/2017-11-28/04295cf9-fa41-4145-92b7-43ae13247347.original.png\"},{\"title\":\"001-handen__hand03\",\"url\":\"http://localhost:14569/cdn.local.zender.tv/live/uploads/b8f99a0c-1383-4891-af7a-563b5903d390/2017-11-28/c0714a47-b2bc-4975-a6f2-57e15901b241.original.png\",\"id\":\"/live/uploads/b8f99a0c-1383-4891-af7a-563b5903d390/2017-11-28/c0714a47-b2bc-4975-a6f2-57e15901b241.original.png\"},{\"title\":\"001-handen__hand04\",\"url\":\"http://localhost:14569/cdn.local.zender.tv/live/uploads/b8f99a0c-1383-4891-af7a-563b5903d390/2017-11-28/476dc007-533f-49fa-bcf1-f19e24193341.original.png\",\"id\":\"/live/uploads/b8f99a0c-1383-4891-af7a-563b5903d390/2017-11-28/476dc007-533f-49fa-bcf1-f19e24193341.original.png\"},{\"title\":\"001-handen__hand05\",\"url\":\"http://localhost:14569/cdn.local.zender.tv/live/uploads/b8f99a0c-1383-4891-af7a-563b5903d390/2017-11-28/8d230974-526c-4145-9f5f-0ce3746565f3.original.png\",\"id\":\"/live/uploads/b8f99a0c-1383-4891-af7a-563b5903d390/2017-11-28/8d230974-526c-4145-9f5f-0ce3746565f3.original.png\"},{\"title\":\"001-handen__hand06\",\"url\":\"http://localhost:14569/cdn.local.zender.tv/live/uploads/b8f99a0c-1383-4891-af7a-563b5903d390/2017-11-28/570d557a-7104-46d9-b2cb-9bfa510e9f9f.original.png\",\"id\":\"/live/uploads/b8f99a0c-1383-4891-af7a-563b5903d390/2017-11-28/570d557a-7104-46d9-b2cb-9bfa510e9f9f.original.png\"}],\"icon\":{\"url\":\"http://localhost:14569/cdn.local.zender.tv/live/uploads/b8f99a0c-1383-4891-af7a-563b5903d390/2017-11-28/982cdc90-f7ea-403b-a7a3-9d01c318c082.original.png\",\"id\":\"/live/uploads/b8f99a0c-1383-4891-af7a-563b5903d390/2017-11-28/982cdc90-f7ea-403b-a7a3-9d01c318c082.original.png\"},\"id\":\"4775a542-bc43-4ce6-bf43-27a0fa7acc78\",\"title\":\"001-hands\"},{\"emojis\":[{\"title\":\"002-liefde__love01\",\"url\":\"http://localhost:14569/cdn.local.zender.tv/live/uploads/b8f99a0c-1383-4891-af7a-563b5903d390/2017-11-28/3e696aef-4e3b-458d-a9a4-1dd29e85577a.original.png\",\"id\":\"/live/uploads/b8f99a0c-1383-4891-af7a-563b5903d390/2017-11-28/3e696aef-4e3b-458d-a9a4-1dd29e85577a.original.png\"},{\"title\":\"002-liefde__love02\",\"url\":\"http://localhost:14569/cdn.local.zender.tv/live/uploads/b8f99a0c-1383-4891-af7a-563b5903d390/2017-11-28/f919a03a-2435-4fbf-9984-8a71c6b7e307.original.png\",\"id\":\"/live/uploads/b8f99a0c-1383-4891-af7a-563b5903d390/2017-11-28/f919a03a-2435-4fbf-9984-8a71c6b7e307.original.png\"},{\"title\":\"002-liefde__love03\",\"url\":\"http://localhost:14569/cdn.local.zender.tv/live/uploads/b8f99a0c-1383-4891-af7a-563b5903d390/2017-11-28/a37b4d26-db46-4adb-8db2-4bd65d7f02f8.original.png\",\"id\":\"/live/uploads/b8f99a0c-1383-4891-af7a-563b5903d390/2017-11-28/a37b4d26-db46-4adb-8db2-4bd65d7f02f8.original.png\"},{\"title\":\"002-liefde__love04\",\"url\":\"http://localhost:14569/cdn.local.zender.tv/live/uploads/b8f99a0c-1383-4891-af7a-563b5903d390/2017-11-28/26f85cc0-8e58-4913-9a05-815522767978.original.png\",\"id\":\"/live/uploads/b8f99a0c-1383-4891-af7a-563b5903d390/2017-11-28/26f85cc0-8e58-4913-9a05-815522767978.original.png\"},{\"title\":\"002-liefde__love05\",\"url\":\"http://localhost:14569/cdn.local.zender.tv/live/uploads/b8f99a0c-1383-4891-af7a-563b5903d390/2017-11-28/5f4210ac-277d-4acb-a802-602759429e77.original.png\",\"id\":\"/live/uploads/b8f99a0c-1383-4891-af7a-563b5903d390/2017-11-28/5f4210ac-277d-4acb-a802-602759429e77.original.png\"},{\"title\":\"002-liefde__love06\",\"url\":\"http://localhost:14569/cdn.local.zender.tv/live/uploads/b8f99a0c-1383-4891-af7a-563b5903d390/2017-11-28/56d0b698-8cc3-48d3-8646-c67f0810382b.original.png\",\"id\":\"/live/uploads/b8f99a0c-1383-4891-af7a-563b5903d390/2017-11-28/56d0b698-8cc3-48d3-8646-c67f0810382b.original.png\"}],\"icon\":{\"url\":\"http://localhost:14569/cdn.local.zender.tv/live/uploads/b8f99a0c-1383-4891-af7a-563b5903d390/2017-11-28/3e696aef-4e3b-458d-a9a4-1dd29e85577a.original.png\",\"id\":\"/live/uploads/b8f99a0c-1383-4891-af7a-563b5903d390/2017-11-28/3e696aef-4e3b-458d-a9a4-1dd29e85577a.original.png\"},\"id\":\"5b9dab91-f96d-4b60-a612-39a2ef567077\",\"title\":\"002-love\"},{\"emojis\":[{\"title\":\"003-dieren__a-bunny\",\"url\":\"http://localhost:14569/cdn.local.zender.tv/live/uploads/b8f99a0c-1383-4891-af7a-563b5903d390/2017-11-28/88531ca8-72b0-47c6-a75c-23c3ff80a2ab.original.png\",\"id\":\"/live/uploads/b8f99a0c-1383-4891-af7a-563b5903d390/2017-11-28/88531ca8-72b0-47c6-a75c-23c3ff80a2ab.original.png\"},{\"title\":\"003-dieren__a-cat01\",\"url\":\"http://localhost:14569/cdn.local.zender.tv/live/uploads/b8f99a0c-1383-4891-af7a-563b5903d390/2017-11-28/41a743c4-088a-411e-8bee-04a4d20015d3.original.png\",\"id\":\"/live/uploads/b8f99a0c-1383-4891-af7a-563b5903d390/2017-11-28/41a743c4-088a-411e-8bee-04a4d20015d3.original.png\"},{\"title\":\"003-dieren__a-cat02\",\"url\":\"http://localhost:14569/cdn.local.zender.tv/live/uploads/b8f99a0c-1383-4891-af7a-563b5903d390/2017-11-28/50c1d174-c7bb-463c-a125-e92f0403bb75.original.png\",\"id\":\"/live/uploads/b8f99a0c-1383-4891-af7a-563b5903d390/2017-11-28/50c1d174-c7bb-463c-a125-e92f0403bb75.original.png\"},{\"title\":\"003-dieren__a-cat03\",\"url\":\"http://localhost:14569/cdn.local.zender.tv/live/uploads/b8f99a0c-1383-4891-af7a-563b5903d390/2017-11-28/563693b5-9622-4814-96d6-18e60d3456fb.original.png\",\"id\":\"/live/uploads/b8f99a0c-1383-4891-af7a-563b5903d390/2017-11-28/563693b5-9622-4814-96d6-18e60d3456fb.original.png\"},{\"title\":\"003-dieren__a-cat04\",\"url\":\"http://localhost:14569/cdn.local.zender.tv/live/uploads/b8f99a0c-1383-4891-af7a-563b5903d390/2017-11-28/d4cb185e-b067-41f9-9e21-ed6014509e0d.original.png\",\"id\":\"/live/uploads/b8f99a0c-1383-4891-af7a-563b5903d390/2017-11-28/d4cb185e-b067-41f9-9e21-ed6014509e0d.original.png\"},{\"title\":\"003-dieren__a-chicken\",\"url\":\"http://localhost:14569/cdn.local.zender.tv/live/uploads/b8f99a0c-1383-4891-af7a-563b5903d390/2017-11-28/a4b73db4-e4be-4b45-b4fa-baf861833962.original.png\",\"id\":\"/live/uploads/b8f99a0c-1383-4891-af7a-563b5903d390/2017-11-28/a4b73db4-e4be-4b45-b4fa-baf861833962.original.png\"},{\"title\":\"003-dieren__a-chicken01\",\"url\":\"http://localhost:14569/cdn.local.zender.tv/live/uploads/b8f99a0c-1383-4891-af7a-563b5903d390/2017-11-28/ee6fac0b-80d3-45c3-89af-004624362bb9.original.png\",\"id\":\"/live/uploads/b8f99a0c-1383-4891-af7a-563b5903d390/2017-11-28/ee6fac0b-80d3-45c3-89af-004624362bb9.original.png\"},{\"title\":\"003-dieren__a-chicken02\",\"url\":\"http://localhost:14569/cdn.local.zender.tv/live/uploads/b8f99a0c-1383-4891-af7a-563b5903d390/2017-11-28/4905fdf7-f63c-4a94-9c30-0605516a74c0.original.png\",\"id\":\"/live/uploads/b8f99a0c-1383-4891-af7a-563b5903d390/2017-11-28/4905fdf7-f63c-4a94-9c30-0605516a74c0.original.png\"},{\"title\":\"003-dieren__a-cow\",\"url\":\"http://localhost:14569/cdn.local.zender.tv/live/uploads/b8f99a0c-1383-4891-af7a-563b5903d390/2017-11-28/772a1df7-13a2-48c2-a102-052f801417a0.original.png\",\"id\":\"/live/uploads/b8f99a0c-1383-4891-af7a-563b5903d390/2017-11-28/772a1df7-13a2-48c2-a102-052f801417a0.original.png\"},{\"title\":\"003-dieren__a-dog01\",\"url\":\"http://localhost:14569/cdn.local.zender.tv/live/uploads/b8f99a0c-1383-4891-af7a-563b5903d390/2017-11-28/61ae7dc8-0050-45b5-b2e4-7215b5f65a76.original.png\",\"id\":\"/live/uploads/b8f99a0c-1383-4891-af7a-563b5903d390/2017-11-28/61ae7dc8-0050-45b5-b2e4-7215b5f65a76.original.png\"},{\"title\":\"003-dieren__a-dog02\",\"url\":\"http://localhost:14569/cdn.local.zender.tv/live/uploads/b8f99a0c-1383-4891-af7a-563b5903d390/2017-11-28/301b1cf2-8b15-458f-8184-4db0ac6356a2.original.png\",\"id\":\"/live/uploads/b8f99a0c-1383-4891-af7a-563b5903d390/2017-11-28/301b1cf2-8b15-458f-8184-4db0ac6356a2.original.png\"},{\"title\":\"003-dieren__a-elephant\",\"url\":\"http://localhost:14569/cdn.local.zender.tv/live/uploads/b8f99a0c-1383-4891-af7a-563b5903d390/2017-11-28/79aa026f-b2d0-4c6c-b81e-cf02b93ef4f4.original.png\",\"id\":\"/live/uploads/b8f99a0c-1383-4891-af7a-563b5903d390/2017-11-28/79aa026f-b2d0-4c6c-b81e-cf02b93ef4f4.original.png\"},{\"title\":\"003-dieren__a-fish01\",\"url\":\"http://localhost:14569/cdn.local.zender.tv/live/uploads/b8f99a0c-1383-4891-af7a-563b5903d390/2017-11-28/24dfc278-43de-4cfa-af68-36e779d7427e.original.png\",\"id\":\"/live/uploads/b8f99a0c-1383-4891-af7a-563b5903d390/2017-11-28/24dfc278-43de-4cfa-af68-36e779d7427e.original.png\"},{\"title\":\"003-dieren__a-fish02\",\"url\":\"http://localhost:14569/cdn.local.zender.tv/live/uploads/b8f99a0c-1383-4891-af7a-563b5903d390/2017-11-28/a10e62a5-52c0-45b3-83f9-c84bf6ef2d7e.original.png\",\"id\":\"/live/uploads/b8f99a0c-1383-4891-af7a-563b5903d390/2017-11-28/a10e62a5-52c0-45b3-83f9-c84bf6ef2d7e.original.png\"},{\"title\":\"003-dieren__a-fish03\",\"url\":\"http://localhost:14569/cdn.local.zender.tv/live/uploads/b8f99a0c-1383-4891-af7a-563b5903d390/2017-11-28/06979857-0680-4382-8e04-bf315ba58dc0.original.png\",\"id\":\"/live/uploads/b8f99a0c-1383-4891-af7a-563b5903d390/2017-11-28/06979857-0680-4382-8e04-bf315ba58dc0.original.png\"},{\"title\":\"003-dieren__a-goat\",\"url\":\"http://localhost:14569/cdn.local.zender.tv/live/uploads/b8f99a0c-1383-4891-af7a-563b5903d390/2017-11-28/5b1b8b6c-963e-4ec4-b71a-bc28aee6f0f5.original.png\",\"id\":\"/live/uploads/b8f99a0c-1383-4891-af7a-563b5903d390/2017-11-28/5b1b8b6c-963e-4ec4-b71a-bc28aee6f0f5.original.png\"},{\"title\":\"003-dieren__a-haan\",\"url\":\"http://localhost:14569/cdn.local.zender.tv/live/uploads/b8f99a0c-1383-4891-af7a-563b5903d390/2017-11-28/28d1d695-a4d9-424e-9384-e994e64fe0d8.original.png\",\"id\":\"/live/uploads/b8f99a0c-1383-4891-af7a-563b5903d390/2017-11-28/28d1d695-a4d9-424e-9384-e994e64fe0d8.original.png\"},{\"title\":\"003-dieren__a-horse\",\"url\":\"http://localhost:14569/cdn.local.zender.tv/live/uploads/b8f99a0c-1383-4891-af7a-563b5903d390/2017-11-28/c459a11e-03f5-42c9-ba22-179637b5124d.original.png\",\"id\":\"/live/uploads/b8f99a0c-1383-4891-af7a-563b5903d390/2017-11-28/c459a11e-03f5-42c9-ba22-179637b5124d.original.png\"},{\"title\":\"003-dieren__a-koala\",\"url\":\"http://localhost:14569/cdn.local.zender.tv/live/uploads/b8f99a0c-1383-4891-af7a-563b5903d390/2017-11-28/763d2cff-9fa4-4804-ab92-b99731da5039.original.png\",\"id\":\"/live/uploads/b8f99a0c-1383-4891-af7a-563b5903d390/2017-11-28/763d2cff-9fa4-4804-ab92-b99731da5039.original.png\"},{\"title\":\"003-dieren__a-monkey01\",\"url\":\"http://localhost:14569/cdn.local.zender.tv/live/uploads/b8f99a0c-1383-4891-af7a-563b5903d390/2017-11-28/3f1331be-ed8e-43c0-a7dd-ff42f94a6a0e.original.png\",\"id\":\"/live/uploads/b8f99a0c-1383-4891-af7a-563b5903d390/2017-11-28/3f1331be-ed8e-43c0-a7dd-ff42f94a6a0e.original.png\"},{\"title\":\"003-dieren__a-monkey02\",\"url\":\"http://localhost:14569/cdn.local.zender.tv/live/uploads/b8f99a0c-1383-4891-af7a-563b5903d390/2017-11-28/ee6ccf85-0eed-4441-b3fd-6178941a9365.original.png\",\"id\":\"/live/uploads/b8f99a0c-1383-4891-af7a-563b5903d390/2017-11-28/ee6ccf85-0eed-4441-b3fd-6178941a9365.original.png\"},{\"title\":\"003-dieren__a-mouse\",\"url\":\"http://localhost:14569/cdn.local.zender.tv/live/uploads/b8f99a0c-1383-4891-af7a-563b5903d390/2017-11-28/4f827364-6363-416d-9575-594282fb9338.original.png\",\"id\":\"/live/uploads/b8f99a0c-1383-4891-af7a-563b5903d390/2017-11-28/4f827364-6363-416d-9575-594282fb9338.original.png\"},{\"title\":\"003-dieren__a-octopus\",\"url\":\"http://localhost:14569/cdn.local.zender.tv/live/uploads/b8f99a0c-1383-4891-af7a-563b5903d390/2017-11-28/54e24149-2b3d-4fdd-a1fb-8517cf8e04fd.original.png\",\"id\":\"/live/uploads/b8f99a0c-1383-4891-af7a-563b5903d390/2017-11-28/54e24149-2b3d-4fdd-a1fb-8517cf8e04fd.original.png\"},{\"title\":\"003-dieren__a-pig\",\"url\":\"http://localhost:14569/cdn.local.zender.tv/live/uploads/b8f99a0c-1383-4891-af7a-563b5903d390/2017-11-28/290ed713-27fa-4d4a-99c4-e44ff0ff56e6.original.png\",\"id\":\"/live/uploads/b8f99a0c-1383-4891-af7a-563b5903d390/2017-11-28/290ed713-27fa-4d4a-99c4-e44ff0ff56e6.original.png\"},{\"title\":\"003-dieren__a-pinguin\",\"url\":\"http://localhost:14569/cdn.local.zender.tv/live/uploads/b8f99a0c-1383-4891-af7a-563b5903d390/2017-11-28/943ebb59-02ea-4891-9cca-4e3709ac5d3a.original.png\",\"id\":\"/live/uploads/b8f99a0c-1383-4891-af7a-563b5903d390/2017-11-28/943ebb59-02ea-4891-9cca-4e3709ac5d3a.original.png\"},{\"title\":\"003-dieren__a-sheep\",\"url\":\"http://localhost:14569/cdn.local.zender.tv/live/uploads/b8f99a0c-1383-4891-af7a-563b5903d390/2017-11-28/1e524c0e-2d46-481c-a2d6-2bc0feb1aeb4.original.png\",\"id\":\"/live/uploads/b8f99a0c-1383-4891-af7a-563b5903d390/2017-11-28/1e524c0e-2d46-481c-a2d6-2bc0feb1aeb4.original.png\"},{\"title\":\"003-dieren__a-snake\",\"url\":\"http://localhost:14569/cdn.local.zender.tv/live/uploads/b8f99a0c-1383-4891-af7a-563b5903d390/2017-11-28/ed820265-88d8-4a2f-805a-9df637c5223c.original.png\",\"id\":\"/live/uploads/b8f99a0c-1383-4891-af7a-563b5903d390/2017-11-28/ed820265-88d8-4a2f-805a-9df637c5223c.original.png\"},{\"title\":\"003-dieren__a-spider\",\"url\":\"http://localhost:14569/cdn.local.zender.tv/live/uploads/b8f99a0c-1383-4891-af7a-563b5903d390/2017-11-28/2b8f570b-76b1-431e-ae87-553619fc5825.original.png\",\"id\":\"/live/uploads/b8f99a0c-1383-4891-af7a-563b5903d390/2017-11-28/2b8f570b-76b1-431e-ae87-553619fc5825.original.png\"},{\"title\":\"003-dieren__a-tiger01\",\"url\":\"http://localhost:14569/cdn.local.zender.tv/live/uploads/b8f99a0c-1383-4891-af7a-563b5903d390/2017-11-28/87ed9442-1d30-4f9f-ba8b-462bfc2cfba4.original.png\",\"id\":\"/live/uploads/b8f99a0c-1383-4891-af7a-563b5903d390/2017-11-28/87ed9442-1d30-4f9f-ba8b-462bfc2cfba4.original.png\"},{\"title\":\"003-dieren__a-tiger02\",\"url\":\"http://localhost:14569/cdn.local.zender.tv/live/uploads/b8f99a0c-1383-4891-af7a-563b5903d390/2017-11-28/46753813-1955-4a30-bd8e-e2a505566984.original.png\",\"id\":\"/live/uploads/b8f99a0c-1383-4891-af7a-563b5903d390/2017-11-28/46753813-1955-4a30-bd8e-e2a505566984.original.png\"},{\"title\":\"003-dieren__a-tiger03\",\"url\":\"http://localhost:14569/cdn.local.zender.tv/live/uploads/b8f99a0c-1383-4891-af7a-563b5903d390/2017-11-28/6a8f7904-9453-4ada-86c2-66f8863f6bf6.original.png\",\"id\":\"/live/uploads/b8f99a0c-1383-4891-af7a-563b5903d390/2017-11-28/6a8f7904-9453-4ada-86c2-66f8863f6bf6.original.png\"},{\"title\":\"003-dieren__a-turtle\",\"url\":\"http://localhost:14569/cdn.local.zender.tv/live/uploads/b8f99a0c-1383-4891-af7a-563b5903d390/2017-11-28/c7b3938d-2b55-493a-a1ba-6bd4839fea80.original.png\",\"id\":\"/live/uploads/b8f99a0c-1383-4891-af7a-563b5903d390/2017-11-28/c7b3938d-2b55-493a-a1ba-6bd4839fea80.original.png\"},{\"title\":\"003-dieren__a-whale\",\"url\":\"http://localhost:14569/cdn.local.zender.tv/live/uploads/b8f99a0c-1383-4891-af7a-563b5903d390/2017-11-28/d4699eef-794c-4c03-b512-fc57e4e4de24.original.png\",\"id\":\"/live/uploads/b8f99a0c-1383-4891-af7a-563b5903d390/2017-11-28/d4699eef-794c-4c03-b512-fc57e4e4de24.original.png\"},{\"title\":\"003-dieren__b-bear\",\"url\":\"http://localhost:14569/cdn.local.zender.tv/live/uploads/b8f99a0c-1383-4891-af7a-563b5903d390/2017-11-28/8bf07105-7934-432c-8668-938a274f3b41.original.png\",\"id\":\"/live/uploads/b8f99a0c-1383-4891-af7a-563b5903d390/2017-11-28/8bf07105-7934-432c-8668-938a274f3b41.original.png\"},{\"title\":\"003-dieren__b-bunny\",\"url\":\"http://localhost:14569/cdn.local.zender.tv/live/uploads/b8f99a0c-1383-4891-af7a-563b5903d390/2017-11-28/f3808edf-27a8-41eb-8848-342205e2b1ee.original.png\",\"id\":\"/live/uploads/b8f99a0c-1383-4891-af7a-563b5903d390/2017-11-28/f3808edf-27a8-41eb-8848-342205e2b1ee.original.png\"},{\"title\":\"003-dieren__b-camel\",\"url\":\"http://localhost:14569/cdn.local.zender.tv/live/uploads/b8f99a0c-1383-4891-af7a-563b5903d390/2017-11-28/fdb62c6a-980e-40a9-8cd1-342d998a56f2.original.png\",\"id\":\"/live/uploads/b8f99a0c-1383-4891-af7a-563b5903d390/2017-11-28/fdb62c6a-980e-40a9-8cd1-342d998a56f2.original.png\"},{\"title\":\"003-dieren__b-cat01\",\"url\":\"http://localhost:14569/cdn.local.zender.tv/live/uploads/b8f99a0c-1383-4891-af7a-563b5903d390/2017-11-28/328b4aab-7a65-430d-8115-5a6d4519e856.original.png\",\"id\":\"/live/uploads/b8f99a0c-1383-4891-af7a-563b5903d390/2017-11-28/328b4aab-7a65-430d-8115-5a6d4519e856.original.png\"},{\"title\":\"003-dieren__b-cat02\",\"url\":\"http://localhost:14569/cdn.local.zender.tv/live/uploads/b8f99a0c-1383-4891-af7a-563b5903d390/2017-11-28/6d75fb32-5bf0-4fa0-8330-92ea56bcb02e.original.png\",\"id\":\"/live/uploads/b8f99a0c-1383-4891-af7a-563b5903d390/2017-11-28/6d75fb32-5bf0-4fa0-8330-92ea56bcb02e.original.png\"},{\"title\":\"003-dieren__b-cat03\",\"url\":\"http://localhost:14569/cdn.local.zender.tv/live/uploads/b8f99a0c-1383-4891-af7a-563b5903d390/2017-11-28/f8758276-a914-45e7-a00b-25ffe3e00ebb.original.png\",\"id\":\"/live/uploads/b8f99a0c-1383-4891-af7a-563b5903d390/2017-11-28/f8758276-a914-45e7-a00b-25ffe3e00ebb.original.png\"},{\"title\":\"003-dieren__b-cat04\",\"url\":\"http://localhost:14569/cdn.local.zender.tv/live/uploads/b8f99a0c-1383-4891-af7a-563b5903d390/2017-11-28/d08d88c6-a571-4044-aa99-7210a363731c.original.png\",\"id\":\"/live/uploads/b8f99a0c-1383-4891-af7a-563b5903d390/2017-11-28/d08d88c6-a571-4044-aa99-7210a363731c.original.png\"},{\"title\":\"003-dieren__b-cat05\",\"url\":\"http://localhost:14569/cdn.local.zender.tv/live/uploads/b8f99a0c-1383-4891-af7a-563b5903d390/2017-11-28/6fc3bfa0-4a00-4dfb-a04c-d025b77ed82f.original.png\",\"id\":\"/live/uploads/b8f99a0c-1383-4891-af7a-563b5903d390/2017-11-28/6fc3bfa0-4a00-4dfb-a04c-d025b77ed82f.original.png\"},{\"title\":\"003-dieren__b-dog\",\"url\":\"http://localhost:14569/cdn.local.zender.tv/live/uploads/b8f99a0c-1383-4891-af7a-563b5903d390/2017-11-28/71d0172d-acca-4aae-9bb3-729941807156.original.png\",\"id\":\"/live/uploads/b8f99a0c-1383-4891-af7a-563b5903d390/2017-11-28/71d0172d-acca-4aae-9bb3-729941807156.original.png\"},{\"title\":\"003-dieren__b-dragon\",\"url\":\"http://localhost:14569/cdn.local.zender.tv/live/uploads/b8f99a0c-1383-4891-af7a-563b5903d390/2017-11-28/97a9e9fc-82ee-483b-8d32-328617f26070.original.png\",\"id\":\"/live/uploads/b8f99a0c-1383-4891-af7a-563b5903d390/2017-11-28/97a9e9fc-82ee-483b-8d32-328617f26070.original.png\"},{\"title\":\"003-dieren__b-frog\",\"url\":\"http://localhost:14569/cdn.local.zender.tv/live/uploads/b8f99a0c-1383-4891-af7a-563b5903d390/2017-11-28/0ecbacbf-7a0c-404c-9f7b-e6deef335145.original.png\",\"id\":\"/live/uploads/b8f99a0c-1383-4891-af7a-563b5903d390/2017-11-28/0ecbacbf-7a0c-404c-9f7b-e6deef335145.original.png\"},{\"title\":\"003-dieren__b-horse\",\"url\":\"http://localhost:14569/cdn.local.zender.tv/live/uploads/b8f99a0c-1383-4891-af7a-563b5903d390/2017-11-28/6b2393a6-9758-4a8f-8b86-6a1ae7b6638f.original.png\",\"id\":\"/live/uploads/b8f99a0c-1383-4891-af7a-563b5903d390/2017-11-28/6b2393a6-9758-4a8f-8b86-6a1ae7b6638f.original.png\"},{\"title\":\"003-dieren__b-lion01\",\"url\":\"http://localhost:14569/cdn.local.zender.tv/live/uploads/b8f99a0c-1383-4891-af7a-563b5903d390/2017-11-28/3f670f9c-259d-4be3-a2ae-3a2f74ba23e3.original.png\",\"id\":\"/live/uploads/b8f99a0c-1383-4891-af7a-563b5903d390/2017-11-28/3f670f9c-259d-4be3-a2ae-3a2f74ba23e3.original.png\"},{\"title\":\"003-dieren__b-lion02\",\"url\":\"http://localhost:14569/cdn.local.zender.tv/live/uploads/b8f99a0c-1383-4891-af7a-563b5903d390/2017-11-28/7ab109bb-fddf-4072-92df-951dd63c3b8e.original.png\",\"id\":\"/live/uploads/b8f99a0c-1383-4891-af7a-563b5903d390/2017-11-28/7ab109bb-fddf-4072-92df-951dd63c3b8e.original.png\"},{\"title\":\"003-dieren__b-monkey00\",\"url\":\"http://localhost:14569/cdn.local.zender.tv/live/uploads/b8f99a0c-1383-4891-af7a-563b5903d390/2017-11-28/e397833e-18fa-46fe-9287-88a7297e3553.original.png\",\"id\":\"/live/uploads/b8f99a0c-1383-4891-af7a-563b5903d390/2017-11-28/e397833e-18fa-46fe-9287-88a7297e3553.original.png\"},{\"title\":\"003-dieren__b-monkey01\",\"url\":\"http://localhost:14569/cdn.local.zender.tv/live/uploads/b8f99a0c-1383-4891-af7a-563b5903d390/2017-11-28/3638a162-64ad-44ce-b825-7a4625035e6f.original.png\",\"id\":\"/live/uploads/b8f99a0c-1383-4891-af7a-563b5903d390/2017-11-28/3638a162-64ad-44ce-b825-7a4625035e6f.original.png\"},{\"title\":\"003-dieren__b-monkey02a\",\"url\":\"http://localhost:14569/cdn.local.zender.tv/live/uploads/b8f99a0c-1383-4891-af7a-563b5903d390/2017-11-28/14977fd1-7ef3-4da8-adf7-fe26c861b739.original.png\",\"id\":\"/live/uploads/b8f99a0c-1383-4891-af7a-563b5903d390/2017-11-28/14977fd1-7ef3-4da8-adf7-fe26c861b739.original.png\"},{\"title\":\"003-dieren__b-monkey02b\",\"url\":\"http://localhost:14569/cdn.local.zender.tv/live/uploads/b8f99a0c-1383-4891-af7a-563b5903d390/2017-11-28/aad04fe4-7767-430e-8233-bf1a9c46b718.original.png\",\"id\":\"/live/uploads/b8f99a0c-1383-4891-af7a-563b5903d390/2017-11-28/aad04fe4-7767-430e-8233-bf1a9c46b718.original.png\"},{\"title\":\"003-dieren__b-monkey03\",\"url\":\"http://localhost:14569/cdn.local.zender.tv/live/uploads/b8f99a0c-1383-4891-af7a-563b5903d390/2017-11-28/e03b0c3f-b1d2-4a56-a781-61f51b014aed.original.png\",\"id\":\"/live/uploads/b8f99a0c-1383-4891-af7a-563b5903d390/2017-11-28/e03b0c3f-b1d2-4a56-a781-61f51b014aed.original.png\"},{\"title\":\"003-dieren__b-monkey04\",\"url\":\"http://localhost:14569/cdn.local.zender.tv/live/uploads/b8f99a0c-1383-4891-af7a-563b5903d390/2017-11-28/1859c504-0d13-4d3a-88f8-80c0b38e077c.original.png\",\"id\":\"/live/uploads/b8f99a0c-1383-4891-af7a-563b5903d390/2017-11-28/1859c504-0d13-4d3a-88f8-80c0b38e077c.original.png\"},{\"title\":\"003-dieren__b-monkey05\",\"url\":\"http://localhost:14569/cdn.local.zender.tv/live/uploads/b8f99a0c-1383-4891-af7a-563b5903d390/2017-11-28/7721d2fd-b76a-4e85-8ed2-523eb1370640.original.png\",\"id\":\"/live/uploads/b8f99a0c-1383-4891-af7a-563b5903d390/2017-11-28/7721d2fd-b76a-4e85-8ed2-523eb1370640.original.png\"},{\"title\":\"003-dieren__b-panda\",\"url\":\"http://localhost:14569/cdn.local.zender.tv/live/uploads/b8f99a0c-1383-4891-af7a-563b5903d390/2017-11-28/7aa7dc9c-d9af-4fc5-a707-e78e4afa8639.original.png\",\"id\":\"/live/uploads/b8f99a0c-1383-4891-af7a-563b5903d390/2017-11-28/7aa7dc9c-d9af-4fc5-a707-e78e4afa8639.original.png\"},{\"title\":\"003-dieren__b-pig00\",\"url\":\"http://localhost:14569/cdn.local.zender.tv/live/uploads/b8f99a0c-1383-4891-af7a-563b5903d390/2017-11-28/d58d6572-6314-4052-9eeb-185478c81c90.original.png\",\"id\":\"/live/uploads/b8f99a0c-1383-4891-af7a-563b5903d390/2017-11-28/d58d6572-6314-4052-9eeb-185478c81c90.original.png\"},{\"title\":\"003-dieren__b-pig01\",\"url\":\"http://localhost:14569/cdn.local.zender.tv/live/uploads/b8f99a0c-1383-4891-af7a-563b5903d390/2017-11-28/b012a02e-c8fd-45b4-b97f-3a36b0484691.original.png\",\"id\":\"/live/uploads/b8f99a0c-1383-4891-af7a-563b5903d390/2017-11-28/b012a02e-c8fd-45b4-b97f-3a36b0484691.original.png\"},{\"title\":\"003-dieren__b-pig02\",\"url\":\"http://localhost:14569/cdn.local.zender.tv/live/uploads/b8f99a0c-1383-4891-af7a-563b5903d390/2017-11-28/cad29c0f-5756-421a-bbf1-81470109d06f.original.png\",\"id\":\"/live/uploads/b8f99a0c-1383-4891-af7a-563b5903d390/2017-11-28/cad29c0f-5756-421a-bbf1-81470109d06f.original.png\"},{\"title\":\"003-dieren__b-tiger\",\"url\":\"http://localhost:14569/cdn.local.zender.tv/live/uploads/b8f99a0c-1383-4891-af7a-563b5903d390/2017-11-28/e2fd5c3a-e8b3-419a-b1d2-d5b322b5fe42.original.png\",\"id\":\"/live/uploads/b8f99a0c-1383-4891-af7a-563b5903d390/2017-11-28/e2fd5c3a-e8b3-419a-b1d2-d5b322b5fe42.original.png\"},{\"title\":\"003-dieren__b-unicorn01\",\"url\":\"http://localhost:14569/cdn.local.zender.tv/live/uploads/b8f99a0c-1383-4891-af7a-563b5903d390/2017-11-28/c7392b54-b9de-47b3-8099-72bd3d0b89c7.original.png\",\"id\":\"/live/uploads/b8f99a0c-1383-4891-af7a-563b5903d390/2017-11-28/c7392b54-b9de-47b3-8099-72bd3d0b89c7.original.png\"},{\"title\":\"003-dieren__b-unicorn02\",\"url\":\"http://localhost:14569/cdn.local.zender.tv/live/uploads/b8f99a0c-1383-4891-af7a-563b5903d390/2017-11-28/ce8c715d-f034-46ad-85d1-7483fb287f7a.original.png\",\"id\":\"/live/uploads/b8f99a0c-1383-4891-af7a-563b5903d390/2017-11-28/ce8c715d-f034-46ad-85d1-7483fb287f7a.original.png\"}],\"icon\":{\"url\":\"http://localhost:14569/cdn.local.zender.tv/live/uploads/b8f99a0c-1383-4891-af7a-563b5903d390/2017-11-28/88531ca8-72b0-47c6-a75c-23c3ff80a2ab.original.png\",\"id\":\"/live/uploads/b8f99a0c-1383-4891-af7a-563b5903d390/2017-11-28/88531ca8-72b0-47c6-a75c-23c3ff80a2ab.original.png\"},\"id\":\"ed93d548-63a7-4729-bec8-8fe9cbda2dd5\",\"title\":\"003-animals\"},{\"emojis\":[{\"title\":\"004-sport__s-ball\",\"url\":\"http://localhost:14569/cdn.local.zender.tv/live/uploads/b8f99a0c-1383-4891-af7a-563b5903d390/2017-11-28/e0841320-7014-4b0f-96dc-0dac8d678329.original.png\",\"id\":\"/live/uploads/b8f99a0c-1383-4891-af7a-563b5903d390/2017-11-28/e0841320-7014-4b0f-96dc-0dac8d678329.original.png\"},{\"title\":\"004-sport__s-bike\",\"url\":\"http://localhost:14569/cdn.local.zender.tv/live/uploads/b8f99a0c-1383-4891-af7a-563b5903d390/2017-11-28/8edbddf7-ac6e-40be-afcb-8b5285413c8f.original.png\",\"id\":\"/live/uploads/b8f99a0c-1383-4891-af7a-563b5903d390/2017-11-28/8edbddf7-ac6e-40be-afcb-8b5285413c8f.original.png\"},{\"title\":\"004-sport__basebal\",\"url\":\"http://localhost:14569/cdn.local.zender.tv/live/uploads/b8f99a0c-1383-4891-af7a-563b5903d390/2017-11-28/8594d919-21fa-40bc-9ee0-e7e3e8f7c8a8.original.png\",\"id\":\"/live/uploads/b8f99a0c-1383-4891-af7a-563b5903d390/2017-11-28/8594d919-21fa-40bc-9ee0-e7e3e8f7c8a8.original.png\"},{\"title\":\"004-sport__basketbal\",\"url\":\"http://localhost:14569/cdn.local.zender.tv/live/uploads/b8f99a0c-1383-4891-af7a-563b5903d390/2017-11-28/b6fb2fd0-f915-4c60-a890-fdffc1082479.original.png\",\"id\":\"/live/uploads/b8f99a0c-1383-4891-af7a-563b5903d390/2017-11-28/b6fb2fd0-f915-4c60-a890-fdffc1082479.original.png\"},{\"title\":\"004-sport__fiets\",\"url\":\"http://localhost:14569/cdn.local.zender.tv/live/uploads/b8f99a0c-1383-4891-af7a-563b5903d390/2017-11-28/58bc95a9-81e6-4cab-ada3-0314cd3b73f8.original.png\",\"id\":\"/live/uploads/b8f99a0c-1383-4891-af7a-563b5903d390/2017-11-28/58bc95a9-81e6-4cab-ada3-0314cd3b73f8.original.png\"},{\"title\":\"004-sport__golfbal\",\"url\":\"http://localhost:14569/cdn.local.zender.tv/live/uploads/b8f99a0c-1383-4891-af7a-563b5903d390/2017-11-28/98c6746f-b21d-40b7-8b34-04996126e75e.original.png\",\"id\":\"/live/uploads/b8f99a0c-1383-4891-af7a-563b5903d390/2017-11-28/98c6746f-b21d-40b7-8b34-04996126e75e.original.png\"},{\"title\":\"004-sport__pingpong\",\"url\":\"http://localhost:14569/cdn.local.zender.tv/live/uploads/b8f99a0c-1383-4891-af7a-563b5903d390/2017-11-28/0cb4030e-abbf-462b-b5f9-b872479cf443.original.png\",\"id\":\"/live/uploads/b8f99a0c-1383-4891-af7a-563b5903d390/2017-11-28/0cb4030e-abbf-462b-b5f9-b872479cf443.original.png\"},{\"title\":\"004-sport__rugbybal\",\"url\":\"http://localhost:14569/cdn.local.zender.tv/live/uploads/b8f99a0c-1383-4891-af7a-563b5903d390/2017-11-28/f373b4af-a33a-4973-a9b3-c353c460f5c3.original.png\",\"id\":\"/live/uploads/b8f99a0c-1383-4891-af7a-563b5903d390/2017-11-28/f373b4af-a33a-4973-a9b3-c353c460f5c3.original.png\"},{\"title\":\"004-sport__ski2\",\"url\":\"http://localhost:14569/cdn.local.zender.tv/live/uploads/b8f99a0c-1383-4891-af7a-563b5903d390/2017-11-28/f9bf13e0-f9c9-4eaa-b5ed-21b0e821d628.original.png\",\"id\":\"/live/uploads/b8f99a0c-1383-4891-af7a-563b5903d390/2017-11-28/f9bf13e0-f9c9-4eaa-b5ed-21b0e821d628.original.png\"},{\"title\":\"004-sport__surf\",\"url\":\"http://localhost:14569/cdn.local.zender.tv/live/uploads/b8f99a0c-1383-4891-af7a-563b5903d390/2017-11-28/964d2832-26c5-461b-89b5-895a34cabbe6.original.png\",\"id\":\"/live/uploads/b8f99a0c-1383-4891-af7a-563b5903d390/2017-11-28/964d2832-26c5-461b-89b5-895a34cabbe6.original.png\"},{\"title\":\"004-sport__surf2\",\"url\":\"http://localhost:14569/cdn.local.zender.tv/live/uploads/b8f99a0c-1383-4891-af7a-563b5903d390/2017-11-28/f4d56135-af8e-4446-88aa-ae59a0a846c6.original.png\",\"id\":\"/live/uploads/b8f99a0c-1383-4891-af7a-563b5903d390/2017-11-28/f4d56135-af8e-4446-88aa-ae59a0a846c6.original.png\"},{\"title\":\"004-sport__tennisbal\",\"url\":\"http://localhost:14569/cdn.local.zender.tv/live/uploads/b8f99a0c-1383-4891-af7a-563b5903d390/2017-11-28/987d677f-d3e9-477f-8339-6ace4c8ab5a7.original.png\",\"id\":\"/live/uploads/b8f99a0c-1383-4891-af7a-563b5903d390/2017-11-28/987d677f-d3e9-477f-8339-6ace4c8ab5a7.original.png\"},{\"title\":\"004-sport__tennisracket2\",\"url\":\"http://localhost:14569/cdn.local.zender.tv/live/uploads/b8f99a0c-1383-4891-af7a-563b5903d390/2017-11-28/553e75f2-2ab0-45be-af21-a46c2e832f46.original.png\",\"id\":\"/live/uploads/b8f99a0c-1383-4891-af7a-563b5903d390/2017-11-28/553e75f2-2ab0-45be-af21-a46c2e832f46.original.png\"},{\"title\":\"004-sport__volleybal\",\"url\":\"http://localhost:14569/cdn.local.zender.tv/live/uploads/b8f99a0c-1383-4891-af7a-563b5903d390/2017-11-28/03c5fed0-acf9-4f2c-bc62-f3d173ecd6fc.original.png\",\"id\":\"/live/uploads/b8f99a0c-1383-4891-af7a-563b5903d390/2017-11-28/03c5fed0-acf9-4f2c-bc62-f3d173ecd6fc.original.png\"}],\"icon\":{\"url\":\"http://localhost:14569/cdn.local.zender.tv/live/uploads/b8f99a0c-1383-4891-af7a-563b5903d390/2017-11-28/e0841320-7014-4b0f-96dc-0dac8d678329.original.png\",\"id\":\"/live/uploads/b8f99a0c-1383-4891-af7a-563b5903d390/2017-11-28/e0841320-7014-4b0f-96dc-0dac8d678329.original.png\"},\"id\":\"30ae1d2f-dbec-4069-93cc-0bc4352d25eb\",\"title\":\"004-sport\"},{\"emojis\":[{\"title\":\"005-objecten__a-food01\",\"url\":\"http://localhost:14569/cdn.local.zender.tv/live/uploads/b8f99a0c-1383-4891-af7a-563b5903d390/2017-11-28/d2312d6f-2ddb-470f-b2f3-383d067439ff.original.png\",\"id\":\"/live/uploads/b8f99a0c-1383-4891-af7a-563b5903d390/2017-11-28/d2312d6f-2ddb-470f-b2f3-383d067439ff.original.png\"},{\"title\":\"005-objecten__a-food02\",\"url\":\"http://localhost:14569/cdn.local.zender.tv/live/uploads/b8f99a0c-1383-4891-af7a-563b5903d390/2017-11-28/6f53bf58-dbb1-49a5-b42d-5a7126fe5e25.original.png\",\"id\":\"/live/uploads/b8f99a0c-1383-4891-af7a-563b5903d390/2017-11-28/6f53bf58-dbb1-49a5-b42d-5a7126fe5e25.original.png\"},{\"title\":\"005-objecten__a-food03\",\"url\":\"http://localhost:14569/cdn.local.zender.tv/live/uploads/b8f99a0c-1383-4891-af7a-563b5903d390/2017-11-28/5b44cebb-8f7f-48d2-8cc3-90549f8d0564.original.png\",\"id\":\"/live/uploads/b8f99a0c-1383-4891-af7a-563b5903d390/2017-11-28/5b44cebb-8f7f-48d2-8cc3-90549f8d0564.original.png\"},{\"title\":\"005-objecten__a-food04\",\"url\":\"http://localhost:14569/cdn.local.zender.tv/live/uploads/b8f99a0c-1383-4891-af7a-563b5903d390/2017-11-28/8915ffb9-ea83-4f76-a39a-9fd561326d8c.original.png\",\"id\":\"/live/uploads/b8f99a0c-1383-4891-af7a-563b5903d390/2017-11-28/8915ffb9-ea83-4f76-a39a-9fd561326d8c.original.png\"},{\"title\":\"005-objecten__a-food05\",\"url\":\"http://localhost:14569/cdn.local.zender.tv/live/uploads/b8f99a0c-1383-4891-af7a-563b5903d390/2017-11-28/2d88ca38-8fba-4c0b-9a26-c921e0733292.original.png\",\"id\":\"/live/uploads/b8f99a0c-1383-4891-af7a-563b5903d390/2017-11-28/2d88ca38-8fba-4c0b-9a26-c921e0733292.original.png\"},{\"title\":\"005-objecten__a-food06\",\"url\":\"http://localhost:14569/cdn.local.zender.tv/live/uploads/b8f99a0c-1383-4891-af7a-563b5903d390/2017-11-28/40c05b12-fe63-4d98-af02-2fa048406f09.original.png\",\"id\":\"/live/uploads/b8f99a0c-1383-4891-af7a-563b5903d390/2017-11-28/40c05b12-fe63-4d98-af02-2fa048406f09.original.png\"},{\"title\":\"005-objecten__a-food07\",\"url\":\"http://localhost:14569/cdn.local.zender.tv/live/uploads/b8f99a0c-1383-4891-af7a-563b5903d390/2017-11-28/d531d754-1212-46b1-b2c1-3e0369201b9c.original.png\",\"id\":\"/live/uploads/b8f99a0c-1383-4891-af7a-563b5903d390/2017-11-28/d531d754-1212-46b1-b2c1-3e0369201b9c.original.png\"},{\"title\":\"005-objecten__a-food08\",\"url\":\"http://localhost:14569/cdn.local.zender.tv/live/uploads/b8f99a0c-1383-4891-af7a-563b5903d390/2017-11-28/74084913-a3cd-4301-8cc8-7f370aee07e4.original.png\",\"id\":\"/live/uploads/b8f99a0c-1383-4891-af7a-563b5903d390/2017-11-28/74084913-a3cd-4301-8cc8-7f370aee07e4.original.png\"},{\"title\":\"005-objecten__a-food10\",\"url\":\"http://localhost:14569/cdn.local.zender.tv/live/uploads/b8f99a0c-1383-4891-af7a-563b5903d390/2017-11-28/ca0bbc93-b629-4f38-97db-a4725e81967b.original.png\",\"id\":\"/live/uploads/b8f99a0c-1383-4891-af7a-563b5903d390/2017-11-28/ca0bbc93-b629-4f38-97db-a4725e81967b.original.png\"},{\"title\":\"005-objecten__a-food11\",\"url\":\"http://localhost:14569/cdn.local.zender.tv/live/uploads/b8f99a0c-1383-4891-af7a-563b5903d390/2017-11-28/abd73306-5d8c-4ad5-9fe0-1c7b69cf33d1.original.png\",\"id\":\"/live/uploads/b8f99a0c-1383-4891-af7a-563b5903d390/2017-11-28/abd73306-5d8c-4ad5-9fe0-1c7b69cf33d1.original.png\"},{\"title\":\"005-objecten__a-food12\",\"url\":\"http://localhost:14569/cdn.local.zender.tv/live/uploads/b8f99a0c-1383-4891-af7a-563b5903d390/2017-11-28/d54cb87b-61b4-4d26-8c1c-5088cc56d263.original.png\",\"id\":\"/live/uploads/b8f99a0c-1383-4891-af7a-563b5903d390/2017-11-28/d54cb87b-61b4-4d26-8c1c-5088cc56d263.original.png\"},{\"title\":\"005-objecten__a-food13\",\"url\":\"http://localhost:14569/cdn.local.zender.tv/live/uploads/b8f99a0c-1383-4891-af7a-563b5903d390/2017-11-28/078c4e40-91f2-4485-8c8b-509a0e4bdc24.original.png\",\"id\":\"/live/uploads/b8f99a0c-1383-4891-af7a-563b5903d390/2017-11-28/078c4e40-91f2-4485-8c8b-509a0e4bdc24.original.png\"},{\"title\":\"005-objecten__a-food14\",\"url\":\"http://localhost:14569/cdn.local.zender.tv/live/uploads/b8f99a0c-1383-4891-af7a-563b5903d390/2017-11-28/16bc05bf-58e5-4dab-a8a5-d5fe1670c001.original.png\",\"id\":\"/live/uploads/b8f99a0c-1383-4891-af7a-563b5903d390/2017-11-28/16bc05bf-58e5-4dab-a8a5-d5fe1670c001.original.png\"},{\"title\":\"005-objecten__a-food15\",\"url\":\"http://localhost:14569/cdn.local.zender.tv/live/uploads/b8f99a0c-1383-4891-af7a-563b5903d390/2017-11-28/9002359a-8a9a-4158-879a-6415b75a4e29.original.png\",\"id\":\"/live/uploads/b8f99a0c-1383-4891-af7a-563b5903d390/2017-11-28/9002359a-8a9a-4158-879a-6415b75a4e29.original.png\"},{\"title\":\"005-objecten__a-food16\",\"url\":\"http://localhost:14569/cdn.local.zender.tv/live/uploads/b8f99a0c-1383-4891-af7a-563b5903d390/2017-11-28/a58c46e6-54dc-4680-85cb-dd312e75a05b.original.png\",\"id\":\"/live/uploads/b8f99a0c-1383-4891-af7a-563b5903d390/2017-11-28/a58c46e6-54dc-4680-85cb-dd312e75a05b.original.png\"},{\"title\":\"005-objecten__b-nature01\",\"url\":\"http://localhost:14569/cdn.local.zender.tv/live/uploads/b8f99a0c-1383-4891-af7a-563b5903d390/2017-11-28/11510420-0f57-4163-b90c-3900cfe15971.original.png\",\"id\":\"/live/uploads/b8f99a0c-1383-4891-af7a-563b5903d390/2017-11-28/11510420-0f57-4163-b90c-3900cfe15971.original.png\"},{\"title\":\"005-objecten__b-nature02\",\"url\":\"http://localhost:14569/cdn.local.zender.tv/live/uploads/b8f99a0c-1383-4891-af7a-563b5903d390/2017-11-28/1d40ef20-4a95-4abb-a6da-7de44790c79c.original.png\",\"id\":\"/live/uploads/b8f99a0c-1383-4891-af7a-563b5903d390/2017-11-28/1d40ef20-4a95-4abb-a6da-7de44790c79c.original.png\"},{\"title\":\"005-objecten__b-nature03\",\"url\":\"http://localhost:14569/cdn.local.zender.tv/live/uploads/b8f99a0c-1383-4891-af7a-563b5903d390/2017-11-28/2866dd9e-bda1-4ee5-bacf-4570d45c7cf4.original.png\",\"id\":\"/live/uploads/b8f99a0c-1383-4891-af7a-563b5903d390/2017-11-28/2866dd9e-bda1-4ee5-bacf-4570d45c7cf4.original.png\"},{\"title\":\"005-objecten__b-nature04\",\"url\":\"http://localhost:14569/cdn.local.zender.tv/live/uploads/b8f99a0c-1383-4891-af7a-563b5903d390/2017-11-28/5500a785-29aa-4839-b779-719b16eb87f3.original.png\",\"id\":\"/live/uploads/b8f99a0c-1383-4891-af7a-563b5903d390/2017-11-28/5500a785-29aa-4839-b779-719b16eb87f3.original.png\"},{\"title\":\"005-objecten__b-nature05\",\"url\":\"http://localhost:14569/cdn.local.zender.tv/live/uploads/b8f99a0c-1383-4891-af7a-563b5903d390/2017-11-28/73ca314c-58ce-4440-86e3-c589321528df.original.png\",\"id\":\"/live/uploads/b8f99a0c-1383-4891-af7a-563b5903d390/2017-11-28/73ca314c-58ce-4440-86e3-c589321528df.original.png\"},{\"title\":\"005-objecten__b-nature06\",\"url\":\"http://localhost:14569/cdn.local.zender.tv/live/uploads/b8f99a0c-1383-4891-af7a-563b5903d390/2017-11-28/31e2efbf-bdfc-4d48-bfa4-b6d1aade6d75.original.png\",\"id\":\"/live/uploads/b8f99a0c-1383-4891-af7a-563b5903d390/2017-11-28/31e2efbf-bdfc-4d48-bfa4-b6d1aade6d75.original.png\"},{\"title\":\"005-objecten__b-nature07\",\"url\":\"http://localhost:14569/cdn.local.zender.tv/live/uploads/b8f99a0c-1383-4891-af7a-563b5903d390/2017-11-28/427be1c9-4c3f-447d-88ee-189503b40d9b.original.png\",\"id\":\"/live/uploads/b8f99a0c-1383-4891-af7a-563b5903d390/2017-11-28/427be1c9-4c3f-447d-88ee-189503b40d9b.original.png\"},{\"title\":\"005-objecten__c-congrats01\",\"url\":\"http://localhost:14569/cdn.local.zender.tv/live/uploads/b8f99a0c-1383-4891-af7a-563b5903d390/2017-11-28/fbbcb3be-7d8e-49e9-9512-bd3c4b6ce28a.original.png\",\"id\":\"/live/uploads/b8f99a0c-1383-4891-af7a-563b5903d390/2017-11-28/fbbcb3be-7d8e-49e9-9512-bd3c4b6ce28a.original.png\"},{\"title\":\"005-objecten__c-congrats02\",\"url\":\"http://localhost:14569/cdn.local.zender.tv/live/uploads/b8f99a0c-1383-4891-af7a-563b5903d390/2017-11-28/0ae91d16-1c7b-4c9f-94c3-fe4b70b0accb.original.png\",\"id\":\"/live/uploads/b8f99a0c-1383-4891-af7a-563b5903d390/2017-11-28/0ae91d16-1c7b-4c9f-94c3-fe4b70b0accb.original.png\"},{\"title\":\"005-objecten__c-congrats03\",\"url\":\"http://localhost:14569/cdn.local.zender.tv/live/uploads/b8f99a0c-1383-4891-af7a-563b5903d390/2017-11-28/0e914c23-8118-4305-a557-dbf6164f3a10.original.png\",\"id\":\"/live/uploads/b8f99a0c-1383-4891-af7a-563b5903d390/2017-11-28/0e914c23-8118-4305-a557-dbf6164f3a10.original.png\"},{\"title\":\"005-objecten__c-congrats04\",\"url\":\"http://localhost:14569/cdn.local.zender.tv/live/uploads/b8f99a0c-1383-4891-af7a-563b5903d390/2017-11-28/bf5ea5d1-202f-4545-87d3-cf8e0aef26fa.original.png\",\"id\":\"/live/uploads/b8f99a0c-1383-4891-af7a-563b5903d390/2017-11-28/bf5ea5d1-202f-4545-87d3-cf8e0aef26fa.original.png\"},{\"title\":\"005-objecten__c-congrats05\",\"url\":\"http://localhost:14569/cdn.local.zender.tv/live/uploads/b8f99a0c-1383-4891-af7a-563b5903d390/2017-11-28/c2fbc666-5a66-4128-9485-a228e80e1bf3.original.png\",\"id\":\"/live/uploads/b8f99a0c-1383-4891-af7a-563b5903d390/2017-11-28/c2fbc666-5a66-4128-9485-a228e80e1bf3.original.png\"},{\"title\":\"005-objecten__c-congrats06\",\"url\":\"http://localhost:14569/cdn.local.zender.tv/live/uploads/b8f99a0c-1383-4891-af7a-563b5903d390/2017-11-28/09d65b0b-e11a-4f1f-bb48-8354c4079ced.original.png\",\"id\":\"/live/uploads/b8f99a0c-1383-4891-af7a-563b5903d390/2017-11-28/09d65b0b-e11a-4f1f-bb48-8354c4079ced.original.png\"},{\"title\":\"005-objecten__c-congrats07\",\"url\":\"http://localhost:14569/cdn.local.zender.tv/live/uploads/b8f99a0c-1383-4891-af7a-563b5903d390/2017-11-28/aa65ee34-f4dd-49e9-bb01-12bf2ac969ce.original.png\",\"id\":\"/live/uploads/b8f99a0c-1383-4891-af7a-563b5903d390/2017-11-28/aa65ee34-f4dd-49e9-bb01-12bf2ac969ce.original.png\"},{\"title\":\"005-objecten__d-music01\",\"url\":\"http://localhost:14569/cdn.local.zender.tv/live/uploads/b8f99a0c-1383-4891-af7a-563b5903d390/2017-11-28/dd22bce7-ac8e-44c6-8451-730325771816.original.png\",\"id\":\"/live/uploads/b8f99a0c-1383-4891-af7a-563b5903d390/2017-11-28/dd22bce7-ac8e-44c6-8451-730325771816.original.png\"},{\"title\":\"005-objecten__d-music02\",\"url\":\"http://localhost:14569/cdn.local.zender.tv/live/uploads/b8f99a0c-1383-4891-af7a-563b5903d390/2017-11-28/20a751c7-4046-4c4e-ac1a-5596183e3f77.original.png\",\"id\":\"/live/uploads/b8f99a0c-1383-4891-af7a-563b5903d390/2017-11-28/20a751c7-4046-4c4e-ac1a-5596183e3f77.original.png\"},{\"title\":\"005-objecten__d-music03\",\"url\":\"http://localhost:14569/cdn.local.zender.tv/live/uploads/b8f99a0c-1383-4891-af7a-563b5903d390/2017-11-28/fb61a704-d936-4988-844d-b7eacf793958.original.png\",\"id\":\"/live/uploads/b8f99a0c-1383-4891-af7a-563b5903d390/2017-11-28/fb61a704-d936-4988-844d-b7eacf793958.original.png\"},{\"title\":\"005-objecten__d-music04\",\"url\":\"http://localhost:14569/cdn.local.zender.tv/live/uploads/b8f99a0c-1383-4891-af7a-563b5903d390/2017-11-28/ccfe59a3-03bc-4cec-8ec0-528bf4c9c3a5.original.png\",\"id\":\"/live/uploads/b8f99a0c-1383-4891-af7a-563b5903d390/2017-11-28/ccfe59a3-03bc-4cec-8ec0-528bf4c9c3a5.original.png\"},{\"title\":\"005-objecten__e-text01\",\"url\":\"http://localhost:14569/cdn.local.zender.tv/live/uploads/b8f99a0c-1383-4891-af7a-563b5903d390/2017-11-28/1fd3af46-8881-45e7-8abe-4a9c286b35e2.original.png\",\"id\":\"/live/uploads/b8f99a0c-1383-4891-af7a-563b5903d390/2017-11-28/1fd3af46-8881-45e7-8abe-4a9c286b35e2.original.png\"},{\"title\":\"005-objecten__e-text02\",\"url\":\"http://localhost:14569/cdn.local.zender.tv/live/uploads/b8f99a0c-1383-4891-af7a-563b5903d390/2017-11-28/f6907fca-870c-46b7-af48-6778c0e3662b.original.png\",\"id\":\"/live/uploads/b8f99a0c-1383-4891-af7a-563b5903d390/2017-11-28/f6907fca-870c-46b7-af48-6778c0e3662b.original.png\"},{\"title\":\"005-objecten__e-text03\",\"url\":\"http://localhost:14569/cdn.local.zender.tv/live/uploads/b8f99a0c-1383-4891-af7a-563b5903d390/2017-11-28/84e0168e-9904-470b-8aee-e5e45754af09.original.png\",\"id\":\"/live/uploads/b8f99a0c-1383-4891-af7a-563b5903d390/2017-11-28/84e0168e-9904-470b-8aee-e5e45754af09.original.png\"},{\"title\":\"005-objecten__e-text04\",\"url\":\"http://localhost:14569/cdn.local.zender.tv/live/uploads/b8f99a0c-1383-4891-af7a-563b5903d390/2017-11-28/7e44089b-55f9-4efb-94b7-dea20025960a.original.png\",\"id\":\"/live/uploads/b8f99a0c-1383-4891-af7a-563b5903d390/2017-11-28/7e44089b-55f9-4efb-94b7-dea20025960a.original.png\"},{\"title\":\"005-objecten__e-text05\",\"url\":\"http://localhost:14569/cdn.local.zender.tv/live/uploads/b8f99a0c-1383-4891-af7a-563b5903d390/2017-11-28/8965159e-d1ec-4d80-8dad-a05439e04deb.original.png\",\"id\":\"/live/uploads/b8f99a0c-1383-4891-af7a-563b5903d390/2017-11-28/8965159e-d1ec-4d80-8dad-a05439e04deb.original.png\"},{\"title\":\"005-objecten__e-text06\",\"url\":\"http://localhost:14569/cdn.local.zender.tv/live/uploads/b8f99a0c-1383-4891-af7a-563b5903d390/2017-11-28/b97941d4-095d-432a-83f5-68de1a49f8b4.original.png\",\"id\":\"/live/uploads/b8f99a0c-1383-4891-af7a-563b5903d390/2017-11-28/b97941d4-095d-432a-83f5-68de1a49f8b4.original.png\"},{\"title\":\"005-objecten__f-transport01\",\"url\":\"http://localhost:14569/cdn.local.zender.tv/live/uploads/b8f99a0c-1383-4891-af7a-563b5903d390/2017-11-28/d96a1b9c-605d-422a-a6e2-cd51df9d392e.original.png\",\"id\":\"/live/uploads/b8f99a0c-1383-4891-af7a-563b5903d390/2017-11-28/d96a1b9c-605d-422a-a6e2-cd51df9d392e.original.png\"},{\"title\":\"005-objecten__f-transport02\",\"url\":\"http://localhost:14569/cdn.local.zender.tv/live/uploads/b8f99a0c-1383-4891-af7a-563b5903d390/2017-11-28/b3366ac4-51e6-44c2-a51a-29f1d0979e0a.original.png\",\"id\":\"/live/uploads/b8f99a0c-1383-4891-af7a-563b5903d390/2017-11-28/b3366ac4-51e6-44c2-a51a-29f1d0979e0a.original.png\"},{\"title\":\"005-objecten__f-transport03\",\"url\":\"http://localhost:14569/cdn.local.zender.tv/live/uploads/b8f99a0c-1383-4891-af7a-563b5903d390/2017-11-28/fd089265-5a5c-4428-8381-4e877de135f8.original.png\",\"id\":\"/live/uploads/b8f99a0c-1383-4891-af7a-563b5903d390/2017-11-28/fd089265-5a5c-4428-8381-4e877de135f8.original.png\"},{\"title\":\"005-objecten__f-transport04\",\"url\":\"http://localhost:14569/cdn.local.zender.tv/live/uploads/b8f99a0c-1383-4891-af7a-563b5903d390/2017-11-28/4f8bb73a-5a47-42a0-b11e-79a44278db7a.original.png\",\"id\":\"/live/uploads/b8f99a0c-1383-4891-af7a-563b5903d390/2017-11-28/4f8bb73a-5a47-42a0-b11e-79a44278db7a.original.png\"},{\"title\":\"005-objecten__g-clothing01\",\"url\":\"http://localhost:14569/cdn.local.zender.tv/live/uploads/b8f99a0c-1383-4891-af7a-563b5903d390/2017-11-28/2daace3e-dee0-4d1f-9acb-7e558c1cc751.original.png\",\"id\":\"/live/uploads/b8f99a0c-1383-4891-af7a-563b5903d390/2017-11-28/2daace3e-dee0-4d1f-9acb-7e558c1cc751.original.png\"},{\"title\":\"005-objecten__g-clothing02\",\"url\":\"http://localhost:14569/cdn.local.zender.tv/live/uploads/b8f99a0c-1383-4891-af7a-563b5903d390/2017-11-28/7f05379b-476f-482f-a459-931b2f426f50.original.png\",\"id\":\"/live/uploads/b8f99a0c-1383-4891-af7a-563b5903d390/2017-11-28/7f05379b-476f-482f-a459-931b2f426f50.original.png\"},{\"title\":\"005-objecten__g-clothing03\",\"url\":\"http://localhost:14569/cdn.local.zender.tv/live/uploads/b8f99a0c-1383-4891-af7a-563b5903d390/2017-11-28/3f888d90-3d99-4157-9b7c-26c222a70e80.original.png\",\"id\":\"/live/uploads/b8f99a0c-1383-4891-af7a-563b5903d390/2017-11-28/3f888d90-3d99-4157-9b7c-26c222a70e80.original.png\"},{\"title\":\"005-objecten__g-clothing04\",\"url\":\"http://localhost:14569/cdn.local.zender.tv/live/uploads/b8f99a0c-1383-4891-af7a-563b5903d390/2017-11-28/9a868692-2eec-406d-ab0d-7fc4ddeeb3d8.original.png\",\"id\":\"/live/uploads/b8f99a0c-1383-4891-af7a-563b5903d390/2017-11-28/9a868692-2eec-406d-ab0d-7fc4ddeeb3d8.original.png\"},{\"title\":\"005-objecten__g-clothing05\",\"url\":\"http://localhost:14569/cdn.local.zender.tv/live/uploads/b8f99a0c-1383-4891-af7a-563b5903d390/2017-11-28/df77ea4b-7fbd-4ad9-befd-11e08fa91a72.original.png\",\"id\":\"/live/uploads/b8f99a0c-1383-4891-af7a-563b5903d390/2017-11-28/df77ea4b-7fbd-4ad9-befd-11e08fa91a72.original.png\"},{\"title\":\"005-objecten__g-clothing06\",\"url\":\"http://localhost:14569/cdn.local.zender.tv/live/uploads/b8f99a0c-1383-4891-af7a-563b5903d390/2017-11-28/a4cc85bb-6c26-4197-bf92-8fddfcb6d657.original.png\",\"id\":\"/live/uploads/b8f99a0c-1383-4891-af7a-563b5903d390/2017-11-28/a4cc85bb-6c26-4197-bf92-8fddfcb6d657.original.png\"},{\"title\":\"005-objecten__h-clothing07\",\"url\":\"http://localhost:14569/cdn.local.zender.tv/live/uploads/b8f99a0c-1383-4891-af7a-563b5903d390/2017-11-28/d4e0e955-1c92-449d-812a-04425800d759.original.png\",\"id\":\"/live/uploads/b8f99a0c-1383-4891-af7a-563b5903d390/2017-11-28/d4e0e955-1c92-449d-812a-04425800d759.original.png\"},{\"title\":\"005-objecten__h-divers01\",\"url\":\"http://localhost:14569/cdn.local.zender.tv/live/uploads/b8f99a0c-1383-4891-af7a-563b5903d390/2017-11-28/a9bc5a11-0980-44d2-b7bd-333309f4285c.original.png\",\"id\":\"/live/uploads/b8f99a0c-1383-4891-af7a-563b5903d390/2017-11-28/a9bc5a11-0980-44d2-b7bd-333309f4285c.original.png\"},{\"title\":\"005-objecten__h-divers02\",\"url\":\"http://localhost:14569/cdn.local.zender.tv/live/uploads/b8f99a0c-1383-4891-af7a-563b5903d390/2017-11-28/26a571b9-618a-42b9-a0d8-cb02d5989540.original.png\",\"id\":\"/live/uploads/b8f99a0c-1383-4891-af7a-563b5903d390/2017-11-28/26a571b9-618a-42b9-a0d8-cb02d5989540.original.png\"},{\"title\":\"005-objecten__h-divers03\",\"url\":\"http://localhost:14569/cdn.local.zender.tv/live/uploads/b8f99a0c-1383-4891-af7a-563b5903d390/2017-11-28/079961dc-28f7-420c-82e1-feee378f7b9d.original.png\",\"id\":\"/live/uploads/b8f99a0c-1383-4891-af7a-563b5903d390/2017-11-28/079961dc-28f7-420c-82e1-feee378f7b9d.original.png\"},{\"title\":\"005-objecten__h-divers04\",\"url\":\"http://localhost:14569/cdn.local.zender.tv/live/uploads/b8f99a0c-1383-4891-af7a-563b5903d390/2017-11-28/4d3372a9-2f42-4508-aa5f-cedadd93ad4b.original.png\",\"id\":\"/live/uploads/b8f99a0c-1383-4891-af7a-563b5903d390/2017-11-28/4d3372a9-2f42-4508-aa5f-cedadd93ad4b.original.png\"},{\"title\":\"005-objecten__h-divers05\",\"url\":\"http://localhost:14569/cdn.local.zender.tv/live/uploads/b8f99a0c-1383-4891-af7a-563b5903d390/2017-11-28/fa3d6fd2-e404-4666-b16d-5c472e817e77.original.png\",\"id\":\"/live/uploads/b8f99a0c-1383-4891-af7a-563b5903d390/2017-11-28/fa3d6fd2-e404-4666-b16d-5c472e817e77.original.png\"},{\"title\":\"005-objecten__h-divers06\",\"url\":\"http://localhost:14569/cdn.local.zender.tv/live/uploads/b8f99a0c-1383-4891-af7a-563b5903d390/2017-11-28/d1f2a730-ae3f-4956-927a-f2217a12c52b.original.png\",\"id\":\"/live/uploads/b8f99a0c-1383-4891-af7a-563b5903d390/2017-11-28/d1f2a730-ae3f-4956-927a-f2217a12c52b.original.png\"},{\"title\":\"005-objecten__h-divers07\",\"url\":\"http://localhost:14569/cdn.local.zender.tv/live/uploads/b8f99a0c-1383-4891-af7a-563b5903d390/2017-11-28/393ec2eb-ddc1-4427-bea3-4134112a8b63.original.png\",\"id\":\"/live/uploads/b8f99a0c-1383-4891-af7a-563b5903d390/2017-11-28/393ec2eb-ddc1-4427-bea3-4134112a8b63.original.png\"},{\"title\":\"005-objecten__h-divers08\",\"url\":\"http://localhost:14569/cdn.local.zender.tv/live/uploads/b8f99a0c-1383-4891-af7a-563b5903d390/2017-11-28/9359fc83-c661-4a5e-ac1b-85a1308cde8b.original.png\",\"id\":\"/live/uploads/b8f99a0c-1383-4891-af7a-563b5903d390/2017-11-28/9359fc83-c661-4a5e-ac1b-85a1308cde8b.original.png\"},{\"title\":\"005-objecten__h-divers09\",\"url\":\"http://localhost:14569/cdn.local.zender.tv/live/uploads/b8f99a0c-1383-4891-af7a-563b5903d390/2017-11-28/12ce7ac0-807a-4b97-95ed-eeedaf04a141.original.png\",\"id\":\"/live/uploads/b8f99a0c-1383-4891-af7a-563b5903d390/2017-11-28/12ce7ac0-807a-4b97-95ed-eeedaf04a141.original.png\"},{\"title\":\"005-objecten__h-divers10\",\"url\":\"http://localhost:14569/cdn.local.zender.tv/live/uploads/b8f99a0c-1383-4891-af7a-563b5903d390/2017-11-28/63b15ae3-7e26-4a9d-965c-60e9c4209f35.original.png\",\"id\":\"/live/uploads/b8f99a0c-1383-4891-af7a-563b5903d390/2017-11-28/63b15ae3-7e26-4a9d-965c-60e9c4209f35.original.png\"},{\"title\":\"005-objecten__h-divers11\",\"url\":\"http://localhost:14569/cdn.local.zender.tv/live/uploads/b8f99a0c-1383-4891-af7a-563b5903d390/2017-11-28/7f0c48fe-6b02-408d-9cbc-5c95160ef683.original.png\",\"id\":\"/live/uploads/b8f99a0c-1383-4891-af7a-563b5903d390/2017-11-28/7f0c48fe-6b02-408d-9cbc-5c95160ef683.original.png\"}],\"icon\":{\"url\":\"http://localhost:14569/cdn.local.zender.tv/live/uploads/b8f99a0c-1383-4891-af7a-563b5903d390/2017-11-28/d2312d6f-2ddb-470f-b2f3-383d067439ff.original.png\",\"id\":\"/live/uploads/b8f99a0c-1383-4891-af7a-563b5903d390/2017-11-28/d2312d6f-2ddb-470f-b2f3-383d067439ff.original.png\"},\"id\":\"800e75aa-16e3-4d32-aaa8-b20bc9682c98\",\"title\":\"005-objects\"},{\"emojis\":[{\"title\":\"005-weer__a-weer01\",\"url\":\"http://localhost:14569/cdn.local.zender.tv/live/uploads/b8f99a0c-1383-4891-af7a-563b5903d390/2017-11-28/10f24dae-5ed3-490d-adfe-2ebc7b0ccaa6.original.png\",\"id\":\"/live/uploads/b8f99a0c-1383-4891-af7a-563b5903d390/2017-11-28/10f24dae-5ed3-490d-adfe-2ebc7b0ccaa6.original.png\"},{\"title\":\"005-weer__a-weer02\",\"url\":\"http://localhost:14569/cdn.local.zender.tv/live/uploads/b8f99a0c-1383-4891-af7a-563b5903d390/2017-11-28/bdd4b3f3-4741-4c00-ba4c-7d10c9af752b.original.png\",\"id\":\"/live/uploads/b8f99a0c-1383-4891-af7a-563b5903d390/2017-11-28/bdd4b3f3-4741-4c00-ba4c-7d10c9af752b.original.png\"},{\"title\":\"005-weer__a-weer03\",\"url\":\"http://localhost:14569/cdn.local.zender.tv/live/uploads/b8f99a0c-1383-4891-af7a-563b5903d390/2017-11-28/055a1f83-bd42-4e5f-a510-4062944e56ff.original.png\",\"id\":\"/live/uploads/b8f99a0c-1383-4891-af7a-563b5903d390/2017-11-28/055a1f83-bd42-4e5f-a510-4062944e56ff.original.png\"},{\"title\":\"005-weer__a-weer04\",\"url\":\"http://localhost:14569/cdn.local.zender.tv/live/uploads/b8f99a0c-1383-4891-af7a-563b5903d390/2017-11-28/7ba3d7fa-032a-4074-b604-e5463ef8d687.original.png\",\"id\":\"/live/uploads/b8f99a0c-1383-4891-af7a-563b5903d390/2017-11-28/7ba3d7fa-032a-4074-b604-e5463ef8d687.original.png\"},{\"title\":\"005-weer__a-weer05\",\"url\":\"http://localhost:14569/cdn.local.zender.tv/live/uploads/b8f99a0c-1383-4891-af7a-563b5903d390/2017-11-28/d5a46386-4a8c-436b-bc4e-d6bed0046339.original.png\",\"id\":\"/live/uploads/b8f99a0c-1383-4891-af7a-563b5903d390/2017-11-28/d5a46386-4a8c-436b-bc4e-d6bed0046339.original.png\"},{\"title\":\"005-weer__a-weer06\",\"url\":\"http://localhost:14569/cdn.local.zender.tv/live/uploads/b8f99a0c-1383-4891-af7a-563b5903d390/2017-11-28/d83a87ab-52a6-441d-a4c7-9078293ee8da.original.png\",\"id\":\"/live/uploads/b8f99a0c-1383-4891-af7a-563b5903d390/2017-11-28/d83a87ab-52a6-441d-a4c7-9078293ee8da.original.png\"},{\"title\":\"005-weer__a-weer07\",\"url\":\"http://localhost:14569/cdn.local.zender.tv/live/uploads/b8f99a0c-1383-4891-af7a-563b5903d390/2017-11-28/34b23010-b039-4f5f-a27f-5a5e7ec0b9a4.original.png\",\"id\":\"/live/uploads/b8f99a0c-1383-4891-af7a-563b5903d390/2017-11-28/34b23010-b039-4f5f-a27f-5a5e7ec0b9a4.original.png\"},{\"title\":\"005-weer__a-weer08\",\"url\":\"http://localhost:14569/cdn.local.zender.tv/live/uploads/b8f99a0c-1383-4891-af7a-563b5903d390/2017-11-28/70ba2151-4ab6-4ecf-b56c-54aedb172e4d.original.png\",\"id\":\"/live/uploads/b8f99a0c-1383-4891-af7a-563b5903d390/2017-11-28/70ba2151-4ab6-4ecf-b56c-54aedb172e4d.original.png\"},{\"title\":\"005-weer__a-weer09\",\"url\":\"http://localhost:14569/cdn.local.zender.tv/live/uploads/b8f99a0c-1383-4891-af7a-563b5903d390/2017-11-28/669f3fac-217c-4e98-94cd-350f0e1e4513.original.png\",\"id\":\"/live/uploads/b8f99a0c-1383-4891-af7a-563b5903d390/2017-11-28/669f3fac-217c-4e98-94cd-350f0e1e4513.original.png\"},{\"title\":\"005-weer__a-weer10\",\"url\":\"http://localhost:14569/cdn.local.zender.tv/live/uploads/b8f99a0c-1383-4891-af7a-563b5903d390/2017-11-28/a54c26f7-94f5-4abf-ab7a-1d7e9b05efd3.original.png\",\"id\":\"/live/uploads/b8f99a0c-1383-4891-af7a-563b5903d390/2017-11-28/a54c26f7-94f5-4abf-ab7a-1d7e9b05efd3.original.png\"},{\"title\":\"005-weer__a-weer11\",\"url\":\"http://localhost:14569/cdn.local.zender.tv/live/uploads/b8f99a0c-1383-4891-af7a-563b5903d390/2017-11-28/ad135439-3d07-4cd7-b6c9-78a41dfe3250.original.png\",\"id\":\"/live/uploads/b8f99a0c-1383-4891-af7a-563b5903d390/2017-11-28/ad135439-3d07-4cd7-b6c9-78a41dfe3250.original.png\"},{\"title\":\"005-weer__a-weer12\",\"url\":\"http://localhost:14569/cdn.local.zender.tv/live/uploads/b8f99a0c-1383-4891-af7a-563b5903d390/2017-11-28/a0c970a1-1603-4955-b737-6c0eb827c816.original.png\",\"id\":\"/live/uploads/b8f99a0c-1383-4891-af7a-563b5903d390/2017-11-28/a0c970a1-1603-4955-b737-6c0eb827c816.original.png\"},{\"title\":\"005-weer__a-weer13\",\"url\":\"http://localhost:14569/cdn.local.zender.tv/live/uploads/b8f99a0c-1383-4891-af7a-563b5903d390/2017-11-28/59a95ad9-a592-48cc-8b4b-803ab80aa5f9.original.png\",\"id\":\"/live/uploads/b8f99a0c-1383-4891-af7a-563b5903d390/2017-11-28/59a95ad9-a592-48cc-8b4b-803ab80aa5f9.original.png\"}],\"icon\":{\"url\":\"http://localhost:14569/cdn.local.zender.tv/live/uploads/b8f99a0c-1383-4891-af7a-563b5903d390/2017-11-28/10f24dae-5ed3-490d-adfe-2ebc7b0ccaa6.original.png\",\"id\":\"/live/uploads/b8f99a0c-1383-4891-af7a-563b5903d390/2017-11-28/10f24dae-5ed3-490d-adfe-2ebc7b0ccaa6.original.png\"},\"id\":\"737178d3-a13b-4b44-af2c-04f9a4b69475\",\"title\":\"005-weather\"}]},\"settings\":{\"JWPLAYER_KEY\":\"0y/TpFS258Rn2+Nm1uKH161b8MDefnMrMRgenVs5y/4=\"},\"createdAt\":\"2017-11-28T13:53:25.129Z\",\"allowedInteractions\":[\"media\",\"shoutbox\",\"emojis\",\"polls\"],\"locales\":{\"selection\":\"browser\",\"en\":{\"emojis\":{},\"polls\":{\"question\":{\"message\":\"Question:\"},\"nopoll\":{\"message\":\"There is no data available\"},\"closed\":{\"message\":\"Voting is no longer possible\"}},\"shoutbox\":{\"notloggedin\":{\"login\":\"Login\",\"loginwith\":\"Login with\"},\"errors\":{\"blocked\":\"Your message has not been sent. Your profile is blocked.\",\"resend\":\"Your message has not been sent. Please try again.\",\"profanity\":\"Your message has not been sent. Watch your language.\"},\"placeholder\":{\"blocked\":\"You can't leave a comment anymore. Your profile is blocked.\"}},\"media\":{\"geoblocked\":{\"modal\":{\"title\":\"Livestream unavailable\",\"body\":\"You can't see the requested livestream in this country.\",\"button\":\"OK\"},\"pancarte\":{\"text\":\"This video is not available in your country.\"}},\"noflash\":{\"modal\":{\"title\":\"Error while playing\",\"body\":\"This livestream is only viewable with Flash. We are working on a solution to play livestreams without Flash in the future.\",\"button\":\"OK\"},\"pancarte\":{\"text\":\"Your device/browser is not compatible to play this video.\"}},\"playbackerror\":{\"modal\":{\"title\":\"Error while playing\",\"body\":\"This livestream can't be loaded. Please try again later.\",\"button\":\"OK\"},\"pancarte\":{\"text\":\"There was an error encountered while loading this video.\"}}},\"auth\":{\"blocked\":{\"modal\":{\"title\":\"Blocked\",\"body\":\"Your comment seems inappropriate. You were blocked.\",\"button\":\"OK\"}},\"failed\":{\"modal\":{\"body\":\"Please try again\",\"button\":\"OK\",\"title\":\"Error while logging in\"}}},\"stream\":{\"nostreams\":{\"pancarte\":{\"text\":\"There are currently no broadcasts available.\"}},\"limitedexperience\":{\"modal\":{\"title\":\"You can't leave a comment.\",\"body\":\"Download our app or visit our website with a computer to leave a comment.\",\"button\":\"OK\"}},\"state\":{\"live\":\"Live in\"}}},\"default\":{\"emojis\":{},\"polls\":{\"question\":{\"message\":\"Vraag:\"},\"closed\":{\"message\":\"Stemmen is niet meer mogelijk\"},\"nopoll\":{\"message\":\"Momenteel is er geen data beschikbaar\"}},\"shoutbox\":{\"notloggedin\":{\"login\":\"Meld je aan.\",\"loginwith\":\"Aanmelden met\"},\"errors\":{\"blocked\":\"Je bericht is niet verstuurd. Je werd geblokkeerd.\",\"resend\":\"Je bericht werd niet verstuurd. Probeer opnieuw aub.\",\"profanity\":\"Je bericht is niet verstuurd. Let op je taalgebruik.\"},\"placeholder\":{\"blocked\":\"Je kan niet meer reageren. Jouw profiel werd geblokkeerd.\"}},\"media\":{\"geoblocked\":{\"modal\":{\"body\":\"De opgevraagde livestream kan je niet bekijken in het land waar je je nu bevindt.\",\"button\":\"OK\",\"title\":\"Livestream niet beschikbaar\"},\"pancarte\":{\"text\":\"Deze video is helaas niet beschikbaar in jouw land.\"}},\"noflash\":{\"modal\":{\"body\":\"Deze livestream is alleen te bekijken met Flash. We werken aan een oplossing om livestreams in de toekomst ook zonder Flash af te spelen.\",\"button\":\"OK\",\"title\":\"Fout tijdens afspelen\"},\"pancarte\":{\"text\":\"Jouw toestel/browser voldoet niet om de video af te spelen.\"}},\"playbackerror\":{\"modal\":{\"body\":\"De livestream kan niet worden ingeladen. Probeer het later nog eens opnieuw.\",\"button\":\"OK\",\"title\":\"Fout tijdens afspelen\"},\"pancarte\":{\"text\":\"Er is een probleem bij het inladen van de video.\"}}},\"auth\":{\"blocked\":{\"modal\":{\"body\":\"Je hebt ongepaste berichten geplaatst. Je werd geblokkeerd.\",\"button\":\"OK\",\"title\":\"Geblokkeerd\"}},\"failed\":{\"modal\":{\"body\":\"Gelieve het opnieuw te proberen\",\"button\":\"OK\",\"title\":\"Fout bij aanmelden\"}}},\"stream\":{\"nostreams\":{\"pancarte\":{\"text\":\"Er zijn momenteel geen uitzendingen beschikbaar.\"}},\"limitedexperience\":{\"modal\":{\"body\":\"Download onze app of surf naar onze website met een computer om mee te reageren\",\"button\":\"OK\",\"title\":\"Je kan niet reageren\"}},\"state\":{\"live\":\"live binnen\"}}}},\"shoutbox\":{\"profanity\":[{\"matches\":\"exact\",\"text\":\"something exact explicit\"},{\"matches\":\"contains\",\"text\":\"something that contains explicit language\"}]},\"name\":\"zender-api\",\"alias\":\"zender-api\",\"id\":\"b8f99a0c-1383-4891-af7a-563b5903d390\",\"updatedAt\":\"2017-11-29T08:55:53.903Z\",\"config\":{\"auth\":{\"login\":{\"url\":\"http://localhost:3002/v1/auth/login\"},\"providers\":{\"youtube\":{\"clientId\":\"721563578034-8h5gt7grfb857fsisbom90ln2k1n747h.apps.googleusercontent.com\"},\"google\":{\"clientId\":\"721563578034-8h5gt7grfb857fsisbom90ln2k1n747h.apps.googleusercontent.com\"},\"facebook\":{\"enabled\":true,\"appId\":690051904495300,\"tokenUrl\":\"https://graph.facebook.com/me\"}}},\"pusher\":{\"config\":{\"encrypted\":true,\"cluster\":\"eu\",\"authEndpoint\":\"http://localhost:3002/v1/pusher\"},\"key\":\"968089f2292502112add\"},\"search\":{\"url\":\"http://localhost:3008/v1/search\",\"method\":\"POST\"},\"stories\":{\"url\":\"http://localhost:3007/v1/stories/all\",\"method\":\"GET\"},\"notifications\":{\"url\":\"http://localhost:3001/v1/notifications\",\"method\":\"GET\"},\"topics\":[]}}"
								}
							]
						},
						{
							"name": "Delete All Shoutbox Messages",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code is 200\"] = responseCode.code === 200;"
										]
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{adminToken}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{shoutboxApiHost}}/v1/channels/{{channelId}}/streams/{{streamId}}/shoutbox/messages",
									"host": [
										"{{shoutboxApiHost}}"
									],
									"path": [
										"v1",
										"channels",
										"{{channelId}}",
										"streams",
										"{{streamId}}",
										"shoutbox",
										"messages"
									]
								},
								"description": "Delete a shoutbox messages."
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "Polls",
					"item": [
						{
							"name": "Get Polls",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code is 200\"] = responseCode.code === 200;",
											"var data = JSON.parse(responseBody);",
											"tests[\"Response has an id\"] = data.id !== null;",
											"postman.setEnvironmentVariable(\"pollId\", data.id);"
										]
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{adminToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{pollsApiHost}}/v1/channels/{{channelId}}/streams/{{streamId}}/polls",
									"host": [
										"{{pollsApiHost}}"
									],
									"path": [
										"v1",
										"channels",
										"{{channelId}}",
										"streams",
										"{{streamId}}",
										"polls"
									]
								},
								"description": "Create a poll."
							},
							"response": [
								{
									"name": "Create Poll",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"realtimeResults\": true,\n  \"showResults\": true,\n  \"fountain\": true,\n  \"multiVote\": true,\n  \"multiChoice\": true,\n  \"priority\": 1,\n  \"closingOffset\": 5000,\n  \"voteRoles\": [\n    \"authenticated\"\n  ],\n  \"question\": {\n    \"text\": \"Who will win the elections?\"\n  },\n  \"answer\": {\n    \"choices\": [\n      {\n        \"title\": \"Bernie Sanders\",\n        \"image\": {\n          \"url\": \"{{getUrl}}\"\n        }\n      },\n      {\n        \"title\": \"Donald Trump\",\n        \"image\": {\n          \"url\": \"{{getUrl}}\"\n        }\n      }\n    ]\n  },\n  \"facebook\": {\n    \"postId\": \"10151400246079999\",\n    \"integrationType\": \"text\",\n    \"linkedChoices\": [\n      \"Bernie\",\n      \"Trump\"\n    ],\n    \"enabled\": true\n  },\n  \"studio\": {\n    \"backgroundImage\": {\n      \"width\": 579,\n      \"height\": 580,\n      \"url\": \"{{getUrl}}\"\n    },\n    \"backgroundVideo\": {\n      \"url\": \"{{getUrl}}\",\n      \"aspectRatio\": \"16:9\",\n      \"loop\": true,\n      \"autoplay\": true\n    }\n  }\n}"
										},
										"url": {
											"raw": "{{pollsApiHost}}/v1/channels/{{channelId}}/streams/{{streamId}}/polls",
											"host": [
												"{{pollsApiHost}}"
											],
											"path": [
												"v1",
												"channels",
												"{{channelId}}",
												"streams",
												"{{streamId}}",
												"polls"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Access-Control-Allow-Headers",
											"value": "Content-Type, Authorization, Accept, Cache-Control, X-Requested-With",
											"name": "Access-Control-Allow-Headers",
											"description": "Used in response to a preflight request to indicate which HTTP headers can be used when making the actual request."
										},
										{
											"key": "Access-Control-Allow-Methods",
											"value": "GET,PUT,POST,DELETE",
											"name": "Access-Control-Allow-Methods",
											"description": "Specifies the method or methods allowed when accessing the resource. This is used in response to a preflight request."
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*",
											"name": "Access-Control-Allow-Origin",
											"description": "Specifies a URI that may access the resource. For requests without credentials, the server may specify '*' as a wildcard, thereby allowing any origin to access the resource."
										},
										{
											"key": "Connection",
											"value": "keep-alive",
											"name": "Connection",
											"description": "Options that are desired for the connection"
										},
										{
											"key": "Content-Length",
											"value": "1681",
											"name": "Content-Length",
											"description": "The length of the response body in octets (8-bit bytes)"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8",
											"name": "Content-Type",
											"description": "The mime type of this content"
										},
										{
											"key": "Date",
											"value": "Wed, 29 Nov 2017 09:13:15 GMT",
											"name": "Date",
											"description": "The date and time that the message was sent"
										},
										{
											"key": "X-Response-Time",
											"value": "53ms",
											"name": "X-Response-Time",
											"description": "Custom header"
										}
									],
									"cookie": [],
									"body": "{\"realtimeResults\":true,\"showResults\":true,\"fountain\":true,\"multiVote\":true,\"multiChoice\":true,\"priority\":1,\"closingOffset\":5000,\"voteRoles\":[\"authenticated\"],\"question\":{\"text\":\"Who will win the elections?\"},\"answer\":{\"choices\":[{\"title\":\"Bernie Sanders\",\"image\":{\"url\":\"http://localhost:14569/cdn.local.zender.tv/live/uploads/b8f99a0c-1383-4891-af7a-563b5903d390/2017-11-28/aa807b08-311a-45a1-9a43-fd8ac9a19616.original.png\",\"id\":\"/live/uploads/b8f99a0c-1383-4891-af7a-563b5903d390/2017-11-28/aa807b08-311a-45a1-9a43-fd8ac9a19616.original.png\"},\"id\":\"bbf9ab52-1c7a-4b09-9e8a-f18ace82ce1d\"},{\"title\":\"Donald Trump\",\"image\":{\"url\":\"http://localhost:14569/cdn.local.zender.tv/live/uploads/b8f99a0c-1383-4891-af7a-563b5903d390/2017-11-28/aa807b08-311a-45a1-9a43-fd8ac9a19616.original.png\",\"id\":\"/live/uploads/b8f99a0c-1383-4891-af7a-563b5903d390/2017-11-28/aa807b08-311a-45a1-9a43-fd8ac9a19616.original.png\"},\"id\":\"9b513553-7cb3-4e8e-a1e5-37770ab4b699\"}]},\"facebook\":{\"postId\":\"10151400246079999\",\"integrationType\":\"text\",\"linkedChoices\":[\"Bernie\",\"Trump\"],\"enabled\":true},\"studio\":{\"backgroundImage\":{\"width\":579,\"height\":580,\"url\":\"http://localhost:14569/cdn.local.zender.tv/live/uploads/b8f99a0c-1383-4891-af7a-563b5903d390/2017-11-28/aa807b08-311a-45a1-9a43-fd8ac9a19616.original.png\"},\"backgroundVideo\":{\"url\":\"http://localhost:14569/cdn.local.zender.tv/live/uploads/b8f99a0c-1383-4891-af7a-563b5903d390/2017-11-28/aa807b08-311a-45a1-9a43-fd8ac9a19616.original.png\",\"aspectRatio\":\"16:9\",\"loop\":true,\"autoplay\":true}},\"resultType\":\"actual-votes\",\"id\":\"0ff964c6-fc5c-4342-a771-024bd0e0433a\",\"streamId\":\"a2993350-cb51-437d-bf39-41e110a71f5a\",\"createdAt\":\"2017-11-29T09:13:15.275Z\"}"
								}
							]
						},
						{
							"name": "Update Polls Config",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code is 200\"] = responseCode.code === 200;",
											""
										]
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{adminToken}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"enabled\": true\n}"
								},
								"url": {
									"raw": "{{pollsApiHost}}/v1/channels/{{channelId}}/streams/{{streamId}}/polls/config",
									"host": [
										"{{pollsApiHost}}"
									],
									"path": [
										"v1",
										"channels",
										"{{channelId}}",
										"streams",
										"{{streamId}}",
										"polls",
										"config"
									]
								},
								"description": "Update the polls config of a stream. When creating a stream it will automatically create a polls config."
							},
							"response": [
								{
									"name": "Update Polls Config",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"enabled\": true\n}"
										},
										"url": {
											"raw": "{{pollsApiHost}}/v1/channels/{{channelId}}/streams/{{streamId}}/polls/config",
											"host": [
												"{{pollsApiHost}}"
											],
											"path": [
												"v1",
												"channels",
												"{{channelId}}",
												"streams",
												"{{streamId}}",
												"polls",
												"config"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Access-Control-Allow-Headers",
											"value": "Content-Type, Authorization, Accept, Cache-Control, X-Requested-With",
											"name": "Access-Control-Allow-Headers",
											"description": "Used in response to a preflight request to indicate which HTTP headers can be used when making the actual request."
										},
										{
											"key": "Access-Control-Allow-Methods",
											"value": "GET,PUT,POST,DELETE",
											"name": "Access-Control-Allow-Methods",
											"description": "Specifies the method or methods allowed when accessing the resource. This is used in response to a preflight request."
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*",
											"name": "Access-Control-Allow-Origin",
											"description": "Specifies a URI that may access the resource. For requests without credentials, the server may specify '*' as a wildcard, thereby allowing any origin to access the resource."
										},
										{
											"key": "Connection",
											"value": "keep-alive",
											"name": "Connection",
											"description": "Options that are desired for the connection"
										},
										{
											"key": "Content-Length",
											"value": "243",
											"name": "Content-Length",
											"description": "The length of the response body in octets (8-bit bytes)"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8",
											"name": "Content-Type",
											"description": "The mime type of this content"
										},
										{
											"key": "Date",
											"value": "Wed, 29 Nov 2017 09:17:24 GMT",
											"name": "Date",
											"description": "The date and time that the message was sent"
										},
										{
											"key": "X-Response-Time",
											"value": "246ms",
											"name": "X-Response-Time",
											"description": "Custom header"
										}
									],
									"cookie": [],
									"body": "{\"createdAt\":\"2017-11-28T13:55:31.723Z\",\"id\":\"a2993350-cb51-437d-bf39-41e110a71f5a\",\"streamId\":\"a2993350-cb51-437d-bf39-41e110a71f5a\",\"enabled\":true,\"updatedAt\":\"2017-11-29T09:17:24.489Z\",\"cdnHost\":\"http://localhost:14569/cdn.local.zender.tv\"}"
								}
							]
						},
						{
							"name": "Create Poll",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code is 200\"] = responseCode.code === 200;",
											"var data = JSON.parse(responseBody);",
											"tests[\"Response has an id\"] = data.id !== null;",
											"postman.setEnvironmentVariable(\"pollId\", data.id);"
										]
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{adminToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"realtimeResults\": true,\n  \"showResults\": true,\n  \"fountain\": true,\n  \"multiVote\": true,\n  \"multiChoice\": true,\n  \"priority\": 1,\n  \"closingOffset\": 5000,\n  \"voteRoles\": [\n    \"authenticated\"\n  ],\n  \"question\": {\n    \"text\": \"Who will win the elections?\"\n  },\n  \"answer\": {\n    \"choices\": [\n      {\n        \"title\": \"Bernie Sanders\",\n        \"image\": {\n          \"url\": \"{{getUrl}}\"\n        }\n      },\n      {\n        \"title\": \"Donald Trump\",\n        \"image\": {\n          \"url\": \"{{getUrl}}\"\n        }\n      }\n    ]\n  },\n  \"facebook\": {\n    \"postId\": \"10151400246079999\",\n    \"integrationType\": \"text\",\n    \"linkedChoices\": [\n      \"Bernie\",\n      \"Trump\"\n    ],\n    \"enabled\": true\n  },\n  \"studio\": {\n    \"backgroundImage\": {\n      \"width\": 579,\n      \"height\": 580,\n      \"url\": \"{{getUrl}}\"\n    },\n    \"backgroundVideo\": {\n      \"url\": \"{{getUrl}}\",\n      \"aspectRatio\": \"16:9\",\n      \"loop\": true,\n      \"autoplay\": true\n    }\n  }\n}"
								},
								"url": {
									"raw": "{{pollsApiHost}}/v1/channels/{{channelId}}/streams/{{streamId}}/polls",
									"host": [
										"{{pollsApiHost}}"
									],
									"path": [
										"v1",
										"channels",
										"{{channelId}}",
										"streams",
										"{{streamId}}",
										"polls"
									]
								},
								"description": "Create a poll."
							},
							"response": [
								{
									"name": "Create Poll",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"realtimeResults\": true,\n  \"showResults\": true,\n  \"fountain\": true,\n  \"multiVote\": true,\n  \"multiChoice\": true,\n  \"priority\": 1,\n  \"closingOffset\": 5000,\n  \"voteRoles\": [\n    \"authenticated\"\n  ],\n  \"question\": {\n    \"text\": \"Who will win the elections?\"\n  },\n  \"answer\": {\n    \"choices\": [\n      {\n        \"title\": \"Bernie Sanders\",\n        \"image\": {\n          \"url\": \"{{getUrl}}\"\n        }\n      },\n      {\n        \"title\": \"Donald Trump\",\n        \"image\": {\n          \"url\": \"{{getUrl}}\"\n        }\n      }\n    ]\n  },\n  \"facebook\": {\n    \"postId\": \"10151400246079999\",\n    \"integrationType\": \"text\",\n    \"linkedChoices\": [\n      \"Bernie\",\n      \"Trump\"\n    ],\n    \"enabled\": true\n  },\n  \"studio\": {\n    \"backgroundImage\": {\n      \"width\": 579,\n      \"height\": 580,\n      \"url\": \"{{getUrl}}\"\n    },\n    \"backgroundVideo\": {\n      \"url\": \"{{getUrl}}\",\n      \"aspectRatio\": \"16:9\",\n      \"loop\": true,\n      \"autoplay\": true\n    }\n  }\n}"
										},
										"url": {
											"raw": "{{pollsApiHost}}/v1/channels/{{channelId}}/streams/{{streamId}}/polls",
											"host": [
												"{{pollsApiHost}}"
											],
											"path": [
												"v1",
												"channels",
												"{{channelId}}",
												"streams",
												"{{streamId}}",
												"polls"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Access-Control-Allow-Headers",
											"value": "Content-Type, Authorization, Accept, Cache-Control, X-Requested-With",
											"name": "Access-Control-Allow-Headers",
											"description": "Used in response to a preflight request to indicate which HTTP headers can be used when making the actual request."
										},
										{
											"key": "Access-Control-Allow-Methods",
											"value": "GET,PUT,POST,DELETE",
											"name": "Access-Control-Allow-Methods",
											"description": "Specifies the method or methods allowed when accessing the resource. This is used in response to a preflight request."
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*",
											"name": "Access-Control-Allow-Origin",
											"description": "Specifies a URI that may access the resource. For requests without credentials, the server may specify '*' as a wildcard, thereby allowing any origin to access the resource."
										},
										{
											"key": "Connection",
											"value": "keep-alive",
											"name": "Connection",
											"description": "Options that are desired for the connection"
										},
										{
											"key": "Content-Length",
											"value": "1681",
											"name": "Content-Length",
											"description": "The length of the response body in octets (8-bit bytes)"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8",
											"name": "Content-Type",
											"description": "The mime type of this content"
										},
										{
											"key": "Date",
											"value": "Wed, 29 Nov 2017 09:13:15 GMT",
											"name": "Date",
											"description": "The date and time that the message was sent"
										},
										{
											"key": "X-Response-Time",
											"value": "53ms",
											"name": "X-Response-Time",
											"description": "Custom header"
										}
									],
									"cookie": [],
									"body": "{\"realtimeResults\":true,\"showResults\":true,\"fountain\":true,\"multiVote\":true,\"multiChoice\":true,\"priority\":1,\"closingOffset\":5000,\"voteRoles\":[\"authenticated\"],\"question\":{\"text\":\"Who will win the elections?\"},\"answer\":{\"choices\":[{\"title\":\"Bernie Sanders\",\"image\":{\"url\":\"http://localhost:14569/cdn.local.zender.tv/live/uploads/b8f99a0c-1383-4891-af7a-563b5903d390/2017-11-28/aa807b08-311a-45a1-9a43-fd8ac9a19616.original.png\",\"id\":\"/live/uploads/b8f99a0c-1383-4891-af7a-563b5903d390/2017-11-28/aa807b08-311a-45a1-9a43-fd8ac9a19616.original.png\"},\"id\":\"bbf9ab52-1c7a-4b09-9e8a-f18ace82ce1d\"},{\"title\":\"Donald Trump\",\"image\":{\"url\":\"http://localhost:14569/cdn.local.zender.tv/live/uploads/b8f99a0c-1383-4891-af7a-563b5903d390/2017-11-28/aa807b08-311a-45a1-9a43-fd8ac9a19616.original.png\",\"id\":\"/live/uploads/b8f99a0c-1383-4891-af7a-563b5903d390/2017-11-28/aa807b08-311a-45a1-9a43-fd8ac9a19616.original.png\"},\"id\":\"9b513553-7cb3-4e8e-a1e5-37770ab4b699\"}]},\"facebook\":{\"postId\":\"10151400246079999\",\"integrationType\":\"text\",\"linkedChoices\":[\"Bernie\",\"Trump\"],\"enabled\":true},\"studio\":{\"backgroundImage\":{\"width\":579,\"height\":580,\"url\":\"http://localhost:14569/cdn.local.zender.tv/live/uploads/b8f99a0c-1383-4891-af7a-563b5903d390/2017-11-28/aa807b08-311a-45a1-9a43-fd8ac9a19616.original.png\"},\"backgroundVideo\":{\"url\":\"http://localhost:14569/cdn.local.zender.tv/live/uploads/b8f99a0c-1383-4891-af7a-563b5903d390/2017-11-28/aa807b08-311a-45a1-9a43-fd8ac9a19616.original.png\",\"aspectRatio\":\"16:9\",\"loop\":true,\"autoplay\":true}},\"resultType\":\"actual-votes\",\"id\":\"0ff964c6-fc5c-4342-a771-024bd0e0433a\",\"streamId\":\"a2993350-cb51-437d-bf39-41e110a71f5a\",\"createdAt\":\"2017-11-29T09:13:15.275Z\"}"
								}
							]
						},
						{
							"name": "Get Poll",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{adminToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{pollsApiHost}}/v1/channels/{{channelId}}/streams/{{streamId}}/polls/{{pollId}}",
									"host": [
										"{{pollsApiHost}}"
									],
									"path": [
										"v1",
										"channels",
										"{{channelId}}",
										"streams",
										"{{streamId}}",
										"polls",
										"{{pollId}}"
									]
								},
								"description": "Get a poll."
							},
							"response": []
						},
						{
							"name": "Get Poll results",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{adminToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{pollsApiHost}}/v1/channels/{{channelId}}/streams/{{streamId}}/polls/{{pollId}}/results",
									"host": [
										"{{pollsApiHost}}"
									],
									"path": [
										"v1",
										"channels",
										"{{channelId}}",
										"streams",
										"{{streamId}}",
										"polls",
										"{{pollId}}",
										"results"
									]
								},
								"description": "Get results for a poll."
							},
							"response": []
						},
						{
							"name": "Update Poll",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{adminToken}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"realtimeResults\": true,\n  \"showResults\": false,\n  \"fountain\": true,\n  \"multiVote\": true,\n  \"multiChoice\": true,\n  \"priority\": 1,\n  \"closingOffset\": 10000,\n  \"voteRoles\": [\n    \"anonymous\"\n  ],\n  \"question\": {\n    \"text\": \"Who will win the American elections?\"\n  },\n  \"answer\": {\n    \"choices\": [\n      {\n        \"title\": \"Bernie Sanders\",\n        \"image\": {\n          \"url\": \"{{getUrl}}\"\n        }\n      },\n      {\n        \"title\": \"Donald Trump\",\n        \"image\": {\n          \"url\": \"{{getUrl}}\"\n        }\n      }\n    ]\n  }\n}"
								},
								"url": {
									"raw": "{{pollsApiHost}}/v1/channels/{{channelId}}/streams/{{streamId}}/polls/{{pollId}}",
									"host": [
										"{{pollsApiHost}}"
									],
									"path": [
										"v1",
										"channels",
										"{{channelId}}",
										"streams",
										"{{streamId}}",
										"polls",
										"{{pollId}}"
									]
								},
								"description": "Update a poll."
							},
							"response": [
								{
									"name": "Animate Studio Results Poll",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"animateStudioResults\": 1511948521594\n}"
										},
										"url": {
											"raw": "{{pollsApiHost}}/v1/channels/{{channelId}}/streams/{{streamId}}/polls/{{pollId}}",
											"host": [
												"{{pollsApiHost}}"
											],
											"path": [
												"v1",
												"channels",
												"{{channelId}}",
												"streams",
												"{{streamId}}",
												"polls",
												"{{pollId}}"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Access-Control-Allow-Headers",
											"value": "Content-Type, Authorization, Accept, Cache-Control, X-Requested-With",
											"name": "Access-Control-Allow-Headers",
											"description": "Used in response to a preflight request to indicate which HTTP headers can be used when making the actual request."
										},
										{
											"key": "Access-Control-Allow-Methods",
											"value": "GET,PUT,POST,DELETE",
											"name": "Access-Control-Allow-Methods",
											"description": "Specifies the method or methods allowed when accessing the resource. This is used in response to a preflight request."
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*",
											"name": "Access-Control-Allow-Origin",
											"description": "Specifies a URI that may access the resource. For requests without credentials, the server may specify '*' as a wildcard, thereby allowing any origin to access the resource."
										},
										{
											"key": "Connection",
											"value": "keep-alive",
											"name": "Connection",
											"description": "Options that are desired for the connection"
										},
										{
											"key": "Content-Length",
											"value": "1792",
											"name": "Content-Length",
											"description": "The length of the response body in octets (8-bit bytes)"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8",
											"name": "Content-Type",
											"description": "The mime type of this content"
										},
										{
											"key": "Date",
											"value": "Wed, 29 Nov 2017 09:42:28 GMT",
											"name": "Date",
											"description": "The date and time that the message was sent"
										},
										{
											"key": "X-Response-Time",
											"value": "64ms",
											"name": "X-Response-Time",
											"description": "Custom header"
										}
									],
									"cookie": [],
									"body": "{\"realtimeResults\":true,\"studio\":{\"backgroundVideo\":{\"aspectRatio\":\"16:9\",\"url\":\"http://localhost:14569/cdn.local.zender.tv/live/uploads/b8f99a0c-1383-4891-af7a-563b5903d390/2017-11-28/aa807b08-311a-45a1-9a43-fd8ac9a19616.original.png\",\"loop\":true,\"autoplay\":true},\"backgroundImage\":{\"width\":579,\"url\":\"http://localhost:14569/cdn.local.zender.tv/live/uploads/b8f99a0c-1383-4891-af7a-563b5903d390/2017-11-28/aa807b08-311a-45a1-9a43-fd8ac9a19616.original.png\",\"height\":580}},\"fountain\":true,\"voteRoles\":[\"anonymous\"],\"question\":{\"text\":\"Who will win the American elections?\"},\"streamId\":\"a2993350-cb51-437d-bf39-41e110a71f5a\",\"facebook\":{\"postId\":\"10151400246079999\",\"integrationType\":\"text\",\"enabled\":true,\"linkedChoices\":[\"Bernie\",\"Trump\"]},\"priority\":1,\"createdAt\":\"2017-11-29T09:39:07.473Z\",\"multiChoice\":true,\"multiVote\":true,\"answer\":{\"choices\":[{\"title\":\"Bernie Sanders\",\"image\":{\"url\":\"http://localhost:14569/cdn.local.zender.tv/live/uploads/b8f99a0c-1383-4891-af7a-563b5903d390/2017-11-28/aa807b08-311a-45a1-9a43-fd8ac9a19616.original.png\",\"id\":\"/live/uploads/b8f99a0c-1383-4891-af7a-563b5903d390/2017-11-28/aa807b08-311a-45a1-9a43-fd8ac9a19616.original.png\"},\"id\":\"b6168b48-15de-4e4e-a17e-932ffaf979eb\"},{\"title\":\"Donald Trump\",\"image\":{\"url\":\"http://localhost:14569/cdn.local.zender.tv/live/uploads/b8f99a0c-1383-4891-af7a-563b5903d390/2017-11-28/aa807b08-311a-45a1-9a43-fd8ac9a19616.original.png\",\"id\":\"/live/uploads/b8f99a0c-1383-4891-af7a-563b5903d390/2017-11-28/aa807b08-311a-45a1-9a43-fd8ac9a19616.original.png\"},\"id\":\"647d74a4-8ba0-4041-84a4-f6a62e6d81d0\"}]},\"animateStudioResults\":1511948521594,\"showResults\":false,\"id\":\"d962ae65-75ad-45ac-8495-b38f56d0180a\",\"triggeredAt\":1511948388460,\"closingOffset\":10000,\"resultType\":\"actual-votes\",\"updatedAt\":\"2017-11-29T09:42:28.063Z\"}"
								},
								{
									"name": "Trigger Studio Result Poll",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"triggeredAt\": 1511948388460\n}"
										},
										"url": {
											"raw": "{{pollsApiHost}}/v1/channels/{{channelId}}/streams/{{streamId}}/polls/{{pollId}}",
											"host": [
												"{{pollsApiHost}}"
											],
											"path": [
												"v1",
												"channels",
												"{{channelId}}",
												"streams",
												"{{streamId}}",
												"polls",
												"{{pollId}}"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Access-Control-Allow-Headers",
											"value": "Content-Type, Authorization, Accept, Cache-Control, X-Requested-With",
											"name": "Access-Control-Allow-Headers",
											"description": "Used in response to a preflight request to indicate which HTTP headers can be used when making the actual request."
										},
										{
											"key": "Access-Control-Allow-Methods",
											"value": "GET,PUT,POST,DELETE",
											"name": "Access-Control-Allow-Methods",
											"description": "Specifies the method or methods allowed when accessing the resource. This is used in response to a preflight request."
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*",
											"name": "Access-Control-Allow-Origin",
											"description": "Specifies a URI that may access the resource. For requests without credentials, the server may specify '*' as a wildcard, thereby allowing any origin to access the resource."
										},
										{
											"key": "Connection",
											"value": "keep-alive",
											"name": "Connection",
											"description": "Options that are desired for the connection"
										},
										{
											"key": "Content-Length",
											"value": "1755",
											"name": "Content-Length",
											"description": "The length of the response body in octets (8-bit bytes)"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8",
											"name": "Content-Type",
											"description": "The mime type of this content"
										},
										{
											"key": "Date",
											"value": "Wed, 29 Nov 2017 09:41:26 GMT",
											"name": "Date",
											"description": "The date and time that the message was sent"
										},
										{
											"key": "X-Response-Time",
											"value": "36ms",
											"name": "X-Response-Time",
											"description": "Custom header"
										}
									],
									"cookie": [],
									"body": "{\"realtimeResults\":true,\"studio\":{\"backgroundVideo\":{\"aspectRatio\":\"16:9\",\"url\":\"http://localhost:14569/cdn.local.zender.tv/live/uploads/b8f99a0c-1383-4891-af7a-563b5903d390/2017-11-28/aa807b08-311a-45a1-9a43-fd8ac9a19616.original.png\",\"loop\":true,\"autoplay\":true},\"backgroundImage\":{\"width\":579,\"url\":\"http://localhost:14569/cdn.local.zender.tv/live/uploads/b8f99a0c-1383-4891-af7a-563b5903d390/2017-11-28/aa807b08-311a-45a1-9a43-fd8ac9a19616.original.png\",\"height\":580}},\"fountain\":true,\"voteRoles\":[\"anonymous\"],\"question\":{\"text\":\"Who will win the American elections?\"},\"streamId\":\"a2993350-cb51-437d-bf39-41e110a71f5a\",\"facebook\":{\"postId\":\"10151400246079999\",\"integrationType\":\"text\",\"enabled\":true,\"linkedChoices\":[\"Bernie\",\"Trump\"]},\"priority\":1,\"createdAt\":\"2017-11-29T09:39:07.473Z\",\"multiChoice\":true,\"multiVote\":true,\"answer\":{\"choices\":[{\"title\":\"Bernie Sanders\",\"image\":{\"url\":\"http://localhost:14569/cdn.local.zender.tv/live/uploads/b8f99a0c-1383-4891-af7a-563b5903d390/2017-11-28/aa807b08-311a-45a1-9a43-fd8ac9a19616.original.png\",\"id\":\"/live/uploads/b8f99a0c-1383-4891-af7a-563b5903d390/2017-11-28/aa807b08-311a-45a1-9a43-fd8ac9a19616.original.png\"},\"id\":\"b6168b48-15de-4e4e-a17e-932ffaf979eb\"},{\"title\":\"Donald Trump\",\"image\":{\"url\":\"http://localhost:14569/cdn.local.zender.tv/live/uploads/b8f99a0c-1383-4891-af7a-563b5903d390/2017-11-28/aa807b08-311a-45a1-9a43-fd8ac9a19616.original.png\",\"id\":\"/live/uploads/b8f99a0c-1383-4891-af7a-563b5903d390/2017-11-28/aa807b08-311a-45a1-9a43-fd8ac9a19616.original.png\"},\"id\":\"647d74a4-8ba0-4041-84a4-f6a62e6d81d0\"}]},\"showResults\":false,\"id\":\"d962ae65-75ad-45ac-8495-b38f56d0180a\",\"triggeredAt\":1511948388460,\"closingOffset\":10000,\"resultType\":\"actual-votes\",\"updatedAt\":\"2017-11-29T09:41:26.320Z\"}"
								},
								{
									"name": "Update Poll",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"realtimeResults\": true,\n  \"showResults\": false,\n  \"fountain\": true,\n  \"multiVote\": true,\n  \"multiChoice\": true,\n  \"priority\": 1,\n  \"closingOffset\": 10000,\n  \"voteRoles\": [\n    \"anonymous\"\n  ],\n  \"question\": {\n    \"text\": \"Who will win the American elections?\"\n  },\n  \"answer\": {\n    \"choices\": [\n      {\n        \"title\": \"Bernie Sanders\",\n        \"image\": {\n          \"url\": \"{{getUrl}}\"\n        }\n      },\n      {\n        \"title\": \"Donald Trump\",\n        \"image\": {\n          \"url\": \"{{getUrl}}\"\n        }\n      }\n    ]\n  }\n}"
										},
										"url": {
											"raw": "{{pollsApiHost}}/v1/channels/{{channelId}}/streams/{{streamId}}/polls/{{pollId}}",
											"host": [
												"{{pollsApiHost}}"
											],
											"path": [
												"v1",
												"channels",
												"{{channelId}}",
												"streams",
												"{{streamId}}",
												"polls",
												"{{pollId}}"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Access-Control-Allow-Headers",
											"value": "Content-Type, Authorization, Accept, Cache-Control, X-Requested-With",
											"name": "Access-Control-Allow-Headers",
											"description": "Used in response to a preflight request to indicate which HTTP headers can be used when making the actual request."
										},
										{
											"key": "Access-Control-Allow-Methods",
											"value": "GET,PUT,POST,DELETE",
											"name": "Access-Control-Allow-Methods",
											"description": "Specifies the method or methods allowed when accessing the resource. This is used in response to a preflight request."
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*",
											"name": "Access-Control-Allow-Origin",
											"description": "Specifies a URI that may access the resource. For requests without credentials, the server may specify '*' as a wildcard, thereby allowing any origin to access the resource."
										},
										{
											"key": "Connection",
											"value": "keep-alive",
											"name": "Connection",
											"description": "Options that are desired for the connection"
										},
										{
											"key": "Content-Length",
											"value": "1727",
											"name": "Content-Length",
											"description": "The length of the response body in octets (8-bit bytes)"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8",
											"name": "Content-Type",
											"description": "The mime type of this content"
										},
										{
											"key": "Date",
											"value": "Wed, 29 Nov 2017 09:40:42 GMT",
											"name": "Date",
											"description": "The date and time that the message was sent"
										},
										{
											"key": "X-Response-Time",
											"value": "48ms",
											"name": "X-Response-Time",
											"description": "Custom header"
										}
									],
									"cookie": [],
									"body": "{\"realtimeResults\":true,\"studio\":{\"backgroundVideo\":{\"aspectRatio\":\"16:9\",\"url\":\"http://localhost:14569/cdn.local.zender.tv/live/uploads/b8f99a0c-1383-4891-af7a-563b5903d390/2017-11-28/aa807b08-311a-45a1-9a43-fd8ac9a19616.original.png\",\"loop\":true,\"autoplay\":true},\"backgroundImage\":{\"width\":579,\"url\":\"http://localhost:14569/cdn.local.zender.tv/live/uploads/b8f99a0c-1383-4891-af7a-563b5903d390/2017-11-28/aa807b08-311a-45a1-9a43-fd8ac9a19616.original.png\",\"height\":580}},\"fountain\":true,\"voteRoles\":[\"anonymous\"],\"question\":{\"text\":\"Who will win the American elections?\"},\"streamId\":\"a2993350-cb51-437d-bf39-41e110a71f5a\",\"facebook\":{\"postId\":\"10151400246079999\",\"integrationType\":\"text\",\"enabled\":true,\"linkedChoices\":[\"Bernie\",\"Trump\"]},\"priority\":1,\"createdAt\":\"2017-11-29T09:39:07.473Z\",\"multiChoice\":true,\"multiVote\":true,\"answer\":{\"choices\":[{\"title\":\"Bernie Sanders\",\"image\":{\"url\":\"http://localhost:14569/cdn.local.zender.tv/live/uploads/b8f99a0c-1383-4891-af7a-563b5903d390/2017-11-28/aa807b08-311a-45a1-9a43-fd8ac9a19616.original.png\",\"id\":\"/live/uploads/b8f99a0c-1383-4891-af7a-563b5903d390/2017-11-28/aa807b08-311a-45a1-9a43-fd8ac9a19616.original.png\"},\"id\":\"b6168b48-15de-4e4e-a17e-932ffaf979eb\"},{\"title\":\"Donald Trump\",\"image\":{\"url\":\"http://localhost:14569/cdn.local.zender.tv/live/uploads/b8f99a0c-1383-4891-af7a-563b5903d390/2017-11-28/aa807b08-311a-45a1-9a43-fd8ac9a19616.original.png\",\"id\":\"/live/uploads/b8f99a0c-1383-4891-af7a-563b5903d390/2017-11-28/aa807b08-311a-45a1-9a43-fd8ac9a19616.original.png\"},\"id\":\"647d74a4-8ba0-4041-84a4-f6a62e6d81d0\"}]},\"showResults\":false,\"id\":\"d962ae65-75ad-45ac-8495-b38f56d0180a\",\"closingOffset\":10000,\"resultType\":\"actual-votes\",\"updatedAt\":\"2017-11-29T09:40:42.415Z\"}"
								},
								{
									"name": "Animate Player Results Poll",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"animatePlayerResults\": 1511948585258\n}"
										},
										"url": {
											"raw": "{{pollsApiHost}}/v1/channels/{{channelId}}/streams/{{streamId}}/polls/{{pollId}}",
											"host": [
												"{{pollsApiHost}}"
											],
											"path": [
												"v1",
												"channels",
												"{{channelId}}",
												"streams",
												"{{streamId}}",
												"polls",
												"{{pollId}}"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Access-Control-Allow-Headers",
											"value": "Content-Type, Authorization, Accept, Cache-Control, X-Requested-With",
											"name": "Access-Control-Allow-Headers",
											"description": "Used in response to a preflight request to indicate which HTTP headers can be used when making the actual request."
										},
										{
											"key": "Access-Control-Allow-Methods",
											"value": "GET,PUT,POST,DELETE",
											"name": "Access-Control-Allow-Methods",
											"description": "Specifies the method or methods allowed when accessing the resource. This is used in response to a preflight request."
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*",
											"name": "Access-Control-Allow-Origin",
											"description": "Specifies a URI that may access the resource. For requests without credentials, the server may specify '*' as a wildcard, thereby allowing any origin to access the resource."
										},
										{
											"key": "Connection",
											"value": "keep-alive",
											"name": "Connection",
											"description": "Options that are desired for the connection"
										},
										{
											"key": "Content-Length",
											"value": "1829",
											"name": "Content-Length",
											"description": "The length of the response body in octets (8-bit bytes)"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8",
											"name": "Content-Type",
											"description": "The mime type of this content"
										},
										{
											"key": "Date",
											"value": "Wed, 29 Nov 2017 09:43:23 GMT",
											"name": "Date",
											"description": "The date and time that the message was sent"
										},
										{
											"key": "X-Response-Time",
											"value": "40ms",
											"name": "X-Response-Time",
											"description": "Custom header"
										}
									],
									"cookie": [],
									"body": "{\"realtimeResults\":true,\"studio\":{\"backgroundVideo\":{\"aspectRatio\":\"16:9\",\"url\":\"http://localhost:14569/cdn.local.zender.tv/live/uploads/b8f99a0c-1383-4891-af7a-563b5903d390/2017-11-28/aa807b08-311a-45a1-9a43-fd8ac9a19616.original.png\",\"loop\":true,\"autoplay\":true},\"backgroundImage\":{\"width\":579,\"url\":\"http://localhost:14569/cdn.local.zender.tv/live/uploads/b8f99a0c-1383-4891-af7a-563b5903d390/2017-11-28/aa807b08-311a-45a1-9a43-fd8ac9a19616.original.png\",\"height\":580}},\"fountain\":true,\"voteRoles\":[\"anonymous\"],\"question\":{\"text\":\"Who will win the American elections?\"},\"streamId\":\"a2993350-cb51-437d-bf39-41e110a71f5a\",\"facebook\":{\"postId\":\"10151400246079999\",\"integrationType\":\"text\",\"enabled\":true,\"linkedChoices\":[\"Bernie\",\"Trump\"]},\"priority\":1,\"createdAt\":\"2017-11-29T09:39:07.473Z\",\"multiChoice\":true,\"multiVote\":true,\"answer\":{\"choices\":[{\"title\":\"Bernie Sanders\",\"image\":{\"url\":\"http://localhost:14569/cdn.local.zender.tv/live/uploads/b8f99a0c-1383-4891-af7a-563b5903d390/2017-11-28/aa807b08-311a-45a1-9a43-fd8ac9a19616.original.png\",\"id\":\"/live/uploads/b8f99a0c-1383-4891-af7a-563b5903d390/2017-11-28/aa807b08-311a-45a1-9a43-fd8ac9a19616.original.png\"},\"id\":\"b6168b48-15de-4e4e-a17e-932ffaf979eb\"},{\"title\":\"Donald Trump\",\"image\":{\"url\":\"http://localhost:14569/cdn.local.zender.tv/live/uploads/b8f99a0c-1383-4891-af7a-563b5903d390/2017-11-28/aa807b08-311a-45a1-9a43-fd8ac9a19616.original.png\",\"id\":\"/live/uploads/b8f99a0c-1383-4891-af7a-563b5903d390/2017-11-28/aa807b08-311a-45a1-9a43-fd8ac9a19616.original.png\"},\"id\":\"647d74a4-8ba0-4041-84a4-f6a62e6d81d0\"}]},\"animateStudioResults\":1511948521594,\"showResults\":false,\"animatePlayerResults\":1511948585258,\"id\":\"d962ae65-75ad-45ac-8495-b38f56d0180a\",\"triggeredAt\":1511948388460,\"closingOffset\":10000,\"resultType\":\"actual-votes\",\"updatedAt\":\"2017-11-29T09:43:23.518Z\"}"
								}
							]
						},
						{
							"name": "Delete Poll",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{adminToken}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"realtimeResults\": true,\n  \"showResults\": false,\n  \"fountain\": true,\n  \"multiVote\": true,\n  \"multiChoice\": true,\n  \"priority\": 1,\n  \"closingOffset\": 10000,\n  \"voteRoles\": [\n    \"anonymous\"\n  ],\n  \"question\": {\n    \"text\": \"Who will win the American elections?\"\n  },\n  \"answer\": {\n    \"choices\": [\n      {\n        \"title\": \"Bernie Sanders\",\n        \"image\": {\n          \"url\": \"{{getUrl}}\"\n        }\n      },\n      {\n        \"title\": \"Donald Trump\",\n        \"image\": {\n          \"url\": \"{{getUrl}}\"\n        }\n      }\n    ]\n  }\n}"
								},
								"url": {
									"raw": "{{pollsApiHost}}/v1/channels/{{channelId}}/streams/{{streamId}}/polls/{{pollId}}",
									"host": [
										"{{pollsApiHost}}"
									],
									"path": [
										"v1",
										"channels",
										"{{channelId}}",
										"streams",
										"{{streamId}}",
										"polls",
										"{{pollId}}"
									]
								},
								"description": "Delete a poll."
							},
							"response": [
								{
									"name": "Delete Poll",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"realtimeResults\": true,\n  \"showResults\": false,\n  \"fountain\": true,\n  \"multiVote\": true,\n  \"multiChoice\": true,\n  \"priority\": 1,\n  \"closingOffset\": 10000,\n  \"voteRoles\": [\n    \"anonymous\"\n  ],\n  \"question\": {\n    \"text\": \"Who will win the American elections?\"\n  },\n  \"answer\": {\n    \"choices\": [\n      {\n        \"title\": \"Bernie Sanders\",\n        \"image\": {\n          \"url\": \"{{getUrl}}\"\n        }\n      },\n      {\n        \"title\": \"Donald Trump\",\n        \"image\": {\n          \"url\": \"{{getUrl}}\"\n        }\n      }\n    ]\n  }\n}"
										},
										"url": {
											"raw": "{{pollsApiHost}}/v1/channels/{{channelId}}/streams/{{streamId}}/polls/{{pollId}}",
											"host": [
												"{{pollsApiHost}}"
											],
											"path": [
												"v1",
												"channels",
												"{{channelId}}",
												"streams",
												"{{streamId}}",
												"polls",
												"{{pollId}}"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Access-Control-Allow-Headers",
											"value": "Content-Type, Authorization, Accept, Cache-Control, X-Requested-With",
											"name": "Access-Control-Allow-Headers",
											"description": "Used in response to a preflight request to indicate which HTTP headers can be used when making the actual request."
										},
										{
											"key": "Access-Control-Allow-Methods",
											"value": "GET,PUT,POST,DELETE",
											"name": "Access-Control-Allow-Methods",
											"description": "Specifies the method or methods allowed when accessing the resource. This is used in response to a preflight request."
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*",
											"name": "Access-Control-Allow-Origin",
											"description": "Specifies a URI that may access the resource. For requests without credentials, the server may specify '*' as a wildcard, thereby allowing any origin to access the resource."
										},
										{
											"key": "Connection",
											"value": "keep-alive",
											"name": "Connection",
											"description": "Options that are desired for the connection"
										},
										{
											"key": "Content-Length",
											"value": "16",
											"name": "Content-Length",
											"description": "The length of the response body in octets (8-bit bytes)"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8",
											"name": "Content-Type",
											"description": "The mime type of this content"
										},
										{
											"key": "Date",
											"value": "Wed, 29 Nov 2017 09:12:56 GMT",
											"name": "Date",
											"description": "The date and time that the message was sent"
										},
										{
											"key": "X-Response-Time",
											"value": "283ms",
											"name": "X-Response-Time",
											"description": "Custom header"
										}
									],
									"cookie": [],
									"body": "{\"deleted\":true}"
								}
							]
						},
						{
							"name": "Start Poll",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code is 200\"] = responseCode.code === 200;"
										]
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{adminToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{}"
								},
								"url": {
									"raw": "{{pollsApiHost}}/v1/channels/{{channelId}}/streams/{{streamId}}/polls/{{pollId}}/start",
									"host": [
										"{{pollsApiHost}}"
									],
									"path": [
										"v1",
										"channels",
										"{{channelId}}",
										"streams",
										"{{streamId}}",
										"polls",
										"{{pollId}}",
										"start"
									]
								},
								"description": "Start a poll. This means that it will be open for the public to vote on the choices until the poll has stopped and the \"closingOffset\" defined in the poll has expired. Note that while the poll is started it cannot be edited nor can it be deleted."
							},
							"response": [
								{
									"name": "Start Poll",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{}"
										},
										"url": {
											"raw": "{{pollsApiHost}}/v1/channels/{{channelId}}/streams/{{streamId}}/polls/{{pollId}}/start",
											"host": [
												"{{pollsApiHost}}"
											],
											"path": [
												"v1",
												"channels",
												"{{channelId}}",
												"streams",
												"{{streamId}}",
												"polls",
												"{{pollId}}",
												"start"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Access-Control-Allow-Headers",
											"value": "Content-Type, Authorization, Accept, Cache-Control, X-Requested-With",
											"name": "Access-Control-Allow-Headers",
											"description": "Used in response to a preflight request to indicate which HTTP headers can be used when making the actual request."
										},
										{
											"key": "Access-Control-Allow-Methods",
											"value": "GET,PUT,POST,DELETE",
											"name": "Access-Control-Allow-Methods",
											"description": "Specifies the method or methods allowed when accessing the resource. This is used in response to a preflight request."
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*",
											"name": "Access-Control-Allow-Origin",
											"description": "Specifies a URI that may access the resource. For requests without credentials, the server may specify '*' as a wildcard, thereby allowing any origin to access the resource."
										},
										{
											"key": "Connection",
											"value": "keep-alive",
											"name": "Connection",
											"description": "Options that are desired for the connection"
										},
										{
											"key": "Content-Length",
											"value": "1990",
											"name": "Content-Length",
											"description": "The length of the response body in octets (8-bit bytes)"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8",
											"name": "Content-Type",
											"description": "The mime type of this content"
										},
										{
											"key": "Date",
											"value": "Wed, 29 Nov 2017 09:26:39 GMT",
											"name": "Date",
											"description": "The date and time that the message was sent"
										},
										{
											"key": "X-Response-Time",
											"value": "157ms",
											"name": "X-Response-Time",
											"description": "Custom header"
										}
									],
									"cookie": [],
									"body": "{\"realtimeResults\":true,\"studio\":{\"backgroundVideo\":{\"aspectRatio\":\"16:9\",\"url\":\"http://localhost:14569/cdn.local.zender.tv/live/uploads/b8f99a0c-1383-4891-af7a-563b5903d390/2017-11-28/aa807b08-311a-45a1-9a43-fd8ac9a19616.original.png\",\"loop\":true,\"autoplay\":true},\"backgroundImage\":{\"width\":579,\"url\":\"http://localhost:14569/cdn.local.zender.tv/live/uploads/b8f99a0c-1383-4891-af7a-563b5903d390/2017-11-28/aa807b08-311a-45a1-9a43-fd8ac9a19616.original.png\",\"height\":580}},\"fountain\":true,\"voteRoles\":[\"authenticated\"],\"question\":{\"text\":\"Who will win the elections?\"},\"streamId\":\"a2993350-cb51-437d-bf39-41e110a71f5a\",\"facebook\":{\"postId\":\"10151400246079999\",\"integrationType\":\"text\",\"enabled\":true,\"linkedChoices\":[\"Bernie\",\"Trump\"]},\"priority\":1,\"openedAt\":\"2017-11-29T09:26:39.440Z\",\"createdAt\":\"2017-11-29T09:23:41.146Z\",\"status\":\"open\",\"multiChoice\":true,\"multiVote\":true,\"answer\":{\"choices\":[{\"title\":\"Bernie Sanders\",\"image\":{\"url\":\"http://localhost:14569/cdn.local.zender.tv/live/uploads/b8f99a0c-1383-4891-af7a-563b5903d390/2017-11-28/aa807b08-311a-45a1-9a43-fd8ac9a19616.original.png\",\"id\":\"/live/uploads/b8f99a0c-1383-4891-af7a-563b5903d390/2017-11-28/aa807b08-311a-45a1-9a43-fd8ac9a19616.original.png\"},\"id\":\"084bacc5-b8ce-4096-bdc5-1b1e00570206\"},{\"title\":\"Donald Trump\",\"image\":{\"url\":\"http://localhost:14569/cdn.local.zender.tv/live/uploads/b8f99a0c-1383-4891-af7a-563b5903d390/2017-11-28/aa807b08-311a-45a1-9a43-fd8ac9a19616.original.png\",\"id\":\"/live/uploads/b8f99a0c-1383-4891-af7a-563b5903d390/2017-11-28/aa807b08-311a-45a1-9a43-fd8ac9a19616.original.png\"},\"id\":\"85a0a3e1-a705-4844-8466-ea0e07ce9727\"}]},\"showResults\":true,\"id\":\"d97a4943-9373-421a-ae6a-8d4a2908e50a\",\"closedAt\":\"2017-11-29T09:26:10.926Z\",\"closingOffset\":5000,\"resultType\":\"actual-votes\",\"updatedAt\":\"2017-11-29T09:26:39.440Z\",\"postVotes\":\"http://localhost:3006/v1/channels/67b5528a-baf4-41bc-b558-b36613ee14a4/streams/a2993350-cb51-437d-bf39-41e110a71f5a/polls/d97a4943-9373-421a-ae6a-8d4a2908e50a/vote\"}"
								},
								{
									"name": "Create Poll",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"realtimeResults\": true,\n  \"showResults\": true,\n  \"fountain\": true,\n  \"multiVote\": true,\n  \"multiChoice\": true,\n  \"priority\": 1,\n  \"closingOffset\": 5000,\n  \"voteRoles\": [\n    \"authenticated\"\n  ],\n  \"question\": {\n    \"text\": \"Who will win the elections?\"\n  },\n  \"answer\": {\n    \"choices\": [\n      {\n        \"title\": \"Bernie Sanders\",\n        \"image\": {\n          \"url\": \"{{getUrl}}\"\n        }\n      },\n      {\n        \"title\": \"Donald Trump\",\n        \"image\": {\n          \"url\": \"{{getUrl}}\"\n        }\n      }\n    ]\n  },\n  \"facebook\": {\n    \"postId\": \"10151400246079999\",\n    \"integrationType\": \"text\",\n    \"linkedChoices\": [\n      \"Bernie\",\n      \"Trump\"\n    ],\n    \"enabled\": true\n  },\n  \"studio\": {\n    \"backgroundImage\": {\n      \"width\": 579,\n      \"height\": 580,\n      \"url\": \"{{getUrl}}\"\n    },\n    \"backgroundVideo\": {\n      \"url\": \"{{getUrl}}\",\n      \"aspectRatio\": \"16:9\",\n      \"loop\": true,\n      \"autoplay\": true\n    }\n  }\n}"
										},
										"url": {
											"raw": "{{pollsApiHost}}/v1/channels/{{channelId}}/streams/{{streamId}}/polls",
											"host": [
												"{{pollsApiHost}}"
											],
											"path": [
												"v1",
												"channels",
												"{{channelId}}",
												"streams",
												"{{streamId}}",
												"polls"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Access-Control-Allow-Headers",
											"value": "Content-Type, Authorization, Accept, Cache-Control, X-Requested-With",
											"name": "Access-Control-Allow-Headers",
											"description": "Used in response to a preflight request to indicate which HTTP headers can be used when making the actual request."
										},
										{
											"key": "Access-Control-Allow-Methods",
											"value": "GET,PUT,POST,DELETE",
											"name": "Access-Control-Allow-Methods",
											"description": "Specifies the method or methods allowed when accessing the resource. This is used in response to a preflight request."
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*",
											"name": "Access-Control-Allow-Origin",
											"description": "Specifies a URI that may access the resource. For requests without credentials, the server may specify '*' as a wildcard, thereby allowing any origin to access the resource."
										},
										{
											"key": "Connection",
											"value": "keep-alive",
											"name": "Connection",
											"description": "Options that are desired for the connection"
										},
										{
											"key": "Content-Length",
											"value": "1681",
											"name": "Content-Length",
											"description": "The length of the response body in octets (8-bit bytes)"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8",
											"name": "Content-Type",
											"description": "The mime type of this content"
										},
										{
											"key": "Date",
											"value": "Wed, 29 Nov 2017 09:13:15 GMT",
											"name": "Date",
											"description": "The date and time that the message was sent"
										},
										{
											"key": "X-Response-Time",
											"value": "53ms",
											"name": "X-Response-Time",
											"description": "Custom header"
										}
									],
									"cookie": [],
									"body": "{\"realtimeResults\":true,\"showResults\":true,\"fountain\":true,\"multiVote\":true,\"multiChoice\":true,\"priority\":1,\"closingOffset\":5000,\"voteRoles\":[\"authenticated\"],\"question\":{\"text\":\"Who will win the elections?\"},\"answer\":{\"choices\":[{\"title\":\"Bernie Sanders\",\"image\":{\"url\":\"http://localhost:14569/cdn.local.zender.tv/live/uploads/b8f99a0c-1383-4891-af7a-563b5903d390/2017-11-28/aa807b08-311a-45a1-9a43-fd8ac9a19616.original.png\",\"id\":\"/live/uploads/b8f99a0c-1383-4891-af7a-563b5903d390/2017-11-28/aa807b08-311a-45a1-9a43-fd8ac9a19616.original.png\"},\"id\":\"bbf9ab52-1c7a-4b09-9e8a-f18ace82ce1d\"},{\"title\":\"Donald Trump\",\"image\":{\"url\":\"http://localhost:14569/cdn.local.zender.tv/live/uploads/b8f99a0c-1383-4891-af7a-563b5903d390/2017-11-28/aa807b08-311a-45a1-9a43-fd8ac9a19616.original.png\",\"id\":\"/live/uploads/b8f99a0c-1383-4891-af7a-563b5903d390/2017-11-28/aa807b08-311a-45a1-9a43-fd8ac9a19616.original.png\"},\"id\":\"9b513553-7cb3-4e8e-a1e5-37770ab4b699\"}]},\"facebook\":{\"postId\":\"10151400246079999\",\"integrationType\":\"text\",\"linkedChoices\":[\"Bernie\",\"Trump\"],\"enabled\":true},\"studio\":{\"backgroundImage\":{\"width\":579,\"height\":580,\"url\":\"http://localhost:14569/cdn.local.zender.tv/live/uploads/b8f99a0c-1383-4891-af7a-563b5903d390/2017-11-28/aa807b08-311a-45a1-9a43-fd8ac9a19616.original.png\"},\"backgroundVideo\":{\"url\":\"http://localhost:14569/cdn.local.zender.tv/live/uploads/b8f99a0c-1383-4891-af7a-563b5903d390/2017-11-28/aa807b08-311a-45a1-9a43-fd8ac9a19616.original.png\",\"aspectRatio\":\"16:9\",\"loop\":true,\"autoplay\":true}},\"resultType\":\"actual-votes\",\"id\":\"0ff964c6-fc5c-4342-a771-024bd0e0433a\",\"streamId\":\"a2993350-cb51-437d-bf39-41e110a71f5a\",\"createdAt\":\"2017-11-29T09:13:15.275Z\"}"
								}
							]
						},
						{
							"name": "Stop Poll",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code is 200\"] = responseCode.code === 200;"
										]
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{adminToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{}"
								},
								"url": {
									"raw": "{{pollsApiHost}}/v1/channels/{{channelId}}/streams/{{streamId}}/polls/{{pollId}}/stop",
									"host": [
										"{{pollsApiHost}}"
									],
									"path": [
										"v1",
										"channels",
										"{{channelId}}",
										"streams",
										"{{streamId}}",
										"polls",
										"{{pollId}}",
										"stop"
									]
								},
								"description": "Stop a poll. This means that it will be closed for the public."
							},
							"response": [
								{
									"name": "Stop Poll",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{}"
										},
										"url": {
											"raw": "{{pollsApiHost}}/v1/channels/{{channelId}}/streams/{{streamId}}/polls/{{pollId}}/stop",
											"host": [
												"{{pollsApiHost}}"
											],
											"path": [
												"v1",
												"channels",
												"{{channelId}}",
												"streams",
												"{{streamId}}",
												"polls",
												"{{pollId}}",
												"stop"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Access-Control-Allow-Headers",
											"value": "Content-Type, Authorization, Accept, Cache-Control, X-Requested-With",
											"name": "Access-Control-Allow-Headers",
											"description": "Used in response to a preflight request to indicate which HTTP headers can be used when making the actual request."
										},
										{
											"key": "Access-Control-Allow-Methods",
											"value": "GET,PUT,POST,DELETE",
											"name": "Access-Control-Allow-Methods",
											"description": "Specifies the method or methods allowed when accessing the resource. This is used in response to a preflight request."
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*",
											"name": "Access-Control-Allow-Origin",
											"description": "Specifies a URI that may access the resource. For requests without credentials, the server may specify '*' as a wildcard, thereby allowing any origin to access the resource."
										},
										{
											"key": "Connection",
											"value": "keep-alive",
											"name": "Connection",
											"description": "Options that are desired for the connection"
										},
										{
											"key": "Content-Length",
											"value": "1814",
											"name": "Content-Length",
											"description": "The length of the response body in octets (8-bit bytes)"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8",
											"name": "Content-Type",
											"description": "The mime type of this content"
										},
										{
											"key": "Date",
											"value": "Wed, 29 Nov 2017 09:26:11 GMT",
											"name": "Date",
											"description": "The date and time that the message was sent"
										},
										{
											"key": "X-Response-Time",
											"value": "161ms",
											"name": "X-Response-Time",
											"description": "Custom header"
										}
									],
									"cookie": [],
									"body": "{\"realtimeResults\":true,\"studio\":{\"backgroundVideo\":{\"aspectRatio\":\"16:9\",\"url\":\"http://localhost:14569/cdn.local.zender.tv/live/uploads/b8f99a0c-1383-4891-af7a-563b5903d390/2017-11-28/aa807b08-311a-45a1-9a43-fd8ac9a19616.original.png\",\"loop\":true,\"autoplay\":true},\"backgroundImage\":{\"width\":579,\"url\":\"http://localhost:14569/cdn.local.zender.tv/live/uploads/b8f99a0c-1383-4891-af7a-563b5903d390/2017-11-28/aa807b08-311a-45a1-9a43-fd8ac9a19616.original.png\",\"height\":580}},\"fountain\":true,\"voteRoles\":[\"authenticated\"],\"question\":{\"text\":\"Who will win the elections?\"},\"streamId\":\"a2993350-cb51-437d-bf39-41e110a71f5a\",\"facebook\":{\"postId\":\"10151400246079999\",\"integrationType\":\"text\",\"enabled\":true,\"linkedChoices\":[\"Bernie\",\"Trump\"]},\"priority\":1,\"openedAt\":\"2017-11-29T09:26:09.425Z\",\"createdAt\":\"2017-11-29T09:23:41.146Z\",\"status\":\"closed\",\"multiChoice\":true,\"multiVote\":true,\"answer\":{\"choices\":[{\"title\":\"Bernie Sanders\",\"image\":{\"url\":\"http://localhost:14569/cdn.local.zender.tv/live/uploads/b8f99a0c-1383-4891-af7a-563b5903d390/2017-11-28/aa807b08-311a-45a1-9a43-fd8ac9a19616.original.png\",\"id\":\"/live/uploads/b8f99a0c-1383-4891-af7a-563b5903d390/2017-11-28/aa807b08-311a-45a1-9a43-fd8ac9a19616.original.png\"},\"id\":\"084bacc5-b8ce-4096-bdc5-1b1e00570206\"},{\"title\":\"Donald Trump\",\"image\":{\"url\":\"http://localhost:14569/cdn.local.zender.tv/live/uploads/b8f99a0c-1383-4891-af7a-563b5903d390/2017-11-28/aa807b08-311a-45a1-9a43-fd8ac9a19616.original.png\",\"id\":\"/live/uploads/b8f99a0c-1383-4891-af7a-563b5903d390/2017-11-28/aa807b08-311a-45a1-9a43-fd8ac9a19616.original.png\"},\"id\":\"85a0a3e1-a705-4844-8466-ea0e07ce9727\"}]},\"showResults\":true,\"id\":\"d97a4943-9373-421a-ae6a-8d4a2908e50a\",\"closedAt\":\"2017-11-29T09:26:10.926Z\",\"closingOffset\":5000,\"resultType\":\"actual-votes\",\"updatedAt\":\"2017-11-29T09:26:10.926Z\"}"
								}
							]
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "Quiz",
					"item": [
						{
							"name": "Get Quiz Config",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "e6dda3d8-f3f0-4007-8414-8ad28fea72cb",
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code is 200\"] = responseCode.code === 200;",
											"var data = JSON.parse(responseBody);"
										]
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{adminToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{quizApiHost}}/v1/channels/{{channelId}}/streams/{{streamId}}/quiz/config",
									"host": [
										"{{quizApiHost}}"
									],
									"path": [
										"v1",
										"channels",
										"{{channelId}}",
										"streams",
										"{{streamId}}",
										"quiz",
										"config"
									]
								},
								"description": "Get polls config. This endpoint will also return the started (public) polls and their results (if results are configured for that poll).\n\nWhen called with an admin token (see [Admin Token Login](#d15beccd-f01f-4d3a-a8ba-1b1bdc3480a7)), the response includes all questions."
							},
							"response": []
						},
						{
							"name": "Create Quiz Config",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code is 200\"] = responseCode.code === 200;",
											""
										]
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{adminToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"enabled\": true\n}"
								},
								"url": {
									"raw": "{{quizApiHost}}/v1/channels/3789b16d-8e9d-4071-9209-2dae67be3760/streams/abe2c3fb-a60a-41ee-b6e3-a649755bdea2/quiz/config",
									"host": [
										"{{quizApiHost}}"
									],
									"path": [
										"v1",
										"channels",
										"3789b16d-8e9d-4071-9209-2dae67be3760",
										"streams",
										"abe2c3fb-a60a-41ee-b6e3-a649755bdea2",
										"quiz",
										"config"
									]
								},
								"description": "Update the polls config of a stream. When creating a stream it will automatically create a polls config."
							},
							"response": [
								{
									"name": "Update Polls Config",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"enabled\": true\n}"
										},
										"url": {
											"raw": "{{pollsApiHost}}/v1/channels/{{channelId}}/streams/{{streamId}}/polls/config",
											"host": [
												"{{pollsApiHost}}"
											],
											"path": [
												"v1",
												"channels",
												"{{channelId}}",
												"streams",
												"{{streamId}}",
												"polls",
												"config"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Access-Control-Allow-Headers",
											"value": "Content-Type, Authorization, Accept, Cache-Control, X-Requested-With",
											"name": "Access-Control-Allow-Headers",
											"description": "Used in response to a preflight request to indicate which HTTP headers can be used when making the actual request."
										},
										{
											"key": "Access-Control-Allow-Methods",
											"value": "GET,PUT,POST,DELETE",
											"name": "Access-Control-Allow-Methods",
											"description": "Specifies the method or methods allowed when accessing the resource. This is used in response to a preflight request."
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*",
											"name": "Access-Control-Allow-Origin",
											"description": "Specifies a URI that may access the resource. For requests without credentials, the server may specify '*' as a wildcard, thereby allowing any origin to access the resource."
										},
										{
											"key": "Connection",
											"value": "keep-alive",
											"name": "Connection",
											"description": "Options that are desired for the connection"
										},
										{
											"key": "Content-Length",
											"value": "243",
											"name": "Content-Length",
											"description": "The length of the response body in octets (8-bit bytes)"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8",
											"name": "Content-Type",
											"description": "The mime type of this content"
										},
										{
											"key": "Date",
											"value": "Wed, 29 Nov 2017 09:17:24 GMT",
											"name": "Date",
											"description": "The date and time that the message was sent"
										},
										{
											"key": "X-Response-Time",
											"value": "246ms",
											"name": "X-Response-Time",
											"description": "Custom header"
										}
									],
									"cookie": [],
									"body": "{\"createdAt\":\"2017-11-28T13:55:31.723Z\",\"id\":\"a2993350-cb51-437d-bf39-41e110a71f5a\",\"streamId\":\"a2993350-cb51-437d-bf39-41e110a71f5a\",\"enabled\":true,\"updatedAt\":\"2017-11-29T09:17:24.489Z\",\"cdnHost\":\"http://localhost:14569/cdn.local.zender.tv\"}"
								}
							]
						},
						{
							"name": "Update Quiz Config",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code is 200\"] = responseCode.code === 200;",
											""
										]
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{adminToken}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"enabled\": true\n}"
								},
								"url": {
									"raw": "{{quizApiHost}}/v1/channels/{{channelId}}/streams/{{streamId}}/quiz/config",
									"host": [
										"{{quizApiHost}}"
									],
									"path": [
										"v1",
										"channels",
										"{{channelId}}",
										"streams",
										"{{streamId}}",
										"quiz",
										"config"
									]
								},
								"description": "Update the polls config of a stream. When creating a stream it will automatically create a polls config."
							},
							"response": [
								{
									"name": "Update Polls Config",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"enabled\": true\n}"
										},
										"url": {
											"raw": "{{pollsApiHost}}/v1/channels/{{channelId}}/streams/{{streamId}}/polls/config",
											"host": [
												"{{pollsApiHost}}"
											],
											"path": [
												"v1",
												"channels",
												"{{channelId}}",
												"streams",
												"{{streamId}}",
												"polls",
												"config"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Access-Control-Allow-Headers",
											"value": "Content-Type, Authorization, Accept, Cache-Control, X-Requested-With",
											"name": "Access-Control-Allow-Headers",
											"description": "Used in response to a preflight request to indicate which HTTP headers can be used when making the actual request."
										},
										{
											"key": "Access-Control-Allow-Methods",
											"value": "GET,PUT,POST,DELETE",
											"name": "Access-Control-Allow-Methods",
											"description": "Specifies the method or methods allowed when accessing the resource. This is used in response to a preflight request."
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*",
											"name": "Access-Control-Allow-Origin",
											"description": "Specifies a URI that may access the resource. For requests without credentials, the server may specify '*' as a wildcard, thereby allowing any origin to access the resource."
										},
										{
											"key": "Connection",
											"value": "keep-alive",
											"name": "Connection",
											"description": "Options that are desired for the connection"
										},
										{
											"key": "Content-Length",
											"value": "243",
											"name": "Content-Length",
											"description": "The length of the response body in octets (8-bit bytes)"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8",
											"name": "Content-Type",
											"description": "The mime type of this content"
										},
										{
											"key": "Date",
											"value": "Wed, 29 Nov 2017 09:17:24 GMT",
											"name": "Date",
											"description": "The date and time that the message was sent"
										},
										{
											"key": "X-Response-Time",
											"value": "246ms",
											"name": "X-Response-Time",
											"description": "Custom header"
										}
									],
									"cookie": [],
									"body": "{\"createdAt\":\"2017-11-28T13:55:31.723Z\",\"id\":\"a2993350-cb51-437d-bf39-41e110a71f5a\",\"streamId\":\"a2993350-cb51-437d-bf39-41e110a71f5a\",\"enabled\":true,\"updatedAt\":\"2017-11-29T09:17:24.489Z\",\"cdnHost\":\"http://localhost:14569/cdn.local.zender.tv\"}"
								}
							]
						},
						{
							"name": "Create Quiz",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "17f6024d-0a56-4948-9671-6146928fcc1a",
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code is 200\"] = responseCode.code === 200;",
											"var data = JSON.parse(responseBody);",
											"tests[\"Response has an id\"] = data.id !== null;",
											"postman.setEnvironmentVariable(\"quizId\", data.id);"
										]
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{adminToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"answerTime\": 10000,\n\t\"maxLatency\": 3000,\n\t\"title\": \"Test Quiz\",\n\t\"description\": \"Test Trivia\"\n}"
								},
								"url": {
									"raw": "{{quizApiHost}}/v1/channels/{{channelId}}/streams/{{streamId}}/quiz",
									"host": [
										"{{quizApiHost}}"
									],
									"path": [
										"v1",
										"channels",
										"{{channelId}}",
										"streams",
										"{{streamId}}",
										"quiz"
									]
								},
								"description": "Create a poll."
							},
							"response": [
								{
									"name": "Create Quiz",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"answerTime\": 10000,\n\t\"maxLatency\": 3000,\n\t\"title\": \"Test Quiz\",\n\t\"description\": \"Test Trivia\"\n}"
										},
										"url": {
											"raw": "{{quizApiHost}}/v1/channels/{{channelId}}/streams/{{streamId}}/quiz",
											"host": [
												"{{quizApiHost}}"
											],
											"path": [
												"v1",
												"channels",
												"{{channelId}}",
												"streams",
												"{{streamId}}",
												"quiz"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Access-Control-Allow-Headers",
											"value": "Content-Type, Authorization, Accept, Cache-Control, X-Requested-With",
											"name": "Access-Control-Allow-Headers",
											"description": ""
										},
										{
											"key": "Access-Control-Allow-Methods",
											"value": "GET,PUT,POST,DELETE",
											"name": "Access-Control-Allow-Methods",
											"description": ""
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*",
											"name": "Access-Control-Allow-Origin",
											"description": ""
										},
										{
											"key": "Connection",
											"value": "keep-alive",
											"name": "Connection",
											"description": ""
										},
										{
											"key": "Content-Length",
											"value": "242",
											"name": "Content-Length",
											"description": ""
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8",
											"name": "Content-Type",
											"description": ""
										},
										{
											"key": "Date",
											"value": "Mon, 05 Mar 2018 14:35:58 GMT",
											"name": "Date",
											"description": ""
										},
										{
											"key": "X-Response-Time",
											"value": "92ms",
											"name": "X-Response-Time",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\"answerTime\":10000,\"maxLatency\":3000,\"title\":\"Test Quiz\",\"description\":\"Test Trivia\",\"status\":\"preparation\",\"id\":\"9b247a8d-09e2-4449-bf0c-81df588ddd11\",\"streamId\":\"abe2c3fb-a60a-41ee-b6e3-a649755bdea2\",\"createdAt\":\"2018-03-05T14:35:58.816Z\"}"
								}
							]
						},
						{
							"name": "Update Quiz",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "aeb871eb-07fb-49f4-8c4b-48c070fdc646",
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code is 200\"] = responseCode.code === 200;",
											"var data = JSON.parse(responseBody);"
										]
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{adminToken}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"answerTime\": 11000\n}"
								},
								"url": {
									"raw": "{{quizApiHost}}/v1/channels/{{channelId}}/streams/{{streamId}}/quiz/{{quizId}}",
									"host": [
										"{{quizApiHost}}"
									],
									"path": [
										"v1",
										"channels",
										"{{channelId}}",
										"streams",
										"{{streamId}}",
										"quiz",
										"{{quizId}}"
									]
								},
								"description": "Create a poll."
							},
							"response": [
								{
									"name": "Update Quiz",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"answerTime\": 11000\n}"
										},
										"url": {
											"raw": "{{quizApiHost}}/v1/channels/{{channelId}}/streams/{{streamId}}/quiz/{{quizId}}",
											"host": [
												"{{quizApiHost}}"
											],
											"path": [
												"v1",
												"channels",
												"{{channelId}}",
												"streams",
												"{{streamId}}",
												"quiz",
												"{{quizId}}"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Access-Control-Allow-Headers",
											"value": "Content-Type, Authorization, Accept, Cache-Control, X-Requested-With",
											"name": "Access-Control-Allow-Headers",
											"description": "Used in response to a preflight request to indicate which HTTP headers can be used when making the actual request."
										},
										{
											"key": "Access-Control-Allow-Methods",
											"value": "GET,PUT,POST,DELETE",
											"name": "Access-Control-Allow-Methods",
											"description": "Specifies the method or methods allowed when accessing the resource. This is used in response to a preflight request."
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*",
											"name": "Access-Control-Allow-Origin",
											"description": "Specifies a URI that may access the resource. For requests without credentials, the server may specify '*' as a wildcard, thereby allowing any origin to access the resource."
										},
										{
											"key": "Connection",
											"value": "keep-alive",
											"name": "Connection",
											"description": "Options that are desired for the connection"
										},
										{
											"key": "Content-Length",
											"value": "281",
											"name": "Content-Length",
											"description": "The length of the response body in octets (8-bit bytes)"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8",
											"name": "Content-Type",
											"description": "The mime type of this content"
										},
										{
											"key": "Date",
											"value": "Mon, 05 Mar 2018 14:41:42 GMT",
											"name": "Date",
											"description": "The date and time that the message was sent"
										},
										{
											"key": "X-Response-Time",
											"value": "146ms",
											"name": "X-Response-Time",
											"description": "Custom header"
										}
									],
									"cookie": [],
									"body": "{\"status\":\"preparation\",\"updatedAt\":\"2018-03-05T14:41:42.413Z\",\"answerTime\":11000,\"createdAt\":\"2018-03-05T14:35:58.816Z\",\"description\":\"Test Trivia\",\"id\":\"9b247a8d-09e2-4449-bf0c-81df588ddd11\",\"maxLatency\":3000,\"streamId\":\"abe2c3fb-a60a-41ee-b6e3-a649755bdea2\",\"title\":\"Test Quiz\"}"
								}
							]
						},
						{
							"name": "Get Quizzes",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "5d0ef722-27ba-40bf-acf3-d3a7ebb5c930",
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code is 200\"] = responseCode.code === 200;",
											"var data = JSON.parse(responseBody);",
											"tests[\"Response has an id\"] = data[0].id !== null;",
											"postman.setEnvironmentVariable(\"quizId\", data[0].id);"
										]
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{adminToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{quizApiHost}}/v1/channels/{{channelId}}/streams/{{streamId}}/quiz",
									"host": [
										"{{quizApiHost}}"
									],
									"path": [
										"v1",
										"channels",
										"{{channelId}}",
										"streams",
										"{{streamId}}",
										"quiz"
									]
								},
								"description": "Create a poll."
							},
							"response": [
								{
									"name": "Get Quizzes",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{quizApiHost}}/v1/channels/{{channelId}}/streams/{{streamId}}/quiz",
											"host": [
												"{{quizApiHost}}"
											],
											"path": [
												"v1",
												"channels",
												"{{channelId}}",
												"streams",
												"{{streamId}}",
												"quiz"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Access-Control-Allow-Headers",
											"value": "Content-Type, Authorization, Accept, Cache-Control, X-Requested-With",
											"name": "Access-Control-Allow-Headers",
											"description": "Used in response to a preflight request to indicate which HTTP headers can be used when making the actual request."
										},
										{
											"key": "Access-Control-Allow-Methods",
											"value": "GET,PUT,POST,DELETE",
											"name": "Access-Control-Allow-Methods",
											"description": "Specifies the method or methods allowed when accessing the resource. This is used in response to a preflight request."
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*",
											"name": "Access-Control-Allow-Origin",
											"description": "Specifies a URI that may access the resource. For requests without credentials, the server may specify '*' as a wildcard, thereby allowing any origin to access the resource."
										},
										{
											"key": "Cache-Control",
											"value": "public, max-age=5",
											"name": "Cache-Control",
											"description": "Tells all caching mechanisms from server to client whether they may cache this object. It is measured in seconds"
										},
										{
											"key": "Connection",
											"value": "keep-alive",
											"name": "Connection",
											"description": "Options that are desired for the connection"
										},
										{
											"key": "Content-Length",
											"value": "244",
											"name": "Content-Length",
											"description": "The length of the response body in octets (8-bit bytes)"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8",
											"name": "Content-Type",
											"description": "The mime type of this content"
										},
										{
											"key": "Date",
											"value": "Mon, 05 Mar 2018 14:36:11 GMT",
											"name": "Date",
											"description": "The date and time that the message was sent"
										},
										{
											"key": "X-Response-Time",
											"value": "31ms",
											"name": "X-Response-Time",
											"description": "Custom header"
										}
									],
									"cookie": [],
									"body": "[{\"status\":\"preparation\",\"answerTime\":10000,\"createdAt\":\"2018-03-05T14:35:58.816Z\",\"description\":\"Test Trivia\",\"id\":\"9b247a8d-09e2-4449-bf0c-81df588ddd11\",\"maxLatency\":3000,\"streamId\":\"abe2c3fb-a60a-41ee-b6e3-a649755bdea2\",\"title\":\"Test Quiz\"}]"
								}
							]
						},
						{
							"name": "Get Quizzes for channel",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "5d0ef722-27ba-40bf-acf3-d3a7ebb5c930",
										"exec": [
											"tests[\"Status code is 200\"] = responseCode.code === 200;",
											"var data = JSON.parse(responseBody);",
											"tests[\"Response has an id\"] = data[0].id !== null;",
											"postman.setEnvironmentVariable(\"quizId\", data[0].id);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{adminToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{quizApiHost}}/v1/channels/{{channelId}}/quiz",
									"host": [
										"{{quizApiHost}}"
									],
									"path": [
										"v1",
										"channels",
										"{{channelId}}",
										"quiz"
									]
								},
								"description": "Get the quizzes for all streams of a channel."
							},
							"response": [
								{
									"name": "Get Quizzes",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{quizApiHost}}/v1/channels/{{channelId}}/quiz",
											"host": [
												"{{quizApiHost}}"
											],
											"path": [
												"v1",
												"channels",
												"{{channelId}}",
												"quiz"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Access-Control-Allow-Headers",
											"value": "Content-Type, Authorization, Accept, Cache-Control, X-Requested-With",
											"name": "Access-Control-Allow-Headers",
											"description": "Used in response to a preflight request to indicate which HTTP headers can be used when making the actual request."
										},
										{
											"key": "Access-Control-Allow-Methods",
											"value": "GET,PUT,POST,DELETE",
											"name": "Access-Control-Allow-Methods",
											"description": "Specifies the method or methods allowed when accessing the resource. This is used in response to a preflight request."
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*",
											"name": "Access-Control-Allow-Origin",
											"description": "Specifies a URI that may access the resource. For requests without credentials, the server may specify '*' as a wildcard, thereby allowing any origin to access the resource."
										},
										{
											"key": "Cache-Control",
											"value": "public, max-age=5",
											"name": "Cache-Control",
											"description": "Tells all caching mechanisms from server to client whether they may cache this object. It is measured in seconds"
										},
										{
											"key": "Connection",
											"value": "keep-alive",
											"name": "Connection",
											"description": "Options that are desired for the connection"
										},
										{
											"key": "Content-Length",
											"value": "244",
											"name": "Content-Length",
											"description": "The length of the response body in octets (8-bit bytes)"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8",
											"name": "Content-Type",
											"description": "The mime type of this content"
										},
										{
											"key": "Date",
											"value": "Mon, 05 Mar 2018 14:36:11 GMT",
											"name": "Date",
											"description": "The date and time that the message was sent"
										},
										{
											"key": "X-Response-Time",
											"value": "31ms",
											"name": "X-Response-Time",
											"description": "Custom header"
										}
									],
									"cookie": [],
									"body": "[{\"status\":\"preparation\",\"answerTime\":10000,\"createdAt\":\"2018-03-05T14:35:58.816Z\",\"description\":\"Test Trivia\",\"id\":\"9b247a8d-09e2-4449-bf0c-81df588ddd11\",\"maxLatency\":3000,\"streamId\":\"abe2c3fb-a60a-41ee-b6e3-a649755bdea2\",\"title\":\"Test Quiz\"}]"
								}
							]
						},
						{
							"name": "Get Quiz",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code is 200\"] = responseCode.code === 200;",
											"var data = JSON.parse(responseBody);",
											"tests[\"Response has an id\"] = data.questions !== null;",
											"questions = data.questions.sort(function(a, b) {",
											"    a = new Date(a.createdAt);",
											"    b = new Date(b.createdAt);",
											"    return a>b ? -1 : a<b ? 1 : 0;",
											"});",
											"",
											"postman.setEnvironmentVariable(\"questionId\", questions[0].id);",
											"tests[\"First question Id \" + questions[0].id] = true;"
										]
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{adminToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{quizApiHost}}/v1/channels/{{channelId}}/streams/{{streamId}}/quiz/{{quizId}}",
									"host": [
										"{{quizApiHost}}"
									],
									"path": [
										"v1",
										"channels",
										"{{channelId}}",
										"streams",
										"{{streamId}}",
										"quiz",
										"{{quizId}}"
									]
								},
								"description": "Get info about a single quiz.\n\nWhen called with an admin token (see [Admin Token Login](#d15beccd-f01f-4d3a-a8ba-1b1bdc3480a7)), the response includes all questions."
							},
							"response": [
								{
									"name": "Get Quiz",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{quizApiHost}}/v1/channels/{{channelId}}/streams/{{streamId}}/quiz/{{quizId}}",
											"host": [
												"{{quizApiHost}}"
											],
											"path": [
												"v1",
												"channels",
												"{{channelId}}",
												"streams",
												"{{streamId}}",
												"quiz",
												"{{quizId}}"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Access-Control-Allow-Headers",
											"value": "Content-Type, Authorization, Accept, Cache-Control, X-Requested-With",
											"name": "Access-Control-Allow-Headers",
											"description": ""
										},
										{
											"key": "Access-Control-Allow-Methods",
											"value": "GET,PUT,POST,DELETE",
											"name": "Access-Control-Allow-Methods",
											"description": ""
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*",
											"name": "Access-Control-Allow-Origin",
											"description": ""
										},
										{
											"key": "Connection",
											"value": "keep-alive",
											"name": "Connection",
											"description": ""
										},
										{
											"key": "Content-Length",
											"value": "257",
											"name": "Content-Length",
											"description": ""
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8",
											"name": "Content-Type",
											"description": ""
										},
										{
											"key": "Date",
											"value": "Mon, 05 Mar 2018 14:40:09 GMT",
											"name": "Date",
											"description": ""
										},
										{
											"key": "X-Response-Time",
											"value": "62ms",
											"name": "X-Response-Time",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\"status\":\"preparation\",\"answerTime\":10000,\"createdAt\":\"2018-03-05T14:35:58.816Z\",\"description\":\"Test Trivia\",\"id\":\"9b247a8d-09e2-4449-bf0c-81df588ddd11\",\"maxLatency\":3000,\"streamId\":\"abe2c3fb-a60a-41ee-b6e3-a649755bdea2\",\"title\":\"Test Quiz\",\"questions\":[]}"
								}
							]
						},
						{
							"name": "Create Question",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "d6a880f7-acab-46be-bcec-7fd92176310f",
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code is 200\"] = responseCode.code === 200;",
											"var data = JSON.parse(responseBody);",
											"tests[\"Response has an id\"] = data.id !== null;",
											"postman.setEnvironmentVariable(\"questionId\", data.id);"
										]
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{adminToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"text\": \"Which best movie won the Palme d'Or in 2017\",\n\t\"answers\": [\n\t\t{\n\t\t\t\"id\": 0,\n\t\t\t\"text\": \"The Square\"\n\t\t},\n\t\t{\n\t\t\t\"id\": 1,\n\t\t\t\"text\": \"The Circle\"\n\t\t},\n\t\t{\n\t\t\t\"id\": 2,\n\t\t\t\"text\": \"The Triangle\"\n\t\t}\n\t],\n\t\"correct\": [0]\n}"
								},
								"url": {
									"raw": "{{quizApiHost}}/v1/channels/{{channelId}}/streams/{{streamId}}/quiz/{{quizId}}/question",
									"host": [
										"{{quizApiHost}}"
									],
									"path": [
										"v1",
										"channels",
										"{{channelId}}",
										"streams",
										"{{streamId}}",
										"quiz",
										"{{quizId}}",
										"question"
									]
								},
								"description": "Create a poll."
							},
							"response": [
								{
									"name": "Create Quiz",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"text\": \"Which best movie won the Palme d'Or in 2017\",\n\t\"answers\": [\n\t\t{\n\t\t\t\"id\": 0,\n\t\t\t\"text\": \"The Square\"\n\t\t},\n\t\t{\n\t\t\t\"id\": 1,\n\t\t\t\"text\": \"The Circle\"\n\t\t},\n\t\t{\n\t\t\t\"id\": 2,\n\t\t\t\"text\": \"The Triangle\"\n\t\t}\n\t],\n\t\"correct\": [0]\n}"
										},
										"url": {
											"raw": "{{quizApiHost}}/v1/channels/{{channelId}}/streams/{{streamId}}/quiz/{{quizId}}/question",
											"host": [
												"{{quizApiHost}}"
											],
											"path": [
												"v1",
												"channels",
												"{{channelId}}",
												"streams",
												"{{streamId}}",
												"quiz",
												"{{quizId}}",
												"question"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Access-Control-Allow-Headers",
											"value": "Content-Type, Authorization, Accept, Cache-Control, X-Requested-With",
											"name": "Access-Control-Allow-Headers",
											"description": "Used in response to a preflight request to indicate which HTTP headers can be used when making the actual request."
										},
										{
											"key": "Access-Control-Allow-Methods",
											"value": "GET,PUT,POST,DELETE",
											"name": "Access-Control-Allow-Methods",
											"description": "Specifies the method or methods allowed when accessing the resource. This is used in response to a preflight request."
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*",
											"name": "Access-Control-Allow-Origin",
											"description": "Specifies a URI that may access the resource. For requests without credentials, the server may specify '*' as a wildcard, thereby allowing any origin to access the resource."
										},
										{
											"key": "Connection",
											"value": "keep-alive",
											"name": "Connection",
											"description": "Options that are desired for the connection"
										},
										{
											"key": "Content-Length",
											"value": "242",
											"name": "Content-Length",
											"description": "The length of the response body in octets (8-bit bytes)"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8",
											"name": "Content-Type",
											"description": "The mime type of this content"
										},
										{
											"key": "Date",
											"value": "Mon, 05 Mar 2018 14:35:58 GMT",
											"name": "Date",
											"description": "The date and time that the message was sent"
										},
										{
											"key": "X-Response-Time",
											"value": "92ms",
											"name": "X-Response-Time",
											"description": "Custom header"
										}
									],
									"cookie": [],
									"body": "{\"answerTime\":10000,\"maxLatency\":3000,\"title\":\"Test Quiz\",\"description\":\"Test Trivia\",\"status\":\"preparation\",\"id\":\"9b247a8d-09e2-4449-bf0c-81df588ddd11\",\"streamId\":\"abe2c3fb-a60a-41ee-b6e3-a649755bdea2\",\"createdAt\":\"2018-03-05T14:35:58.816Z\"}"
								}
							]
						},
						{
							"name": "Update Question",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "17f6024d-0a56-4948-9671-6146928fcc1a",
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code is 200\"] = responseCode.code === 200;",
											"var data = JSON.parse(responseBody);",
											"tests[\"Response has an id\"] = data.id !== null;",
											"postman.setEnvironmentVariable(\"quizId\", data.id);"
										]
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{adminToken}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"text\": \"Which movie won the Palme d'Or in 2017\",\n\t\"answers\": [\n\t\t{\n\t\t\t\"id\": 0,\n\t\t\t\"text\": \"The Square\"\n\t\t},\n\t\t{\n\t\t\t\"id\": 1,\n\t\t\t\"text\": \"The Circle\"\n\t\t},\n\t\t{\n\t\t\t\"id\": 2,\n\t\t\t\"text\": \"The Triangle\"\n\t\t}\n\t],\n\t\"correct\": [0]\n}"
								},
								"url": {
									"raw": "{{quizApiHost}}/v1/channels/{{channelId}}/streams/{{streamId}}/quiz/{{quizId}}/question/{{questionId}}",
									"host": [
										"{{quizApiHost}}"
									],
									"path": [
										"v1",
										"channels",
										"{{channelId}}",
										"streams",
										"{{streamId}}",
										"quiz",
										"{{quizId}}",
										"question",
										"{{questionId}}"
									]
								},
								"description": "Create a poll."
							},
							"response": [
								{
									"name": "Create Quiz",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"text\": \"Which movie won the Palme d'Or in 2017\",\n\t\"answers\": [\n\t\t{\n\t\t\t\"id\": 0,\n\t\t\t\"text\": \"The Square\"\n\t\t},\n\t\t{\n\t\t\t\"id\": 1,\n\t\t\t\"text\": \"The Circle\"\n\t\t},\n\t\t{\n\t\t\t\"id\": 2,\n\t\t\t\"text\": \"The Triangle\"\n\t\t}\n\t],\n\t\"correct\": [0]\n}"
										},
										"url": {
											"raw": "{{quizApiHost}}/v1/channels/{{channelId}}/streams/{{streamId}}/quiz/{{quizId}}/question/{{questionId}}",
											"host": [
												"{{quizApiHost}}"
											],
											"path": [
												"v1",
												"channels",
												"{{channelId}}",
												"streams",
												"{{streamId}}",
												"quiz",
												"{{quizId}}",
												"question",
												"{{questionId}}"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Access-Control-Allow-Headers",
											"value": "Content-Type, Authorization, Accept, Cache-Control, X-Requested-With",
											"name": "Access-Control-Allow-Headers",
											"description": "Used in response to a preflight request to indicate which HTTP headers can be used when making the actual request."
										},
										{
											"key": "Access-Control-Allow-Methods",
											"value": "GET,PUT,POST,DELETE",
											"name": "Access-Control-Allow-Methods",
											"description": "Specifies the method or methods allowed when accessing the resource. This is used in response to a preflight request."
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*",
											"name": "Access-Control-Allow-Origin",
											"description": "Specifies a URI that may access the resource. For requests without credentials, the server may specify '*' as a wildcard, thereby allowing any origin to access the resource."
										},
										{
											"key": "Connection",
											"value": "keep-alive",
											"name": "Connection",
											"description": "Options that are desired for the connection"
										},
										{
											"key": "Content-Length",
											"value": "242",
											"name": "Content-Length",
											"description": "The length of the response body in octets (8-bit bytes)"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8",
											"name": "Content-Type",
											"description": "The mime type of this content"
										},
										{
											"key": "Date",
											"value": "Mon, 05 Mar 2018 14:35:58 GMT",
											"name": "Date",
											"description": "The date and time that the message was sent"
										},
										{
											"key": "X-Response-Time",
											"value": "92ms",
											"name": "X-Response-Time",
											"description": "Custom header"
										}
									],
									"cookie": [],
									"body": "{\"answerTime\":10000,\"maxLatency\":3000,\"title\":\"Test Quiz\",\"description\":\"Test Trivia\",\"status\":\"preparation\",\"id\":\"9b247a8d-09e2-4449-bf0c-81df588ddd11\",\"streamId\":\"abe2c3fb-a60a-41ee-b6e3-a649755bdea2\",\"createdAt\":\"2018-03-05T14:35:58.816Z\"}"
								},
								{
									"name": "Update Question",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"text\": \"Which movie won the Palme d'Or in 2017\",\n\t\"answers\": [\n\t\t{\n\t\t\t\"id\": 0,\n\t\t\t\"text\": \"The Square\"\n\t\t},\n\t\t{\n\t\t\t\"id\": 1,\n\t\t\t\"text\": \"The Circle\"\n\t\t},\n\t\t{\n\t\t\t\"id\": 2,\n\t\t\t\"text\": \"The Triangle\"\n\t\t}\n\t],\n\t\"correct\": [0]\n}"
										},
										"url": {
											"raw": "{{quizApiHost}}/v1/channels/{{channelId}}/streams/{{streamId}}/quiz/{{quizId}}/question/{{questionId}}",
											"host": [
												"{{quizApiHost}}"
											],
											"path": [
												"v1",
												"channels",
												"{{channelId}}",
												"streams",
												"{{streamId}}",
												"quiz",
												"{{quizId}}",
												"question",
												"{{questionId}}"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Access-Control-Allow-Headers",
											"value": "Content-Type, Authorization, Accept, Cache-Control, X-Requested-With",
											"name": "Access-Control-Allow-Headers",
											"description": "Used in response to a preflight request to indicate which HTTP headers can be used when making the actual request."
										},
										{
											"key": "Access-Control-Allow-Methods",
											"value": "GET,PUT,POST,DELETE",
											"name": "Access-Control-Allow-Methods",
											"description": "Specifies the method or methods allowed when accessing the resource. This is used in response to a preflight request."
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*",
											"name": "Access-Control-Allow-Origin",
											"description": "Specifies a URI that may access the resource. For requests without credentials, the server may specify '*' as a wildcard, thereby allowing any origin to access the resource."
										},
										{
											"key": "Connection",
											"value": "keep-alive",
											"name": "Connection",
											"description": "Options that are desired for the connection"
										},
										{
											"key": "Content-Length",
											"value": "334",
											"name": "Content-Length",
											"description": "The length of the response body in octets (8-bit bytes)"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8",
											"name": "Content-Type",
											"description": "The mime type of this content"
										},
										{
											"key": "Date",
											"value": "Mon, 05 Mar 2018 14:47:43 GMT",
											"name": "Date",
											"description": "The date and time that the message was sent"
										},
										{
											"key": "X-Response-Time",
											"value": "148ms",
											"name": "X-Response-Time",
											"description": "Custom header"
										}
									],
									"cookie": [],
									"body": "{\"correct\":[0],\"updatedAt\":\"2018-03-05T14:47:43.808Z\",\"createdAt\":\"2018-03-05T14:47:36.370Z\",\"answers\":[{\"id\":0,\"text\":\"The Square\"},{\"id\":1,\"text\":\"The Circle\"},{\"id\":2,\"text\":\"The Triangle\"}],\"text\":\"Which movie won the Palme d'Or in 2017\",\"id\":\"4cef81a6-d25e-4927-8714-48b8f8316d0d\",\"quizId\":\"9b247a8d-09e2-4449-bf0c-81df588ddd11\"}"
								}
							]
						},
						{
							"name": "Delete Question",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "23ccf7c9-696d-4e97-b1fc-70a3fb324258",
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code is 200\"] = responseCode.code === 200;",
											"var data = JSON.parse(responseBody);"
										]
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{adminToken}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{quizApiHost}}/v1/channels/{{channelId}}/streams/{{streamId}}/quiz/{{quizId}}/question/{{questionId}}",
									"host": [
										"{{quizApiHost}}"
									],
									"path": [
										"v1",
										"channels",
										"{{channelId}}",
										"streams",
										"{{streamId}}",
										"quiz",
										"{{quizId}}",
										"question",
										"{{questionId}}"
									]
								},
								"description": "Create a poll."
							},
							"response": []
						},
						{
							"name": "Start Quiz",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "aeb871eb-07fb-49f4-8c4b-48c070fdc646",
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code is 200\"] = responseCode.code === 200;",
											"var data = JSON.parse(responseBody);"
										]
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{adminToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{}"
								},
								"url": {
									"raw": "{{quizApiHost}}/v1/channels/{{channelId}}/streams/{{streamId}}/quiz/{{quizId}}/start",
									"host": [
										"{{quizApiHost}}"
									],
									"path": [
										"v1",
										"channels",
										"{{channelId}}",
										"streams",
										"{{streamId}}",
										"quiz",
										"{{quizId}}",
										"start"
									]
								},
								"description": "Create a poll."
							},
							"response": []
						},
						{
							"name": "Launch Question",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "23ccf7c9-696d-4e97-b1fc-70a3fb324258",
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code is 200\"] = responseCode.code === 200;",
											"var data = JSON.parse(responseBody);"
										]
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{adminToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{quizApiHost}}/v1/channels/{{channelId}}/streams/{{streamId}}/quiz/{{quizId}}/question/{{questionId}}/launch",
									"host": [
										"{{quizApiHost}}"
									],
									"path": [
										"v1",
										"channels",
										"{{channelId}}",
										"streams",
										"{{streamId}}",
										"quiz",
										"{{quizId}}",
										"question",
										"{{questionId}}",
										"launch"
									]
								},
								"description": "Launches the specified question for this quiz. See [Get Quiz Config](#77a182c3-bd26-4ef9-8070-1f2a92bc7bc1) or [Get Quiz](#25dcb7fd-e7b9-4dc2-87c6-cb76af6d4870) to get the questions."
							},
							"response": []
						},
						{
							"name": "Broadcast Quiz Results",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "23ccf7c9-696d-4e97-b1fc-70a3fb324258",
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code is 200\"] = responseCode.code === 200;",
											"var data = JSON.parse(responseBody);"
										]
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{adminToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{}"
								},
								"url": {
									"raw": "{{quizApiHost}}/v1/channels/{{channelId}}/streams/{{streamId}}/quiz/{{quizId}}/results",
									"host": [
										"{{quizApiHost}}"
									],
									"path": [
										"v1",
										"channels",
										"{{channelId}}",
										"streams",
										"{{streamId}}",
										"quiz",
										"{{quizId}}",
										"results"
									]
								},
								"description": "Create a poll."
							},
							"response": []
						},
						{
							"name": "Retrieve Quiz Results",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "23ccf7c9-696d-4e97-b1fc-70a3fb324258",
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code is 200\"] = responseCode.code === 200;",
											"var data = JSON.parse(responseBody);"
										]
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{adminToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{quizApiHost}}/v1/channels/{{channelId}}/streams/{{streamId}}/quiz/{{quizId}}/results",
									"host": [
										"{{quizApiHost}}"
									],
									"path": [
										"v1",
										"channels",
										"{{channelId}}",
										"streams",
										"{{streamId}}",
										"quiz",
										"{{quizId}}",
										"results"
									]
								},
								"description": "Get the quiz results."
							},
							"response": [
								{
									"name": "Retrieve Quiz Results",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"disabled": false
											}
										],
										"url": {
											"raw": "{{quizApiHost}}/v1/channels/{{channelId}}/streams/{{streamId}}/quiz/{{quizId}}/results",
											"host": [
												"{{quizApiHost}}"
											],
											"path": [
												"v1",
												"channels",
												"{{channelId}}",
												"streams",
												"{{streamId}}",
												"quiz",
												"{{quizId}}",
												"results"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Access-Control-Allow-Headers",
											"value": "Content-Type, Authorization, Accept, Cache-Control, X-Requested-With",
											"name": "Access-Control-Allow-Headers",
											"description": "Used in response to a preflight request to indicate which HTTP headers can be used when making the actual request."
										},
										{
											"key": "Access-Control-Allow-Methods",
											"value": "GET,PUT,POST,DELETE",
											"name": "Access-Control-Allow-Methods",
											"description": "Specifies the method or methods allowed when accessing the resource. This is used in response to a preflight request."
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*",
											"name": "Access-Control-Allow-Origin",
											"description": "Specifies a URI that may access the resource. For requests without credentials, the server may specify '*' as a wildcard, thereby allowing any origin to access the resource."
										},
										{
											"key": "Connection",
											"value": "keep-alive",
											"name": "Connection",
											"description": "Options that are desired for the connection"
										},
										{
											"key": "Content-Length",
											"value": "174",
											"name": "Content-Length",
											"description": "The length of the response body in octets (8-bit bytes)"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8",
											"name": "Content-Type",
											"description": "The mime type of this content"
										},
										{
											"key": "Date",
											"value": "Fri, 07 Sep 2018 08:56:50 GMT",
											"name": "Date",
											"description": "The date and time that the message was sent"
										},
										{
											"key": "X-Response-Time",
											"value": "37ms",
											"name": "X-Response-Time",
											"description": "Custom header"
										}
									],
									"cookie": [],
									"body": "{\"winners\":[{\"id\":\"309ae678-b9ec-42b0-86fc-d4de304c7dcd\",\"name\":\"Jan Willem\",\"avatar\":\"https://graph.facebook.com/1854345981301940/picture?width=250&type=square\"}],\"count\":1}"
								}
							]
						},
						{
							"name": "Stop Quiz",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "aeb871eb-07fb-49f4-8c4b-48c070fdc646",
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code is 200\"] = responseCode.code === 200;",
											"var data = JSON.parse(responseBody);"
										]
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{adminToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{}"
								},
								"url": {
									"raw": "{{quizApiHost}}/v1/channels/{{channelId}}/streams/{{streamId}}/quiz/{{quizId}}/stop",
									"host": [
										"{{quizApiHost}}"
									],
									"path": [
										"v1",
										"channels",
										"{{channelId}}",
										"streams",
										"{{streamId}}",
										"quiz",
										"{{quizId}}",
										"stop"
									]
								},
								"description": "Create a poll."
							},
							"response": []
						},
						{
							"name": "Reset Quiz",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "aeb871eb-07fb-49f4-8c4b-48c070fdc646",
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code is 200\"] = responseCode.code === 200;",
											"var data = JSON.parse(responseBody);"
										]
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{adminToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{}"
								},
								"url": {
									"raw": "{{quizApiHost}}/v1/channels/{{channelId}}/streams/{{streamId}}/quiz/{{quizId}}/reset",
									"host": [
										"{{quizApiHost}}"
									],
									"path": [
										"v1",
										"channels",
										"{{channelId}}",
										"streams",
										"{{streamId}}",
										"quiz",
										"{{quizId}}",
										"reset"
									]
								},
								"description": "Create a poll."
							},
							"response": []
						},
						{
							"name": "Delete Quiz",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "aeb871eb-07fb-49f4-8c4b-48c070fdc646",
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code is 200\"] = responseCode.code === 200;",
											"var data = JSON.parse(responseBody);"
										]
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{adminToken}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{}"
								},
								"url": {
									"raw": "{{quizApiHost}}/v1/channels/{{channelId}}/streams/{{streamId}}/quiz/{{quizId}}",
									"host": [
										"{{quizApiHost}}"
									],
									"path": [
										"v1",
										"channels",
										"{{channelId}}",
										"streams",
										"{{streamId}}",
										"quiz",
										"{{quizId}}"
									]
								},
								"description": "Create a poll."
							},
							"response": []
						},
						{
							"name": "Clear Quiz Referrer code",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code is 200\"] = responseCode.code === 200;",
											"var data = JSON.parse(responseBody);"
										]
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{adminToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "",
										"value": ""
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"shareCode\": \"ddddd\"\n}"
								},
								"url": {
									"raw": "{{quizApiHost}}/v1/channels/{{channelId}}/streams/{{streamId}}/quiz/clearReferrer",
									"host": [
										"{{quizApiHost}}"
									],
									"path": [
										"v1",
										"channels",
										"{{channelId}}",
										"streams",
										"{{streamId}}",
										"quiz",
										"clearReferrer"
									]
								},
								"description": "Clears referrer code for user with specified share code.\n\n| Permissions         | no token | anonymous token | provider token | admin token |\n| ------------------- | :------: | :-------------: | :------------: | :---------: |\n| Clear referrer code | -        | -               | -              | x           |"
							},
							"response": [
								{
									"name": "Not found",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"disabled": false
											},
											{
												"key": "",
												"value": "",
												"disabled": false
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"shareCode\": \"abcd\"\n}"
										},
										"url": {
											"raw": "{{quizApiHost}}/v1/channels/{{channelId}}/streams/{{streamId}}/quiz/clearReferrer",
											"host": [
												"{{quizApiHost}}"
											],
											"path": [
												"v1",
												"channels",
												"{{channelId}}",
												"streams",
												"{{streamId}}",
												"quiz",
												"clearReferrer"
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Access-Control-Allow-Headers",
											"value": "Content-Type, Authorization, Accept, Cache-Control, X-Requested-With",
											"name": "Access-Control-Allow-Headers",
											"description": "Used in response to a preflight request to indicate which HTTP headers can be used when making the actual request."
										},
										{
											"key": "Access-Control-Allow-Methods",
											"value": "GET,PUT,POST,DELETE",
											"name": "Access-Control-Allow-Methods",
											"description": "Specifies the method or methods allowed when accessing the resource. This is used in response to a preflight request."
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*",
											"name": "Access-Control-Allow-Origin",
											"description": "Specifies a URI that may access the resource. For requests without credentials, the server may specify '*' as a wildcard, thereby allowing any origin to access the resource."
										},
										{
											"key": "Connection",
											"value": "keep-alive",
											"name": "Connection",
											"description": "Options that are desired for the connection"
										},
										{
											"key": "Content-Length",
											"value": "59",
											"name": "Content-Length",
											"description": "The length of the response body in octets (8-bit bytes)"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8",
											"name": "Content-Type",
											"description": "The mime type of this content"
										},
										{
											"key": "Date",
											"value": "Tue, 21 Aug 2018 14:48:05 GMT",
											"name": "Date",
											"description": "The date and time that the message was sent"
										},
										{
											"key": "X-Response-Time",
											"value": "37ms",
											"name": "X-Response-Time",
											"description": "Custom header"
										}
									],
									"cookie": [],
									"body": "{\"code\":\"NOT_FOUND\",\"message\":\"Share code does not exist.\"}"
								},
								{
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"disabled": false
											},
											{
												"key": "",
												"value": "",
												"disabled": false
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"shareCode\": \"ddddd\"\n}"
										},
										"url": {
											"raw": "{{quizApiHost}}/v1/channels/{{channelId}}/streams/{{streamId}}/quiz/clearReferrer",
											"host": [
												"{{quizApiHost}}"
											],
											"path": [
												"v1",
												"channels",
												"{{channelId}}",
												"streams",
												"{{streamId}}",
												"quiz",
												"clearReferrer"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Access-Control-Allow-Headers",
											"value": "Content-Type, Authorization, Accept, Cache-Control, X-Requested-With",
											"name": "Access-Control-Allow-Headers",
											"description": "Used in response to a preflight request to indicate which HTTP headers can be used when making the actual request."
										},
										{
											"key": "Access-Control-Allow-Methods",
											"value": "GET,PUT,POST,DELETE",
											"name": "Access-Control-Allow-Methods",
											"description": "Specifies the method or methods allowed when accessing the resource. This is used in response to a preflight request."
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*",
											"name": "Access-Control-Allow-Origin",
											"description": "Specifies a URI that may access the resource. For requests without credentials, the server may specify '*' as a wildcard, thereby allowing any origin to access the resource."
										},
										{
											"key": "Connection",
											"value": "keep-alive",
											"name": "Connection",
											"description": "Options that are desired for the connection"
										},
										{
											"key": "Content-Length",
											"value": "2",
											"name": "Content-Length",
											"description": "The length of the response body in octets (8-bit bytes)"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8",
											"name": "Content-Type",
											"description": "The mime type of this content"
										},
										{
											"key": "Date",
											"value": "Tue, 21 Aug 2018 14:49:05 GMT",
											"name": "Date",
											"description": "The date and time that the message was sent"
										},
										{
											"key": "X-Response-Time",
											"value": "107ms",
											"name": "X-Response-Time",
											"description": "Custom header"
										}
									],
									"cookie": [],
									"body": "{}"
								}
							]
						},
						{
							"name": "Download quiz winners",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "3e6db58e-11a0-47c3-858c-4bd67e7e80af",
										"exec": [
											"tests[\"Status code is 200\"] = responseCode.code === 200;",
											"var data = JSON.parse(responseBody);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{adminToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{quizApiHost}}/v1/channels/{{channelId}}/streams/{{streamId}}/quiz/{{quizId}}/leaderboard/win/export",
									"host": [
										"{{quizApiHost}}"
									],
									"path": [
										"v1",
										"channels",
										"{{channelId}}",
										"streams",
										"{{streamId}}",
										"quiz",
										"{{quizId}}",
										"leaderboard",
										"win",
										"export"
									]
								},
								"description": "To download winners as csv, use 'Accept: text/csv', to download as json: 'Accept: application/json'.\n\n| Permissions      | no token | anonymous token | provider token | admin token |\n| ---------------- | :------: | :-------------: | :------------: | :---------: |\n| Download winners | -        | -               | -              | x           |"
							},
							"response": [
								{
									"name": "Download quiz winners as csv",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "text/csv"
											}
										],
										"url": {
											"raw": "{{quizApiHost}}/v1/channels/{{channelId}}/streams/{{streamId}}/quiz/{{quizId}}/leaderboard/win/export",
											"host": [
												"{{quizApiHost}}"
											],
											"path": [
												"v1",
												"channels",
												"{{channelId}}",
												"streams",
												"{{streamId}}",
												"quiz",
												"{{quizId}}",
												"leaderboard",
												"win",
												"export"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "plain",
									"header": [
										{
											"key": "Date",
											"value": "Wed, 26 Jun 2019 14:20:15 GMT"
										},
										{
											"key": "Content-Type",
											"value": "text/csv"
										},
										{
											"key": "Content-Length",
											"value": "167"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "Access-Control-Allow-Methods",
											"value": "GET,PUT,POST,DELETE"
										},
										{
											"key": "Access-Control-Allow-Headers",
											"value": "Content-Type, Authorization, Accept, Cache-Control, X-Requested-With"
										},
										{
											"key": "Vary",
											"value": "Accept-Encoding"
										},
										{
											"key": "Content-Disposition",
											"value": "attachment; filename=\"4306f144-e794-436d-b900-7704566f497b_winners.csv\""
										},
										{
											"key": "X-Response-Time",
											"value": "172ms"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache,max-age=0"
										}
									],
									"cookie": [],
									"body": "\"id\",\"Name\",\"Username\",\"Login Provider\",\"Login Provider id\",\"Win amount\"\n\"e093ef70-f231-4699-9798-4f77a7886fae\",\"Jan Willem\",\"Jan\",\"facebook\",\"1753346941202930\",\"50.00\""
								},
								{
									"name": "Download quiz winners as json",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{quizApiHost}}/v1/channels/{{channelId}}/streams/{{streamId}}/quiz/{{quizId}}/leaderboard/win/export",
											"host": [
												"{{quizApiHost}}"
											],
											"path": [
												"v1",
												"channels",
												"{{channelId}}",
												"streams",
												"{{streamId}}",
												"quiz",
												"{{quizId}}",
												"leaderboard",
												"win",
												"export"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Date",
											"value": "Wed, 26 Jun 2019 14:07:36 GMT"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "183"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "Access-Control-Allow-Methods",
											"value": "GET,PUT,POST,DELETE"
										},
										{
											"key": "Access-Control-Allow-Headers",
											"value": "Content-Type, Authorization, Accept, Cache-Control, X-Requested-With"
										},
										{
											"key": "Vary",
											"value": "Accept-Encoding"
										},
										{
											"key": "X-Response-Time",
											"value": "164ms"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache,max-age=0"
										}
									],
									"cookie": [],
									"body": "{\n    \"winners\": [\n        {\n            \"id\": \"e093ef70-f231-4699-9798-4f77a7886fae\",\n            \"Name\": \"Jan Willem\",\n            \"Username\": \"Jan\",\n            \"Login Provider\": \"facebook\",\n            \"Login Provider id\": \"1753346941202930\",\n            \"Win amount\": \"50.00\"\n        }\n    ]\n}"
								},
								{
									"name": "Empty result",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"disabled": false
											},
											{
												"key": "",
												"value": "",
												"disabled": true
											}
										],
										"url": {
											"raw": "{{quizApiHost}}/v1/channels/{{channelId}}/streams/{{streamId}}/quiz/{{quizId}}/leaderboard/win/export",
											"host": [
												"{{quizApiHost}}"
											],
											"path": [
												"v1",
												"channels",
												"{{channelId}}",
												"streams",
												"{{streamId}}",
												"quiz",
												"{{quizId}}",
												"leaderboard",
												"win",
												"export"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "plain",
									"header": [
										{
											"key": "Access-Control-Allow-Headers",
											"value": "Content-Type, Authorization, Accept, Cache-Control, X-Requested-With",
											"name": "Access-Control-Allow-Headers",
											"description": "Used in response to a preflight request to indicate which HTTP headers can be used when making the actual request."
										},
										{
											"key": "Access-Control-Allow-Methods",
											"value": "GET,PUT,POST,DELETE",
											"name": "Access-Control-Allow-Methods",
											"description": "Specifies the method or methods allowed when accessing the resource. This is used in response to a preflight request."
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*",
											"name": "Access-Control-Allow-Origin",
											"description": "Specifies a URI that may access the resource. For requests without credentials, the server may specify '*' as a wildcard, thereby allowing any origin to access the resource."
										},
										{
											"key": "Cache-Control",
											"value": "no-cache,max-age=0",
											"name": "Cache-Control",
											"description": "Tells all caching mechanisms from server to client whether they may cache this object. It is measured in seconds"
										},
										{
											"key": "Connection",
											"value": "keep-alive",
											"name": "Connection",
											"description": "Options that are desired for the connection"
										},
										{
											"key": "Content-Disposition",
											"value": "attachment; filename=\"{{quizId}}_winners.csv\"",
											"name": "Content-Disposition",
											"description": "An opportunity to raise a \"File Download\" dialogue box for a known MIME type"
										},
										{
											"key": "Content-Length",
											"value": "48",
											"name": "Content-Length",
											"description": "The length of the response body in octets (8-bit bytes)"
										},
										{
											"key": "Content-Type",
											"value": "text/csv",
											"name": "Content-Type",
											"description": "The mime type of this content"
										},
										{
											"key": "Date",
											"value": "Tue, 21 Aug 2018 14:49:37 GMT",
											"name": "Date",
											"description": "The date and time that the message was sent"
										},
										{
											"key": "X-Response-Time",
											"value": "22ms",
											"name": "X-Response-Time",
											"description": "Custom header"
										}
									],
									"cookie": [],
									"body": "\"id\",\"Name\",\"Login Provider\",\"Login Provider id\""
								}
							]
						},
						{
							"name": "Download quiz players",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "3e6db58e-11a0-47c3-858c-4bd67e7e80af",
										"exec": [
											"tests[\"Status code is 200\"] = responseCode.code === 200;",
											"var data = JSON.parse(responseBody);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{adminToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{quizApiHost}}/v1/channels/{{channelId}}/streams/{{streamId}}/quiz/{{quizId}}/players",
									"host": [
										"{{quizApiHost}}"
									],
									"path": [
										"v1",
										"channels",
										"{{channelId}}",
										"streams",
										"{{streamId}}",
										"quiz",
										"{{quizId}}",
										"players"
									]
								},
								"description": "To download a list of quiz players as csv, use 'Accept: text/csv', to download as json: 'Accept: application/json'.\n\n| Permissions      | no token | anonymous token | provider token | admin token |\n| ---------------- | :------: | :-------------: | :------------: | :---------: |\n| Download winners | -        | -               | -              | x           |"
							},
							"response": [
								{
									"name": "Download quiz players as json",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{quizApiHost}}/v1/channels/{{channelId}}/streams/{{streamId}}/quiz/{{quizId}}/players",
											"host": [
												"{{quizApiHost}}"
											],
											"path": [
												"v1",
												"channels",
												"{{channelId}}",
												"streams",
												"{{streamId}}",
												"quiz",
												"{{quizId}}",
												"players"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Date",
											"value": "Wed, 26 Jun 2019 14:07:36 GMT"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "183"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "Access-Control-Allow-Methods",
											"value": "GET,PUT,POST,DELETE"
										},
										{
											"key": "Access-Control-Allow-Headers",
											"value": "Content-Type, Authorization, Accept, Cache-Control, X-Requested-With"
										},
										{
											"key": "Vary",
											"value": "Accept-Encoding"
										},
										{
											"key": "X-Response-Time",
											"value": "164ms"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache,max-age=0"
										}
									],
									"cookie": [],
									"body": "{\n    \"players\": [\n        {\n            \"id\": \"e093ef70-f231-4699-9798-4f77a7886fae\",\n            \"Name\": \"Jan Willem\",\n            \"Username\": \"Jan\",\n            \"Login Provider\": \"facebook\",\n            \"Login Provider id\": \"1753346941202930\",\n            \"Win amount\": \"50.00\"\n        }\n    ]\n}"
								},
								{
									"name": "Download quiz players as csv",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "text/csv"
											}
										],
										"url": {
											"raw": "{{quizApiHost}}/v1/channels/{{channelId}}/streams/{{streamId}}/quiz/{{quizId}}/players",
											"host": [
												"{{quizApiHost}}"
											],
											"path": [
												"v1",
												"channels",
												"{{channelId}}",
												"streams",
												"{{streamId}}",
												"quiz",
												"{{quizId}}",
												"players"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "plain",
									"header": [
										{
											"key": "Date",
											"value": "Wed, 26 Jun 2019 14:20:15 GMT"
										},
										{
											"key": "Content-Type",
											"value": "text/csv"
										},
										{
											"key": "Content-Length",
											"value": "167"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "Access-Control-Allow-Methods",
											"value": "GET,PUT,POST,DELETE"
										},
										{
											"key": "Access-Control-Allow-Headers",
											"value": "Content-Type, Authorization, Accept, Cache-Control, X-Requested-With"
										},
										{
											"key": "Vary",
											"value": "Accept-Encoding"
										},
										{
											"key": "Content-Disposition",
											"value": "attachment; filename=\"4306f144-e794-436d-b900-7704566f497b_winners.csv\""
										},
										{
											"key": "X-Response-Time",
											"value": "172ms"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache,max-age=0"
										}
									],
									"cookie": [],
									"body": "\"id\",\"Name\",\"Username\",\"Login Provider\",\"Login Provider id\"\n\"e093ef70-f231-4699-9798-4f77a7886fae\",\"Jan Willem\",\"Jan\",\"facebook\",\"1753346941202930\""
								},
								{
									"name": "Empty result",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"disabled": false
											},
											{
												"key": "",
												"value": "",
												"disabled": true
											}
										],
										"url": {
											"raw": "{{quizApiHost}}/v1/channels/{{channelId}}/streams/{{streamId}}/quiz/{{quizId}}/leaderboard/win/export",
											"host": [
												"{{quizApiHost}}"
											],
											"path": [
												"v1",
												"channels",
												"{{channelId}}",
												"streams",
												"{{streamId}}",
												"quiz",
												"{{quizId}}",
												"leaderboard",
												"win",
												"export"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "plain",
									"header": [
										{
											"key": "Access-Control-Allow-Headers",
											"value": "Content-Type, Authorization, Accept, Cache-Control, X-Requested-With",
											"name": "Access-Control-Allow-Headers",
											"description": "Used in response to a preflight request to indicate which HTTP headers can be used when making the actual request."
										},
										{
											"key": "Access-Control-Allow-Methods",
											"value": "GET,PUT,POST,DELETE",
											"name": "Access-Control-Allow-Methods",
											"description": "Specifies the method or methods allowed when accessing the resource. This is used in response to a preflight request."
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*",
											"name": "Access-Control-Allow-Origin",
											"description": "Specifies a URI that may access the resource. For requests without credentials, the server may specify '*' as a wildcard, thereby allowing any origin to access the resource."
										},
										{
											"key": "Cache-Control",
											"value": "no-cache,max-age=0",
											"name": "Cache-Control",
											"description": "Tells all caching mechanisms from server to client whether they may cache this object. It is measured in seconds"
										},
										{
											"key": "Connection",
											"value": "keep-alive",
											"name": "Connection",
											"description": "Options that are desired for the connection"
										},
										{
											"key": "Content-Disposition",
											"value": "attachment; filename=\"{{quizId}}_winners.csv\"",
											"name": "Content-Disposition",
											"description": "An opportunity to raise a \"File Download\" dialogue box for a known MIME type"
										},
										{
											"key": "Content-Length",
											"value": "48",
											"name": "Content-Length",
											"description": "The length of the response body in octets (8-bit bytes)"
										},
										{
											"key": "Content-Type",
											"value": "text/csv",
											"name": "Content-Type",
											"description": "The mime type of this content"
										},
										{
											"key": "Date",
											"value": "Tue, 21 Aug 2018 14:49:37 GMT",
											"name": "Date",
											"description": "The date and time that the message was sent"
										},
										{
											"key": "X-Response-Time",
											"value": "22ms",
											"name": "X-Response-Time",
											"description": "Custom header"
										}
									],
									"cookie": [],
									"body": "\"id\",\"Name\",\"Login Provider\",\"Login Provider id\""
								}
							]
						},
						{
							"name": "Download quiz player stats",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "3e6db58e-11a0-47c3-858c-4bd67e7e80af",
										"exec": [
											"tests[\"Status code is 200\"] = responseCode.code === 200;",
											"var data = JSON.parse(responseBody);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{adminToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "text/csv"
									}
								],
								"url": {
									"raw": "{{quizApiHost}}/v1/channels/{{channelId}}/streams/{{streamId}}/quiz/{{quizId}}/playerStats",
									"host": [
										"{{quizApiHost}}"
									],
									"path": [
										"v1",
										"channels",
										"{{channelId}}",
										"streams",
										"{{streamId}}",
										"quiz",
										"{{quizId}}",
										"playerStats"
									]
								},
								"description": "To download a list of quiz player stats as csv, use 'Accept: text/csv', to download as json: 'Accept: application/json'.\n\n| Permissions      | no token | anonymous token | provider token | admin token |\n| ---------------- | :------: | :-------------: | :------------: | :---------: |\n| Download winners | -        | -               | -              | x           |"
							},
							"response": [
								{
									"name": "Download quiz player stats as csv",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "text/csv"
											}
										],
										"url": {
											"raw": "{{quizApiHost}}/v1/channels/{{channelId}}/streams/{{streamId}}/quiz/{{quizId}}/playerStats",
											"host": [
												"{{quizApiHost}}"
											],
											"path": [
												"v1",
												"channels",
												"{{channelId}}",
												"streams",
												"{{streamId}}",
												"quiz",
												"{{quizId}}",
												"playerStats"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "plain",
									"header": [
										{
											"key": "Date",
											"value": "Wed, 04 Sep 2019 09:41:29 GMT"
										},
										{
											"key": "Content-Type",
											"value": "text/csv"
										},
										{
											"key": "Content-Length",
											"value": "215"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "Access-Control-Allow-Methods",
											"value": "GET,PUT,POST,DELETE"
										},
										{
											"key": "Access-Control-Allow-Headers",
											"value": "Content-Type, Authorization, Accept, Cache-Control, X-Requested-With"
										},
										{
											"key": "Vary",
											"value": "Accept-Encoding"
										},
										{
											"key": "Content-Disposition",
											"value": "attachment; filename=\"4306f144-e794-436d-b900-7704566f497b_winners.csv\""
										},
										{
											"key": "X-Response-Time",
											"value": "137ms"
										}
									],
									"cookie": [],
									"body": "\"id\",\"Name\",\"Username\",\"Login Provider\",\"Login Provider id\",\"Correct Answers\",\"Used Extra Lives\"\n\"356fe6a4-83bc-47bf-b2c0-5e2af1e505d8\",\"Anonymous\",\"anonymous2692\",\"device\",\"c49cbeef-8fb4-4caa-88e9-3ca53a762618\",1,0"
								},
								{
									"name": "Empty result",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"disabled": false
											},
											{
												"key": "",
												"value": "",
												"disabled": true
											}
										],
										"url": {
											"raw": "{{quizApiHost}}/v1/channels/{{channelId}}/streams/{{streamId}}/quiz/{{quizId}}/leaderboard/win/export",
											"host": [
												"{{quizApiHost}}"
											],
											"path": [
												"v1",
												"channels",
												"{{channelId}}",
												"streams",
												"{{streamId}}",
												"quiz",
												"{{quizId}}",
												"leaderboard",
												"win",
												"export"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "plain",
									"header": [
										{
											"key": "Access-Control-Allow-Headers",
											"value": "Content-Type, Authorization, Accept, Cache-Control, X-Requested-With",
											"name": "Access-Control-Allow-Headers",
											"description": "Used in response to a preflight request to indicate which HTTP headers can be used when making the actual request."
										},
										{
											"key": "Access-Control-Allow-Methods",
											"value": "GET,PUT,POST,DELETE",
											"name": "Access-Control-Allow-Methods",
											"description": "Specifies the method or methods allowed when accessing the resource. This is used in response to a preflight request."
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*",
											"name": "Access-Control-Allow-Origin",
											"description": "Specifies a URI that may access the resource. For requests without credentials, the server may specify '*' as a wildcard, thereby allowing any origin to access the resource."
										},
										{
											"key": "Cache-Control",
											"value": "no-cache,max-age=0",
											"name": "Cache-Control",
											"description": "Tells all caching mechanisms from server to client whether they may cache this object. It is measured in seconds"
										},
										{
											"key": "Connection",
											"value": "keep-alive",
											"name": "Connection",
											"description": "Options that are desired for the connection"
										},
										{
											"key": "Content-Disposition",
											"value": "attachment; filename=\"{{quizId}}_winners.csv\"",
											"name": "Content-Disposition",
											"description": "An opportunity to raise a \"File Download\" dialogue box for a known MIME type"
										},
										{
											"key": "Content-Length",
											"value": "48",
											"name": "Content-Length",
											"description": "The length of the response body in octets (8-bit bytes)"
										},
										{
											"key": "Content-Type",
											"value": "text/csv",
											"name": "Content-Type",
											"description": "The mime type of this content"
										},
										{
											"key": "Date",
											"value": "Tue, 21 Aug 2018 14:49:37 GMT",
											"name": "Date",
											"description": "The date and time that the message was sent"
										},
										{
											"key": "X-Response-Time",
											"value": "22ms",
											"name": "X-Response-Time",
											"description": "Custom header"
										}
									],
									"cookie": [],
									"body": "\"id\",\"Name\",\"Username\",\"Login Provider\",\"Login Provider id\",\"Correct Answers\",\"Used Extra Lives\"\n"
								},
								{
									"name": "Download quiz player stats as json",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{quizApiHost}}/v1/channels/{{channelId}}/streams/{{streamId}}/quiz/{{quizId}}/playerStats",
											"host": [
												"{{quizApiHost}}"
											],
											"path": [
												"v1",
												"channels",
												"{{channelId}}",
												"streams",
												"{{streamId}}",
												"quiz",
												"{{quizId}}",
												"playerStats"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Date",
											"value": "Wed, 04 Sep 2019 09:39:45 GMT"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "229"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "Access-Control-Allow-Methods",
											"value": "GET,PUT,POST,DELETE"
										},
										{
											"key": "Access-Control-Allow-Headers",
											"value": "Content-Type, Authorization, Accept, Cache-Control, X-Requested-With"
										},
										{
											"key": "Vary",
											"value": "Accept-Encoding"
										},
										{
											"key": "X-Response-Time",
											"value": "125ms"
										}
									],
									"cookie": [],
									"body": "{\n    \"stats\": [\n        {\n            \"id\": \"356fe6a4-83bc-47bf-b2c0-5e2af1e505d8\",\n            \"Name\": \"Anonymous\",\n            \"Username\": \"anonymous2692\",\n            \"Login Provider\": \"device\",\n            \"Login Provider id\": \"c49cbeef-8fb4-4caa-88e9-3ca53a762618\",\n            \"Correct Answers\": 1,\n            \"Used Extra Lives\": 0\n        }\n    ]\n}"
								}
							]
						},
						{
							"name": "Increment extra lives (deprecated)",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "c3020824-aca7-4bde-b243-969f175009c9",
										"exec": [
											"tests[\"Status code is 200\"] = responseCode.code === 200;",
											"var data = JSON.parse(responseBody);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{adminToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "",
										"value": ""
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"shareCode\": \"abcd\"\n}"
								},
								"url": {
									"raw": "{{quizApiHost}}/v1/channels/{{channelId}}/streams/{{streamId}}/quiz/extraLives",
									"host": [
										"{{quizApiHost}}"
									],
									"path": [
										"v1",
										"channels",
										"{{channelId}}",
										"streams",
										"{{streamId}}",
										"quiz",
										"extraLives"
									]
								},
								"description": "Increment number of extra lives.\n\n| Permissions           | no token | anonymous token | provider token | admin token |\n| --------------------- | :------: | :-------------: | :------------: | :---------: |\n| Increment extra lives | -        | -               | -              | x           |"
							},
							"response": [
								{
									"name": "Increment extra lives",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"disabled": false
											},
											{
												"key": "",
												"value": "",
												"disabled": false
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"shareCode\": \"abcd\"\n}"
										},
										"url": {
											"raw": "{{quizApiHost}}/v1/channels/{{channelId}}/streams/{{streamId}}/quiz/extraLives",
											"host": [
												"{{quizApiHost}}"
											],
											"path": [
												"v1",
												"channels",
												"{{channelId}}",
												"streams",
												"{{streamId}}",
												"quiz",
												"extraLives"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Access-Control-Allow-Headers",
											"value": "Content-Type, Authorization, Accept, Cache-Control, X-Requested-With",
											"name": "Access-Control-Allow-Headers",
											"description": "Used in response to a preflight request to indicate which HTTP headers can be used when making the actual request."
										},
										{
											"key": "Access-Control-Allow-Methods",
											"value": "GET,PUT,POST,DELETE",
											"name": "Access-Control-Allow-Methods",
											"description": "Specifies the method or methods allowed when accessing the resource. This is used in response to a preflight request."
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*",
											"name": "Access-Control-Allow-Origin",
											"description": "Specifies a URI that may access the resource. For requests without credentials, the server may specify '*' as a wildcard, thereby allowing any origin to access the resource."
										},
										{
											"key": "Connection",
											"value": "keep-alive",
											"name": "Connection",
											"description": "Options that are desired for the connection"
										},
										{
											"key": "Content-Length",
											"value": "16",
											"name": "Content-Length",
											"description": "The length of the response body in octets (8-bit bytes)"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8",
											"name": "Content-Type",
											"description": "The mime type of this content"
										},
										{
											"key": "Date",
											"value": "Tue, 21 Aug 2018 14:50:15 GMT",
											"name": "Date",
											"description": "The date and time that the message was sent"
										},
										{
											"key": "X-Response-Time",
											"value": "83ms",
											"name": "X-Response-Time",
											"description": "Custom header"
										}
									],
									"cookie": [],
									"body": "{\"extraLives\":3}"
								}
							]
						},
						{
							"name": "Increment extra lives",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "c6c4f77f-82c2-46e9-bf9c-74574b253952",
										"exec": [
											"tests[\"Status code is 200\"] = responseCode.code === 200;",
											"var data = JSON.parse(responseBody);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{adminToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "",
										"value": ""
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"shareCode\": \"abcd\"\n}"
								},
								"url": {
									"raw": "{{quizApiHost}}/v1/extraLives",
									"host": [
										"{{quizApiHost}}"
									],
									"path": [
										"v1",
										"extraLives"
									]
								},
								"description": "Increment number of extra lives.\n\n| Permissions           | no token | anonymous token | provider token | admin token |\n| --------------------- | :------: | :-------------: | :------------: | :---------: |\n| Increment extra lives | -        | -               | -              | x           |"
							},
							"response": [
								{
									"name": "Increment extra lives",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"disabled": false
											},
											{
												"key": "",
												"value": "",
												"disabled": false
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"shareCode\": \"abcd\"\n}"
										},
										"url": {
											"raw": "{{quizApiHost}}/v1/extraLives",
											"host": [
												"{{quizApiHost}}"
											],
											"path": [
												"v1",
												"extraLives"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Access-Control-Allow-Headers",
											"value": "Content-Type, Authorization, Accept, Cache-Control, X-Requested-With",
											"name": "Access-Control-Allow-Headers",
											"description": "Used in response to a preflight request to indicate which HTTP headers can be used when making the actual request."
										},
										{
											"key": "Access-Control-Allow-Methods",
											"value": "GET,PUT,POST,DELETE",
											"name": "Access-Control-Allow-Methods",
											"description": "Specifies the method or methods allowed when accessing the resource. This is used in response to a preflight request."
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*",
											"name": "Access-Control-Allow-Origin",
											"description": "Specifies a URI that may access the resource. For requests without credentials, the server may specify '*' as a wildcard, thereby allowing any origin to access the resource."
										},
										{
											"key": "Connection",
											"value": "keep-alive",
											"name": "Connection",
											"description": "Options that are desired for the connection"
										},
										{
											"key": "Content-Length",
											"value": "16",
											"name": "Content-Length",
											"description": "The length of the response body in octets (8-bit bytes)"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8",
											"name": "Content-Type",
											"description": "The mime type of this content"
										},
										{
											"key": "Date",
											"value": "Tue, 21 Aug 2018 14:50:15 GMT",
											"name": "Date",
											"description": "The date and time that the message was sent"
										},
										{
											"key": "X-Response-Time",
											"value": "83ms",
											"name": "X-Response-Time",
											"description": "Custom header"
										}
									],
									"cookie": [],
									"body": "{\"extraLives\":3}"
								}
							]
						},
						{
							"name": "Set extra lives",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "c6c4f77f-82c2-46e9-bf9c-74574b253952",
										"exec": [
											"tests[\"Status code is 200\"] = responseCode.code === 200;",
											"var data = JSON.parse(responseBody);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{adminToken}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "",
										"value": ""
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"shareCode\": \"abcd\",\n\t\"extraLives\": 10\n}"
								},
								"url": {
									"raw": "{{quizApiHost}}/v1/extraLives",
									"host": [
										"{{quizApiHost}}"
									],
									"path": [
										"v1",
										"extraLives"
									]
								},
								"description": "Set number of extra lives.\n\n| Permissions           | no token | anonymous token | provider token | admin token |\n| --------------------- | :------: | :-------------: | :------------: | :---------: |\n| Set extra lives       | -        | -               | -              | x           |"
							},
							"response": [
								{
									"name": "Set extra lives",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"disabled": false
											},
											{
												"key": "",
												"value": "",
												"disabled": false
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"shareCode\": \"abcd\",\n\t\"extraLives\": 10\n}"
										},
										"url": {
											"raw": "{{quizApiHost}}/v1/extraLives",
											"host": [
												"{{quizApiHost}}"
											],
											"path": [
												"v1",
												"extraLives"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Access-Control-Allow-Headers",
											"value": "Content-Type, Authorization, Accept, Cache-Control, X-Requested-With",
											"name": "Access-Control-Allow-Headers",
											"description": "Used in response to a preflight request to indicate which HTTP headers can be used when making the actual request."
										},
										{
											"key": "Access-Control-Allow-Methods",
											"value": "GET,PUT,POST,DELETE",
											"name": "Access-Control-Allow-Methods",
											"description": "Specifies the method or methods allowed when accessing the resource. This is used in response to a preflight request."
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*",
											"name": "Access-Control-Allow-Origin",
											"description": "Specifies a URI that may access the resource. For requests without credentials, the server may specify '*' as a wildcard, thereby allowing any origin to access the resource."
										},
										{
											"key": "Connection",
											"value": "keep-alive",
											"name": "Connection",
											"description": "Options that are desired for the connection"
										},
										{
											"key": "Content-Length",
											"value": "16",
											"name": "Content-Length",
											"description": "The length of the response body in octets (8-bit bytes)"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8",
											"name": "Content-Type",
											"description": "The mime type of this content"
										},
										{
											"key": "Date",
											"value": "Tue, 21 Aug 2018 14:50:15 GMT",
											"name": "Date",
											"description": "The date and time that the message was sent"
										},
										{
											"key": "X-Response-Time",
											"value": "83ms",
											"name": "X-Response-Time",
											"description": "Custom header"
										}
									],
									"cookie": [],
									"body": "{\"extraLives\":3}"
								}
							]
						},
						{
							"name": "Get quiz statistics",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "4ab2be4e-73fa-481d-b157-20c6bf1a5717",
										"exec": [
											"tests[\"Status code is 200\"] = responseCode.code === 200;",
											"var data = JSON.parse(responseBody);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{adminToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "",
										"value": ""
									}
								],
								"url": {
									"raw": "{{quizApiHost}}/v1/channels/{{channelId}}/streams/{{streamId}}/quiz/{{quizId}}/stats",
									"host": [
										"{{quizApiHost}}"
									],
									"path": [
										"v1",
										"channels",
										"{{channelId}}",
										"streams",
										"{{streamId}}",
										"quiz",
										"{{quizId}}",
										"stats"
									]
								},
								"description": "Get the quiz statistics"
							},
							"response": [
								{
									"name": "Empty stats (no questions triggered)",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "",
												"value": ""
											}
										],
										"url": {
											"raw": "{{quizApiHost}}/v1/channels/{{channelId}}/streams/{{streamId}}/quiz/{{quizId}}/stats",
											"host": [
												"{{quizApiHost}}"
											],
											"path": [
												"v1",
												"channels",
												"{{channelId}}",
												"streams",
												"{{streamId}}",
												"quiz",
												"{{quizId}}",
												"stats"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Date",
											"value": "Thu, 25 Apr 2019 08:07:25 GMT"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "2"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "Access-Control-Allow-Methods",
											"value": "GET,PUT,POST,DELETE"
										},
										{
											"key": "Access-Control-Allow-Headers",
											"value": "Content-Type, Authorization, Accept, Cache-Control, X-Requested-With"
										},
										{
											"key": "Vary",
											"value": "Accept-Encoding"
										},
										{
											"key": "X-Response-Time",
											"value": "144ms"
										}
									],
									"cookie": [],
									"body": "{}"
								},
								{
									"name": "Stats with several questions",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "",
												"value": ""
											}
										],
										"url": {
											"raw": "{{quizApiHost}}/v1/channels/{{channelId}}/streams/{{streamId}}/quiz/{{quizId}}/stats",
											"host": [
												"{{quizApiHost}}"
											],
											"path": [
												"v1",
												"channels",
												"{{channelId}}",
												"streams",
												"{{streamId}}",
												"quiz",
												"{{quizId}}",
												"stats"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Date",
											"value": "Thu, 25 Apr 2019 08:07:25 GMT"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "2"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "Access-Control-Allow-Methods",
											"value": "GET,PUT,POST,DELETE"
										},
										{
											"key": "Access-Control-Allow-Headers",
											"value": "Content-Type, Authorization, Accept, Cache-Control, X-Requested-With"
										},
										{
											"key": "Vary",
											"value": "Accept-Encoding"
										},
										{
											"key": "X-Response-Time",
											"value": "144ms"
										}
									],
									"cookie": [],
									"body": "[\n    {\n        \"correct\": [\n            1\n        ],\n        \"updatedAt\": \"2019-04-24T14:58:02.650Z\",\n        \"launchedAt\": \"2019-04-24T14:57:44.416Z\",\n        \"createdAt\": \"2018-09-24T10:55:07.150Z\",\n        \"answers\": [\n            {\n                \"id\": 0,\n                \"text\": \"De grootste openlucht filmstudio\"\n            },\n            {\n                \"id\": 1,\n                \"text\": \"De grootste onderwater filmstudio\"\n            },\n            {\n                \"id\": 2,\n                \"text\": \"De grootste ondergrondse filmstudio\"\n            }\n        ],\n        \"text\": \"Welke filmstudio komt er in 2019 naar Vlaanderen?\",\n        \"id\": \"b1aa3e58-33a7-41ba-8553-cb4d7400a326\",\n        \"launchIndex\": 1,\n        \"quizId\": \"c6bb121c-3e9b-41ac-9b4a-486b12df4432\",\n        \"redeemable\": true,\n        \"closeAt\": \"2019-04-24T14:57:55.916Z\",\n        \"answerAt\": \"2019-04-24T14:58:02.639Z\",\n        \"stats\": {\n            \"answers\": {\n                \"1\": 3\n            },\n            \"stoppedPlaying\": 0,\n            \"extraLives\": 0\n        }\n    },\n    {\n        \"correct\": [\n            1\n        ],\n        \"updatedAt\": \"2019-04-24T14:58:32.520Z\",\n        \"launchedAt\": \"2019-04-24T14:58:13.151Z\",\n        \"createdAt\": \"2018-09-24T10:56:16.055Z\",\n        \"answers\": [\n            {\n                \"id\": 0,\n                \"text\": \"de Brit Kevin Coin\"\n            },\n            {\n                \"id\": 1,\n                \"text\": \"de Hongaar Laszlo Hanyecz\"\n            },\n            {\n                \"id\": 2,\n                \"text\": \"de Japanner Satoshi Nakamoto\"\n            }\n        ],\n        \"text\": \"Wie gebruikte als eerste de Bitcoin voor een echte commerciële transactie?\",\n        \"id\": \"1e9b0c9a-0986-4ecb-b5bc-6f086e05f4e4\",\n        \"launchIndex\": 2,\n        \"quizId\": \"c6bb121c-3e9b-41ac-9b4a-486b12df4432\",\n        \"redeemable\": false,\n        \"closeAt\": \"2019-04-24T14:58:24.651Z\",\n        \"answerAt\": \"2019-04-24T14:58:32.510Z\",\n        \"stats\": {\n            \"answers\": {\n                \"0\": 1,\n                \"1\": 2\n            },\n            \"stoppedPlaying\": 0,\n            \"extraLives\": 0\n        }\n    },\n    {\n        \"correct\": [\n            0\n        ],\n        \"updatedAt\": \"2019-04-24T14:59:03.408Z\",\n        \"launchedAt\": \"2019-04-24T14:58:44.748Z\",\n        \"createdAt\": \"2018-09-24T10:55:49.255Z\",\n        \"answers\": [\n            {\n                \"id\": 0,\n                \"text\": \"René Redzepi\"\n            },\n            {\n                \"id\": 1,\n                \"text\": \"Peter Goossens\"\n            },\n            {\n                \"id\": 2,\n                \"text\": \"Heston Blumenthal\"\n            }\n        ],\n        \"text\": \"Welke van deze sterrenchefs had ooit het beste restaurant ter wereld?\",\n        \"id\": \"9be4c0df-9680-405d-89ea-06dd047cb6f4\",\n        \"launchIndex\": 3,\n        \"quizId\": \"c6bb121c-3e9b-41ac-9b4a-486b12df4432\",\n        \"redeemable\": true,\n        \"closeAt\": \"2019-04-24T14:58:56.248Z\",\n        \"answerAt\": \"2019-04-24T14:59:03.397Z\",\n        \"stats\": {\n            \"answers\": {\n                \"0\": 1\n            },\n            \"stoppedPlaying\": 1,\n            \"extraLives\": 0\n        }\n    }\n]"
								}
							]
						}
					],
					"_postman_isSubFolder": true
				}
			]
		}
	]
}